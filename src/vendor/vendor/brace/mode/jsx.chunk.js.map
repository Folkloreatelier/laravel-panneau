{"version":3,"sources":["webpack:///vendor/brace/mode/jsx.chunk.js","webpack:////Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/jsx.js"],"names":["webpackJsonppanneau","275","module","exports","ace","define","acequire","oop","TextHighlightRules","DocCommentHighlightRules","this","$rules","start","token","regex","getTagRule","defaultToken","caseInsensitive","inherits","getStartRule","next","getEndRule","lang","JsxHighlightRules","keywords","arrayToMap","split","buildinConstants","reserved","value","hasOwnProperty","test","comment","embedRules","Range","MatchingBraceOutdent","checkOutdent","line","input","autoOutdent","doc","row","getLine","match","column","length","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","i","index","openingBracketBlock","range","getCommentFoldRange","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","subRange","re","depth","m","exec","Mode","HighlightRules","$outdent","$behaviour","CstyleBehaviour","foldingRules","CStyleFoldMode","TextMode","lineCommentStart","blockComment","getNextLineIndent","state","tab","tokenizedLine","getTokenizer","getLineTokens","tokens","type","$id"],"mappings":"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","file":"vendor/brace/mode/jsx.chunk.js","sourcesContent":["webpackJsonppanneau([176],{\n\n/***/ 275:\n/***/ (function(module, exports) {\n\nace.define(\"ace/mode/doc_comment_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextHighlightRules=acequire(\"./text_highlight_rules\").TextHighlightRules;var DocCommentHighlightRules=function DocCommentHighlightRules(){this.$rules={\"start\":[{token:\"comment.doc.tag\",regex:\"@[\\\\w\\\\d_]+\"// TODO: fix email addresses\n},DocCommentHighlightRules.getTagRule(),{defaultToken:\"comment.doc\",caseInsensitive:true}]};};oop.inherits(DocCommentHighlightRules,TextHighlightRules);DocCommentHighlightRules.getTagRule=function(start){return{token:\"comment.doc.tag.storage.type\",regex:\"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"};};DocCommentHighlightRules.getStartRule=function(start){return{token:\"comment.doc\",// doc comment\nregex:\"\\\\/\\\\*(?=\\\\*)\",next:start};};DocCommentHighlightRules.getEndRule=function(start){return{token:\"comment.doc\",// closing comment\nregex:\"\\\\*\\\\/\",next:start};};exports.DocCommentHighlightRules=DocCommentHighlightRules;});ace.define(\"ace/mode/jsx_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/mode/doc_comment_highlight_rules\",\"ace/mode/text_highlight_rules\"],function(acequire,exports,module){var oop=acequire(\"../lib/oop\");var lang=acequire(\"../lib/lang\");var DocCommentHighlightRules=acequire(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;var TextHighlightRules=acequire(\"./text_highlight_rules\").TextHighlightRules;var JsxHighlightRules=function JsxHighlightRules(){var keywords=lang.arrayToMap((\"break|do|instanceof|typeof|case|else|new|var|catch|finally|return|void|continue|for|switch|default|while|function|this|\"+\"if|throw|\"+\"delete|in|try|\"+\"class|extends|super|import|from|into|implements|interface|static|mixin|override|abstract|final|\"+\"number|int|string|boolean|variant|\"+\"log|assert\").split(\"|\"));var buildinConstants=lang.arrayToMap(\"null|true|false|NaN|Infinity|__FILE__|__LINE__|undefined\".split(\"|\"));var reserved=lang.arrayToMap((\"debugger|with|\"+\"const|export|\"+\"let|private|public|yield|protected|\"+\"extern|native|as|operator|__fake__|__readonly__\").split(\"|\"));var identifierRe=\"[a-zA-Z_][a-zA-Z0-9_]*\\\\b\";this.$rules={\"start\":[{token:\"comment\",regex:\"\\\\/\\\\/.*$\"},DocCommentHighlightRules.getStartRule(\"doc-start\"),{token:\"comment\",// multi line comment\nregex:\"\\\\/\\\\*\",next:\"comment\"},{token:\"string.regexp\",regex:\"[/](?:(?:\\\\[(?:\\\\\\\\]|[^\\\\]])+\\\\])|(?:\\\\\\\\/|[^\\\\]/]))*[/]\\\\w*\\\\s*(?=[).,;]|$)\"},{token:\"string\",// single line\nregex:'[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'},{token:\"string\",// single line\nregex:\"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"},{token:\"constant.numeric\",// hex\nregex:\"0[xX][0-9a-fA-F]+\\\\b\"},{token:\"constant.numeric\",// float\nregex:\"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"},{token:\"constant.language.boolean\",regex:\"(?:true|false)\\\\b\"},{token:[\"storage.type\",\"text\",\"entity.name.function\"],regex:\"(function)(\\\\s+)(\"+identifierRe+\")\"},{token:function token(value){if(value==\"this\")return\"variable.language\";else if(value==\"function\")return\"storage.type\";else if(keywords.hasOwnProperty(value)||reserved.hasOwnProperty(value))return\"keyword\";else if(buildinConstants.hasOwnProperty(value))return\"constant.language\";else if(/^_?[A-Z][a-zA-Z0-9_]*$/.test(value))return\"language.support.class\";else return\"identifier\";},regex:identifierRe},{token:\"keyword.operator\",regex:\"!|%|&|\\\\*|\\\\-\\\\-|\\\\-|\\\\+\\\\+|\\\\+|~|==|=|!=|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\\\|\\\\||\\\\?\\\\:|\\\\*=|%=|\\\\+=|\\\\-=|&=|\\\\^=|\\\\b(?:in|instanceof|new|delete|typeof|void)\"},{token:\"punctuation.operator\",regex:\"\\\\?|\\\\:|\\\\,|\\\\;|\\\\.\"},{token:\"paren.lparen\",regex:\"[[({<]\"},{token:\"paren.rparen\",regex:\"[\\\\])}>]\"},{token:\"text\",regex:\"\\\\s+\"}],\"comment\":[{token:\"comment\",// closing comment\nregex:\".*?\\\\*\\\\/\",next:\"start\"},{token:\"comment\",// comment spanning whole line\nregex:\".+\"}]};this.embedRules(DocCommentHighlightRules,\"doc-\",[DocCommentHighlightRules.getEndRule(\"start\")]);};oop.inherits(JsxHighlightRules,TextHighlightRules);exports.JsxHighlightRules=JsxHighlightRules;});ace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"],function(acequire,exports,module){\"use strict\";var Range=acequire(\"../range\").Range;var MatchingBraceOutdent=function MatchingBraceOutdent(){};(function(){this.checkOutdent=function(line,input){if(!/^\\s+$/.test(line))return false;return /^\\s*\\}/.test(input);};this.autoOutdent=function(doc,row){var line=doc.getLine(row);var match=line.match(/^(\\s*\\})/);if(!match)return 0;var column=match[1].length;var openBracePos=doc.findMatchingBracket({row:row,column:column});if(!openBracePos||openBracePos.row==row)return 0;var indent=this.$getIndent(doc.getLine(openBracePos.row));doc.replace(new Range(row,0,row,column-1),indent);};this.$getIndent=function(line){return line.match(/^\\s*/)[0];};}).call(MatchingBraceOutdent.prototype);exports.MatchingBraceOutdent=MatchingBraceOutdent;});ace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../../lib/oop\");var Range=acequire(\"../../range\").Range;var BaseFoldMode=acequire(\"./fold_mode\").FoldMode;var FoldMode=exports.FoldMode=function(commentRegex){if(commentRegex){this.foldingStartMarker=new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/,\"|\"+commentRegex.start));this.foldingStopMarker=new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/,\"|\"+commentRegex.end));}};oop.inherits(FoldMode,BaseFoldMode);(function(){this.foldingStartMarker=/(\\{|\\[)[^\\}\\]]*$|^\\s*(\\/\\*)/;this.foldingStopMarker=/^[^\\[\\{]*(\\}|\\])|^[\\s\\*]*(\\*\\/)/;this.singleLineBlockCommentRe=/^\\s*(\\/\\*).*\\*\\/\\s*$/;this.tripleStarBlockCommentRe=/^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;this.startRegionRe=/^\\s*(\\/\\*|\\/\\/)#?region\\b/;this._getFoldWidgetBase=this.getFoldWidget;this.getFoldWidget=function(session,foldStyle,row){var line=session.getLine(row);if(this.singleLineBlockCommentRe.test(line)){if(!this.startRegionRe.test(line)&&!this.tripleStarBlockCommentRe.test(line))return\"\";}var fw=this._getFoldWidgetBase(session,foldStyle,row);if(!fw&&this.startRegionRe.test(line))return\"start\";// lineCommentRegionStart\nreturn fw;};this.getFoldWidgetRange=function(session,foldStyle,row,forceMultiline){var line=session.getLine(row);if(this.startRegionRe.test(line))return this.getCommentRegionBlock(session,line,row);var match=line.match(this.foldingStartMarker);if(match){var i=match.index;if(match[1])return this.openingBracketBlock(session,match[1],row,i);var range=session.getCommentFoldRange(row,i+match[0].length,1);if(range&&!range.isMultiLine()){if(forceMultiline){range=this.getSectionRange(session,row);}else if(foldStyle!=\"all\")range=null;}return range;}if(foldStyle===\"markbegin\")return;var match=line.match(this.foldingStopMarker);if(match){var i=match.index+match[0].length;if(match[1])return this.closingBracketBlock(session,match[1],row,i);return session.getCommentFoldRange(row,i,-1);}};this.getSectionRange=function(session,row){var line=session.getLine(row);var startIndent=line.search(/\\S/);var startRow=row;var startColumn=line.length;row=row+1;var endRow=row;var maxRow=session.getLength();while(++row<maxRow){line=session.getLine(row);var indent=line.search(/\\S/);if(indent===-1)continue;if(startIndent>indent)break;var subRange=this.getFoldWidgetRange(session,\"all\",row);if(subRange){if(subRange.start.row<=startRow){break;}else if(subRange.isMultiLine()){row=subRange.end.row;}else if(startIndent==indent){break;}}endRow=row;}return new Range(startRow,startColumn,endRow,session.getLine(endRow).length);};this.getCommentRegionBlock=function(session,line,row){var startColumn=line.search(/\\s*$/);var maxRow=session.getLength();var startRow=row;var re=/^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;var depth=1;while(++row<maxRow){line=session.getLine(row);var m=re.exec(line);if(!m)continue;if(m[1])depth--;else depth++;if(!depth)break;}var endRow=row;if(endRow>startRow){return new Range(startRow,startColumn,endRow,line.length);}};}).call(FoldMode.prototype);});ace.define(\"ace/mode/jsx\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/jsx_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/mode/behaviour/cstyle\",\"ace/mode/folding/cstyle\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextMode=acequire(\"./text\").Mode;var JsxHighlightRules=acequire(\"./jsx_highlight_rules\").JsxHighlightRules;var MatchingBraceOutdent=acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;var CstyleBehaviour=acequire(\"./behaviour/cstyle\").CstyleBehaviour;var CStyleFoldMode=acequire(\"./folding/cstyle\").FoldMode;function Mode(){this.HighlightRules=JsxHighlightRules;this.$outdent=new MatchingBraceOutdent();this.$behaviour=new CstyleBehaviour();this.foldingRules=new CStyleFoldMode();}oop.inherits(Mode,TextMode);(function(){this.lineCommentStart=\"//\";this.blockComment={start:\"/*\",end:\"*/\"};this.getNextLineIndent=function(state,line,tab){var indent=this.$getIndent(line);var tokenizedLine=this.getTokenizer().getLineTokens(line,state);var tokens=tokenizedLine.tokens;if(tokens.length&&tokens[tokens.length-1].type==\"comment\"){return indent;}if(state==\"start\"){var match=line.match(/^.*[\\{\\(\\[]\\s*$/);if(match){indent+=tab;}}return indent;};this.checkOutdent=function(state,line,input){return this.$outdent.checkOutdent(line,input);};this.autoOutdent=function(state,doc,row){this.$outdent.autoOutdent(doc,row);};this.$id=\"ace/mode/jsx\";}).call(Mode.prototype);exports.Mode=Mode;});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// vendor/brace/mode/jsx.chunk.js","ace.define(\"ace/mode/doc_comment_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar DocCommentHighlightRules = function() {\n    this.$rules = {\n        \"start\" : [ {\n            token : \"comment.doc.tag\",\n            regex : \"@[\\\\w\\\\d_]+\" // TODO: fix email addresses\n        }, \n        DocCommentHighlightRules.getTagRule(),\n        {\n            defaultToken : \"comment.doc\",\n            caseInsensitive: true\n        }]\n    };\n};\n\noop.inherits(DocCommentHighlightRules, TextHighlightRules);\n\nDocCommentHighlightRules.getTagRule = function(start) {\n    return {\n        token : \"comment.doc.tag.storage.type\",\n        regex : \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n}\n\nDocCommentHighlightRules.getStartRule = function(start) {\n    return {\n        token : \"comment.doc\", // doc comment\n        regex : \"\\\\/\\\\*(?=\\\\*)\",\n        next  : start\n    };\n};\n\nDocCommentHighlightRules.getEndRule = function (start) {\n    return {\n        token : \"comment.doc\", // closing comment\n        regex : \"\\\\*\\\\/\",\n        next  : start\n    };\n};\n\n\nexports.DocCommentHighlightRules = DocCommentHighlightRules;\n\n});\n\nace.define(\"ace/mode/jsx_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/mode/doc_comment_highlight_rules\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\nvar oop = acequire(\"../lib/oop\");\nvar lang = acequire(\"../lib/lang\");\nvar DocCommentHighlightRules = acequire(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar JsxHighlightRules = function() {\n    var keywords = lang.arrayToMap(\n        (\"break|do|instanceof|typeof|case|else|new|var|catch|finally|return|void|continue|for|switch|default|while|function|this|\" +\n         \"if|throw|\" +\n         \"delete|in|try|\" +\n         \"class|extends|super|import|from|into|implements|interface|static|mixin|override|abstract|final|\" +\n         \"number|int|string|boolean|variant|\" +\n         \"log|assert\").split(\"|\")\n    );\n    \n    var buildinConstants = lang.arrayToMap(\n        (\"null|true|false|NaN|Infinity|__FILE__|__LINE__|undefined\").split(\"|\")\n    );\n    \n    var reserved = lang.arrayToMap(\n        (\"debugger|with|\" +\n         \"const|export|\" +\n         \"let|private|public|yield|protected|\" +\n         \"extern|native|as|operator|__fake__|__readonly__\").split(\"|\")\n    );\n    \n    var identifierRe = \"[a-zA-Z_][a-zA-Z0-9_]*\\\\b\";\n    \n    this.$rules = {\n        \"start\" : [\n            {\n                token : \"comment\",\n                regex : \"\\\\/\\\\/.*$\"\n            },\n            DocCommentHighlightRules.getStartRule(\"doc-start\"),\n            {\n                token : \"comment\", // multi line comment\n                regex : \"\\\\/\\\\*\",\n                next : \"comment\"\n            }, {\n                token : \"string.regexp\",\n                regex : \"[/](?:(?:\\\\[(?:\\\\\\\\]|[^\\\\]])+\\\\])|(?:\\\\\\\\/|[^\\\\]/]))*[/]\\\\w*\\\\s*(?=[).,;]|$)\"\n            }, {\n                token : \"string\", // single line\n                regex : '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n            }, {\n                token : \"string\", // single line\n                regex : \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n            }, {\n                token : \"constant.numeric\", // hex\n                regex : \"0[xX][0-9a-fA-F]+\\\\b\"\n            }, {\n                token : \"constant.numeric\", // float\n                regex : \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n            }, {\n                token : \"constant.language.boolean\",\n                regex : \"(?:true|false)\\\\b\"\n            }, {\n                token : [\n                    \"storage.type\",\n                    \"text\",\n                    \"entity.name.function\"\n                ],\n                regex : \"(function)(\\\\s+)(\" + identifierRe + \")\"\n            }, {\n                token : function(value) {\n                    if (value == \"this\")\n                        return \"variable.language\";\n                    else if (value == \"function\")\n                        return \"storage.type\";\n                    else if (keywords.hasOwnProperty(value) || reserved.hasOwnProperty(value))\n                        return \"keyword\";\n                    else if (buildinConstants.hasOwnProperty(value))\n                        return \"constant.language\";\n                    else if (/^_?[A-Z][a-zA-Z0-9_]*$/.test(value))\n                        return \"language.support.class\";\n                    else\n                        return \"identifier\";\n                },\n                regex : identifierRe\n            }, {\n                token : \"keyword.operator\",\n                regex : \"!|%|&|\\\\*|\\\\-\\\\-|\\\\-|\\\\+\\\\+|\\\\+|~|==|=|!=|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\\\|\\\\||\\\\?\\\\:|\\\\*=|%=|\\\\+=|\\\\-=|&=|\\\\^=|\\\\b(?:in|instanceof|new|delete|typeof|void)\"\n            }, {\n                token : \"punctuation.operator\",\n                regex : \"\\\\?|\\\\:|\\\\,|\\\\;|\\\\.\"\n            }, {\n                token : \"paren.lparen\",\n                regex : \"[[({<]\"\n            }, {\n                token : \"paren.rparen\",\n                regex : \"[\\\\])}>]\"\n            }, {\n                token : \"text\",\n                regex : \"\\\\s+\"\n            }\n        ],\n        \"comment\" : [\n            {\n                token : \"comment\", // closing comment\n                regex : \".*?\\\\*\\\\/\",\n                next : \"start\"\n            }, {\n                token : \"comment\", // comment spanning whole line\n                regex : \".+\"\n            }\n        ]\n    };\n    \n    this.embedRules(DocCommentHighlightRules, \"doc-\",\n        [ DocCommentHighlightRules.getEndRule(\"start\") ]);\n};\n\noop.inherits(JsxHighlightRules, TextHighlightRules);\n\nexports.JsxHighlightRules = JsxHighlightRules;\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar Range = acequire(\"../range\").Range;\n\nvar MatchingBraceOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        return line.match(/^\\s*/)[0];\n    };\n\n}).call(MatchingBraceOutdent.prototype);\n\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar Range = acequire(\"../../range\").Range;\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    \n    this.foldingStartMarker = /(\\{|\\[)[^\\}\\]]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{]*(\\}|\\])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n    \n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n    \n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n    \n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n    \n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        \n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        \n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n                \n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            \n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n            \n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    \n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            \n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        \n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/jsx\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/jsx_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/mode/behaviour/cstyle\",\"ace/mode/folding/cstyle\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar JsxHighlightRules = acequire(\"./jsx_highlight_rules\").JsxHighlightRules;\nvar MatchingBraceOutdent = acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar CstyleBehaviour = acequire(\"./behaviour/cstyle\").CstyleBehaviour;\nvar CStyleFoldMode = acequire(\"./folding/cstyle\").FoldMode;\n\nfunction Mode() {\n    this.HighlightRules = JsxHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = new CstyleBehaviour();\n    this.foldingRules = new CStyleFoldMode();\n}\noop.inherits(Mode, TextMode);\n\n(function() {\n\n    this.lineCommentStart = \"//\";\n    this.blockComment = {start: \"/*\", end: \"*/\"};\n\n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n\n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\n            return indent;\n        }\n\n        if (state == \"start\") {\n            var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        }\n\n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.$id = \"ace/mode/jsx\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n\n\n\n// WEBPACK FOOTER //\n// /Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/jsx.js"],"sourceRoot":""}