{"version":3,"sources":["webpack:///vendor/brace/mode/latex.chunk.js","webpack:////Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/latex.js"],"names":["webpackJsonppanneau","402","module","exports","ace","define","acequire","oop","TextHighlightRules","LatexHighlightRules","this","$rules","start","token","regex","next","equation","defaultToken","inherits","BaseFoldMode","FoldMode","Range","TokenIterator","foldingStartMarker","foldingStopMarker","getFoldWidgetRange","session","foldStyle","row","line","doc","getLine","match","exec","latexBlock","length","latexSection","openingBracketBlock","index","closingBracketBlock","column","keywords","\\begin","\\end","stream","getCurrentToken","type","val","value","dir","getType","stepForward","stepBackward","stack","startColumn","getCurrentTokenColumn","startRow","step","level","unshift","shift","getCurrentTokenRow","startLevel","indexOf","stackDepth","endRow","test","call","prototype","TextMode","Mode","LatexFoldMode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","$id"],"mappings":"AAAAA,qBAAqB,MAEfC,IACA,SAAUC,EAAQC,GCHxBC,IAAIC,OAAO,kCAAkC,UAAU,UAAU,SAAS,cAAc,iCAAkC,SAASC,EAAUH,EAASD,GACtJ,YAEA,IAAIK,GAAMD,EAAS,cACfE,EAAqBF,EAAS,0BAA0BE,mBAExDC,EAAsB,WAEtBC,KAAKC,QACDC,QACIC,MAAQ,UACRC,MAAQ,SAERD,OAAS,UAAW,SAAU,qBAAsB,SAAU,SAAU,eAAgB,UACxFC,MAAQ,kFAERD,OAAS,UAAU,SAAU,qBAAsB,UACnDC,MAAQ,0DAERD,OAAS,eAAgB,SAAU,qBAAsB,UACzDC,MAAQ,oCAERD,MAAQ,eACRC,MAAQ,kBAERD,MAAQ,SACRC,MAAQ,UAERD,MAAQ,SACRC,MAAQ,YAERD,MAAQ,4BACRC,MAAQ,mBAERD,MAAQ,SACRC,MAAQ,WACRC,KAAQ,aAEZC,WACIH,MAAQ,UACRC,MAAQ,SAERD,MAAQ,SACRC,MAAQ,WACRC,KAAQ,UAERF,MAAQ,4BACRC,MAAQ,gCAERD,MAAQ,QACRC,MAAQ,SACRC,KAAO,UAEPE,aAAe,YAK3BV,GAAIW,SAAST,EAAqBD,GAElCL,EAAQM,oBAAsBA,IAI9BL,IAAIC,OAAO,0BAA0B,UAAU,UAAU,SAAS,cAAc,6BAA6B,YAAY,sBAAuB,SAASC,EAAUH,EAASD,GAC5K,YAEA,IAAIK,GAAMD,EAAS,iBACfa,EAAeb,EAAS,eAAec,SACvCC,EAAQf,EAAS,eAAee,MAChCC,EAAgBhB,EAAS,wBAAwBgB,cAEjDF,EAAWjB,EAAQiB,SAAW,YAElCb,GAAIW,SAASE,EAAUD,GAEvB,WAEIT,KAAKa,mBAAqB,uDAC1Bb,KAAKc,kBAAoB,sBAEzBd,KAAKe,mBAAqB,SAASC,EAASC,EAAWC,GACnD,GAAIC,GAAOH,EAAQI,IAAIC,QAAQH,GAC3BI,EAAQtB,KAAKa,mBAAmBU,KAAKJ,EACzC,IAAIG,EACA,MAAIA,GAAM,GACCtB,KAAKwB,WAAWR,EAASE,EAAKI,EAAM,GAAGG,OAAS,GACvDH,EAAM,GACCtB,KAAK0B,aAAaV,EAASE,EAAKI,EAAM,GAAGG,OAAS,GAEtDzB,KAAK2B,oBAAoBX,EAAS,IAAKE,EAAKI,EAAMM,MAG7D,IAAIN,GAAQtB,KAAKc,kBAAkBS,KAAKJ,EACxC,OAAIG,GACIA,EAAM,GACCtB,KAAKwB,WAAWR,EAASE,EAAKI,EAAM,GAAGG,OAAS,GAEpDzB,KAAK6B,oBAAoBb,EAAS,IAAKE,EAAKI,EAAMM,MAAQN,EAAM,GAAGG,YAJ9E,IAQJzB,KAAKwB,WAAa,SAASR,EAASE,EAAKY,GACrC,GAAIC,IACAC,UAAW,EACXC,SAAU,GAGVC,EAAS,GAAItB,GAAcI,EAASE,EAAKY,GACzC3B,EAAQ+B,EAAOC,iBACnB,IAAKhC,IAAyB,gBAAdA,EAAMiC,MAAwC,6BAAdjC,EAAMiC,MAAtD,CAGA,GAAIC,GAAMlC,EAAMmC,MACZC,EAAMR,EAASM,GAEfG,EAAU,WACV,GAAIrC,GAAQ+B,EAAOO,cACfL,EAAqB,UAAdjC,EAAMiC,KAAkBF,EAAOO,cAAcH,MAAQ,EAMhE,QALa,IAATC,IACAL,EAAOQ,eACHN,GACAF,EAAOQ,gBAERN,GAEPO,GAASH,KACTI,GAAuB,IAATL,EAAaL,EAAOW,wBAA0B7B,EAAQK,QAAQH,GAAKO,OACjFqB,EAAW5B,CAGf,KADAgB,EAAOa,MAAgB,IAATR,EAAaL,EAAOQ,aAAeR,EAAOO,YAClDtC,EAAQ+B,EAAOa,QACjB,GAAK5C,IAAyB,gBAAdA,EAAMiC,MAAwC,6BAAdjC,EAAMiC,MAAtD,CAEA,GAAIY,GAAQjB,EAAS5B,EAAMmC,MAC3B,IAAKU,EAAL,CAEA,GAAIZ,GAAOI,GACX,IAAIQ,IAAUT,EACVI,EAAMM,QAAQb,OACb,IAAIO,EAAMO,UAAYd,IAASO,EAAMlB,OACtC,OAGR,IAAIkB,EAAMlB,OAAV,CAGA,GAAIP,GAAMgB,EAAOiB,oBACjB,QAAa,IAATZ,EACO,GAAI5B,GAAMO,EAAKF,EAAQK,QAAQH,GAAKO,OAAQqB,EAAUF,IACjEV,EAAOQ,eACA,GAAI/B,GAAMmC,EAAUF,EAAa1B,EAAKgB,EAAOW,6BAGxD7C,KAAK0B,aAAe,SAASV,EAASE,EAAKY,GACvC,GAAIC,IAAY,eAAgB,YAAa,UAAW,QAAS,eAE7DG,EAAS,GAAItB,GAAcI,EAASE,EAAKY,GACzC3B,EAAQ+B,EAAOC,iBACnB,IAAKhC,GAAuB,gBAAdA,EAAMiC,KAApB,CAOA,IAJA,GAAIgB,GAAarB,EAASsB,QAAQlD,EAAMmC,OACpCgB,EAAa,EACbC,EAASrC,EAEPf,EAAQ+B,EAAOO,eACjB,GAAmB,iBAAftC,EAAMiC,KAAV,CAEA,GAAIY,GAAQjB,EAASsB,QAAQlD,EAAMmC,MAEnC,IAAIU,GAAS,GAIT,GAHKM,IACDC,EAASrB,EAAOiB,qBAAuB,IAC3CG,GAAuB,GAATN,EAAa,GAAM,GAChB,EACb,UACD,IAAIA,GAASI,EAChB,MAMR,IAHKE,IACDC,EAASrB,EAAOiB,qBAAuB,GAEpCI,EAASrC,IAAQ,KAAKsC,KAAKxC,EAAQK,QAAQkC,KAC9CA,GAEJ,OAAO,IAAI5C,GACPO,EAAKF,EAAQK,QAAQH,GAAKO,OAC1B8B,EAAQvC,EAAQK,QAAQkC,GAAQ9B,WAIzCgC,KAAK/C,EAASgD,aAIjBhE,IAAIC,OAAO,kBAAkB,UAAU,UAAU,SAAS,cAAc,gBAAgB,iCAAiC,0BAA2B,SAASC,EAAUH,EAASD,GAChL,YAEA,IAAIK,GAAMD,EAAS,cACf+D,EAAW/D,EAAS,UAAUgE,KAC9B7D,EAAsBH,EAAS,2BAA2BG,oBAC1D8D,EAAgBjE,EAAS,mBAAmBc,SAE5CkD,EAAO,WACP5D,KAAK8D,eAAiB/D,EACtBC,KAAK+D,aAAe,GAAIF,GACxB7D,KAAKgE,WAAahE,KAAKiE,kBAE3BpE,GAAIW,SAASoD,EAAMD,GAEnB,WACI3D,KAAKoC,KAAO,OAEZpC,KAAKkE,iBAAmB,IAExBlE,KAAKmE,IAAM,kBACZV,KAAKG,EAAKF,WAEbjE,EAAQmE,KAAOA","file":"vendor/brace/mode/latex.chunk.js","sourcesContent":["webpackJsonppanneau([173],{\n\n/***/ 402:\n/***/ (function(module, exports) {\n\nace.define(\"ace/mode/latex_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextHighlightRules=acequire(\"./text_highlight_rules\").TextHighlightRules;var LatexHighlightRules=function LatexHighlightRules(){this.$rules={\"start\":[{token:\"comment\",regex:\"%.*$\"},{token:[\"keyword\",\"lparen\",\"variable.parameter\",\"rparen\",\"lparen\",\"storage.type\",\"rparen\"],regex:\"(\\\\\\\\(?:documentclass|usepackage|input))(?:(\\\\[)([^\\\\]]*)(\\\\]))?({)([^}]*)(})\"},{token:[\"keyword\",\"lparen\",\"variable.parameter\",\"rparen\"],regex:\"(\\\\\\\\(?:label|v?ref|cite(?:[^{]*)))(?:({)([^}]*)(}))?\"},{token:[\"storage.type\",\"lparen\",\"variable.parameter\",\"rparen\"],regex:\"(\\\\\\\\(?:begin|end))({)(\\\\w*)(})\"},{token:\"storage.type\",regex:\"\\\\\\\\[a-zA-Z]+\"},{token:\"lparen\",regex:\"[[({]\"},{token:\"rparen\",regex:\"[\\\\])}]\"},{token:\"constant.character.escape\",regex:\"\\\\\\\\[^a-zA-Z]?\"},{token:\"string\",regex:\"\\\\${1,2}\",next:\"equation\"}],\"equation\":[{token:\"comment\",regex:\"%.*$\"},{token:\"string\",regex:\"\\\\${1,2}\",next:\"start\"},{token:\"constant.character.escape\",regex:\"\\\\\\\\(?:[^a-zA-Z]|[a-zA-Z]+)\"},{token:\"error\",regex:\"^\\\\s*$\",next:\"start\"},{defaultToken:\"string\"}]};};oop.inherits(LatexHighlightRules,TextHighlightRules);exports.LatexHighlightRules=LatexHighlightRules;});ace.define(\"ace/mode/folding/latex\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\",\"ace/token_iterator\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../../lib/oop\");var BaseFoldMode=acequire(\"./fold_mode\").FoldMode;var Range=acequire(\"../../range\").Range;var TokenIterator=acequire(\"../../token_iterator\").TokenIterator;var FoldMode=exports.FoldMode=function(){};oop.inherits(FoldMode,BaseFoldMode);(function(){this.foldingStartMarker=/^\\s*\\\\(begin)|(section|subsection|paragraph)\\b|{\\s*$/;this.foldingStopMarker=/^\\s*\\\\(end)\\b|^\\s*}/;this.getFoldWidgetRange=function(session,foldStyle,row){var line=session.doc.getLine(row);var match=this.foldingStartMarker.exec(line);if(match){if(match[1])return this.latexBlock(session,row,match[0].length-1);if(match[2])return this.latexSection(session,row,match[0].length-1);return this.openingBracketBlock(session,\"{\",row,match.index);}var match=this.foldingStopMarker.exec(line);if(match){if(match[1])return this.latexBlock(session,row,match[0].length-1);return this.closingBracketBlock(session,\"}\",row,match.index+match[0].length);}};this.latexBlock=function(session,row,column){var keywords={\"\\\\begin\":1,\"\\\\end\":-1};var stream=new TokenIterator(session,row,column);var token=stream.getCurrentToken();if(!token||!(token.type==\"storage.type\"||token.type==\"constant.character.escape\"))return;var val=token.value;var dir=keywords[val];var getType=function getType(){var token=stream.stepForward();var type=token.type==\"lparen\"?stream.stepForward().value:\"\";if(dir===-1){stream.stepBackward();if(type)stream.stepBackward();}return type;};var stack=[getType()];var startColumn=dir===-1?stream.getCurrentTokenColumn():session.getLine(row).length;var startRow=row;stream.step=dir===-1?stream.stepBackward:stream.stepForward;while(token=stream.step()){if(!token||!(token.type==\"storage.type\"||token.type==\"constant.character.escape\"))continue;var level=keywords[token.value];if(!level)continue;var type=getType();if(level===dir)stack.unshift(type);else if(stack.shift()!==type||!stack.length)break;}if(stack.length)return;var row=stream.getCurrentTokenRow();if(dir===-1)return new Range(row,session.getLine(row).length,startRow,startColumn);stream.stepBackward();return new Range(startRow,startColumn,row,stream.getCurrentTokenColumn());};this.latexSection=function(session,row,column){var keywords=[\"\\\\subsection\",\"\\\\section\",\"\\\\begin\",\"\\\\end\",\"\\\\paragraph\"];var stream=new TokenIterator(session,row,column);var token=stream.getCurrentToken();if(!token||token.type!=\"storage.type\")return;var startLevel=keywords.indexOf(token.value);var stackDepth=0;var endRow=row;while(token=stream.stepForward()){if(token.type!==\"storage.type\")continue;var level=keywords.indexOf(token.value);if(level>=2){if(!stackDepth)endRow=stream.getCurrentTokenRow()-1;stackDepth+=level==2?1:-1;if(stackDepth<0)break;}else if(level>=startLevel)break;}if(!stackDepth)endRow=stream.getCurrentTokenRow()-1;while(endRow>row&&!/\\S/.test(session.getLine(endRow))){endRow--;}return new Range(row,session.getLine(row).length,endRow,session.getLine(endRow).length);};}).call(FoldMode.prototype);});ace.define(\"ace/mode/latex\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/latex_highlight_rules\",\"ace/mode/folding/latex\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextMode=acequire(\"./text\").Mode;var LatexHighlightRules=acequire(\"./latex_highlight_rules\").LatexHighlightRules;var LatexFoldMode=acequire(\"./folding/latex\").FoldMode;var Mode=function Mode(){this.HighlightRules=LatexHighlightRules;this.foldingRules=new LatexFoldMode();this.$behaviour=this.$defaultBehaviour;};oop.inherits(Mode,TextMode);(function(){this.type=\"text\";this.lineCommentStart=\"%\";this.$id=\"ace/mode/latex\";}).call(Mode.prototype);exports.Mode=Mode;});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// vendor/brace/mode/latex.chunk.js","ace.define(\"ace/mode/latex_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar LatexHighlightRules = function() {  \n\n    this.$rules = {\n        \"start\" : [{\n            token : \"comment\",\n            regex : \"%.*$\"\n        }, {\n            token : [\"keyword\", \"lparen\", \"variable.parameter\", \"rparen\", \"lparen\", \"storage.type\", \"rparen\"],\n            regex : \"(\\\\\\\\(?:documentclass|usepackage|input))(?:(\\\\[)([^\\\\]]*)(\\\\]))?({)([^}]*)(})\"\n        }, {\n            token : [\"keyword\",\"lparen\", \"variable.parameter\", \"rparen\"],\n            regex : \"(\\\\\\\\(?:label|v?ref|cite(?:[^{]*)))(?:({)([^}]*)(}))?\"\n        }, {\n            token : [\"storage.type\", \"lparen\", \"variable.parameter\", \"rparen\"],\n            regex : \"(\\\\\\\\(?:begin|end))({)(\\\\w*)(})\"\n        }, {\n            token : \"storage.type\",\n            regex : \"\\\\\\\\[a-zA-Z]+\"\n        }, {\n            token : \"lparen\",\n            regex : \"[[({]\"\n        }, {\n            token : \"rparen\",\n            regex : \"[\\\\])}]\"\n        }, {\n            token : \"constant.character.escape\",\n            regex : \"\\\\\\\\[^a-zA-Z]?\"\n        }, {\n            token : \"string\",\n            regex : \"\\\\${1,2}\",\n            next  : \"equation\"\n        }],\n        \"equation\" : [{\n            token : \"comment\",\n            regex : \"%.*$\"\n        }, {\n            token : \"string\",\n            regex : \"\\\\${1,2}\",\n            next  : \"start\"\n        }, {\n            token : \"constant.character.escape\",\n            regex : \"\\\\\\\\(?:[^a-zA-Z]|[a-zA-Z]+)\"\n        }, {\n            token : \"error\", \n            regex : \"^\\\\s*$\", \n            next : \"start\" \n        }, {\n            defaultToken : \"string\"\n        }]\n\n    };\n};\noop.inherits(LatexHighlightRules, TextHighlightRules);\n\nexports.LatexHighlightRules = LatexHighlightRules;\n\n});\n\nace.define(\"ace/mode/folding/latex\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\",\"ace/token_iterator\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\nvar Range = acequire(\"../../range\").Range;\nvar TokenIterator = acequire(\"../../token_iterator\").TokenIterator;\n\nvar FoldMode = exports.FoldMode = function() {};\n\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n\n    this.foldingStartMarker = /^\\s*\\\\(begin)|(section|subsection|paragraph)\\b|{\\s*$/;\n    this.foldingStopMarker = /^\\s*\\\\(end)\\b|^\\s*}/;\n\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var line = session.doc.getLine(row);\n        var match = this.foldingStartMarker.exec(line);\n        if (match) {\n            if (match[1])\n                return this.latexBlock(session, row, match[0].length - 1);\n            if (match[2])\n                return this.latexSection(session, row, match[0].length - 1);\n\n            return this.openingBracketBlock(session, \"{\", row, match.index);\n        }\n\n        var match = this.foldingStopMarker.exec(line);\n        if (match) {\n            if (match[1])\n                return this.latexBlock(session, row, match[0].length - 1);\n\n            return this.closingBracketBlock(session, \"}\", row, match.index + match[0].length);\n        }\n    };\n\n    this.latexBlock = function(session, row, column) {\n        var keywords = {\n            \"\\\\begin\": 1,\n            \"\\\\end\": -1\n        };\n\n        var stream = new TokenIterator(session, row, column);\n        var token = stream.getCurrentToken();\n        if (!token || !(token.type == \"storage.type\" || token.type == \"constant.character.escape\"))\n            return;\n\n        var val = token.value;\n        var dir = keywords[val];\n\n        var getType = function() {\n            var token = stream.stepForward();\n            var type = token.type == \"lparen\" ?stream.stepForward().value : \"\";\n            if (dir === -1) {\n                stream.stepBackward();\n                if (type)\n                    stream.stepBackward();\n            }\n            return type;\n        };\n        var stack = [getType()];\n        var startColumn = dir === -1 ? stream.getCurrentTokenColumn() : session.getLine(row).length;\n        var startRow = row;\n\n        stream.step = dir === -1 ? stream.stepBackward : stream.stepForward;\n        while(token = stream.step()) {\n            if (!token || !(token.type == \"storage.type\" || token.type == \"constant.character.escape\"))\n                continue;\n            var level = keywords[token.value];\n            if (!level)\n                continue;\n            var type = getType();\n            if (level === dir)\n                stack.unshift(type);\n            else if (stack.shift() !== type || !stack.length)\n                break;\n        }\n\n        if (stack.length)\n            return;\n\n        var row = stream.getCurrentTokenRow();\n        if (dir === -1)\n            return new Range(row, session.getLine(row).length, startRow, startColumn);\n        stream.stepBackward();\n        return new Range(startRow, startColumn, row, stream.getCurrentTokenColumn());\n    };\n\n    this.latexSection = function(session, row, column) {\n        var keywords = [\"\\\\subsection\", \"\\\\section\", \"\\\\begin\", \"\\\\end\", \"\\\\paragraph\"];\n\n        var stream = new TokenIterator(session, row, column);\n        var token = stream.getCurrentToken();\n        if (!token || token.type != \"storage.type\")\n            return;\n\n        var startLevel = keywords.indexOf(token.value);\n        var stackDepth = 0\n        var endRow = row;\n\n        while(token = stream.stepForward()) {\n            if (token.type !== \"storage.type\")\n                continue;\n            var level = keywords.indexOf(token.value);\n\n            if (level >= 2) {\n                if (!stackDepth)\n                    endRow = stream.getCurrentTokenRow() - 1;\n                stackDepth += level == 2 ? 1 : - 1;\n                if (stackDepth < 0)\n                    break\n            } else if (level >= startLevel)\n                break;\n        }\n\n        if (!stackDepth)\n            endRow = stream.getCurrentTokenRow() - 1;\n\n        while (endRow > row && !/\\S/.test(session.getLine(endRow)))\n            endRow--;\n\n        return new Range(\n            row, session.getLine(row).length,\n            endRow, session.getLine(endRow).length\n        );\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/latex\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/latex_highlight_rules\",\"ace/mode/folding/latex\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar LatexHighlightRules = acequire(\"./latex_highlight_rules\").LatexHighlightRules;\nvar LatexFoldMode = acequire(\"./folding/latex\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = LatexHighlightRules;\n    this.foldingRules = new LatexFoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.type = \"text\";\n    \n    this.lineCommentStart = \"%\";\n\n    this.$id = \"ace/mode/latex\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n\n});\n\n\n\n// WEBPACK FOOTER //\n// /Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/latex.js"],"sourceRoot":""}