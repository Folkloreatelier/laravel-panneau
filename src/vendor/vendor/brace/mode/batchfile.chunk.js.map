{"version":3,"sources":["webpack:///vendor/brace/mode/batchfile.chunk.js","webpack:////Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/batchfile.js"],"names":["webpackJsonppanneau","223","module","exports","ace","define","acequire","oop","TextHighlightRules","BatchFileHighlightRules","this","$rules","start","token","regex","caseInsensitive","include","push","next","defaultToken","variable","normalizeRules","metaData","name","scopeName","fileTypes","inherits","Range","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","replace","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","match","i","index","openingBracketBlock","range","getCommentFoldRange","length","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","TextMode","Mode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","blockComment","$id"],"mappings":"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","file":"vendor/brace/mode/batchfile.chunk.js","sourcesContent":["webpackJsonppanneau([213],{\n\n/***/ 223:\n/***/ (function(module, exports) {\n\nace.define(\"ace/mode/batchfile_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextHighlightRules=acequire(\"./text_highlight_rules\").TextHighlightRules;var BatchFileHighlightRules=function BatchFileHighlightRules(){this.$rules={start:[{token:'keyword.command.dosbatch',regex:'\\\\b(?:append|assoc|at|attrib|break|cacls|cd|chcp|chdir|chkdsk|chkntfs|cls|cmd|color|comp|compact|convert|copy|date|del|dir|diskcomp|diskcopy|doskey|echo|endlocal|erase|fc|find|findstr|format|ftype|graftabl|help|keyb|label|md|mkdir|mode|more|move|path|pause|popd|print|prompt|pushd|rd|recover|ren|rename|replace|restore|rmdir|set|setlocal|shift|sort|start|subst|time|title|tree|type|ver|verify|vol|xcopy)\\\\b',caseInsensitive:true},{token:'keyword.control.statement.dosbatch',regex:'\\\\b(?:goto|call|exit)\\\\b',caseInsensitive:true},{token:'keyword.control.conditional.if.dosbatch',regex:'\\\\bif\\\\s+not\\\\s+(?:exist|defined|errorlevel|cmdextversion)\\\\b',caseInsensitive:true},{token:'keyword.control.conditional.dosbatch',regex:'\\\\b(?:if|else)\\\\b',caseInsensitive:true},{token:'keyword.control.repeat.dosbatch',regex:'\\\\bfor\\\\b',caseInsensitive:true},{token:'keyword.operator.dosbatch',regex:'\\\\b(?:EQU|NEQ|LSS|LEQ|GTR|GEQ)\\\\b'},{token:['doc.comment','comment'],regex:'(?:^|\\\\b)(rem)($|\\\\s.*$)',caseInsensitive:true},{token:'comment.line.colons.dosbatch',regex:'::.*$'},{include:'variable'},{token:'punctuation.definition.string.begin.shell',regex:'\"',push:[{token:'punctuation.definition.string.end.shell',regex:'\"',next:'pop'},{include:'variable'},{defaultToken:'string.quoted.double.dosbatch'}]},{token:'keyword.operator.pipe.dosbatch',regex:'[|]'},{token:'keyword.operator.redirect.shell',regex:'&>|\\\\d*>&\\\\d*|\\\\d*(?:>>|>|<)|\\\\d*<&|\\\\d*<>'}],variable:[{token:'constant.numeric',regex:'%%\\\\w+|%[*\\\\d]|%\\\\w+%'},{token:'constant.numeric',regex:'%~\\\\d+'},{token:['markup.list','constant.other','markup.list'],regex:'(%)(\\\\w+)(%?)'}]};this.normalizeRules();};BatchFileHighlightRules.metaData={name:'Batch File',scopeName:'source.dosbatch',fileTypes:['bat']};oop.inherits(BatchFileHighlightRules,TextHighlightRules);exports.BatchFileHighlightRules=BatchFileHighlightRules;});ace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../../lib/oop\");var Range=acequire(\"../../range\").Range;var BaseFoldMode=acequire(\"./fold_mode\").FoldMode;var FoldMode=exports.FoldMode=function(commentRegex){if(commentRegex){this.foldingStartMarker=new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/,\"|\"+commentRegex.start));this.foldingStopMarker=new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/,\"|\"+commentRegex.end));}};oop.inherits(FoldMode,BaseFoldMode);(function(){this.foldingStartMarker=/(\\{|\\[)[^\\}\\]]*$|^\\s*(\\/\\*)/;this.foldingStopMarker=/^[^\\[\\{]*(\\}|\\])|^[\\s\\*]*(\\*\\/)/;this.singleLineBlockCommentRe=/^\\s*(\\/\\*).*\\*\\/\\s*$/;this.tripleStarBlockCommentRe=/^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;this.startRegionRe=/^\\s*(\\/\\*|\\/\\/)#?region\\b/;this._getFoldWidgetBase=this.getFoldWidget;this.getFoldWidget=function(session,foldStyle,row){var line=session.getLine(row);if(this.singleLineBlockCommentRe.test(line)){if(!this.startRegionRe.test(line)&&!this.tripleStarBlockCommentRe.test(line))return\"\";}var fw=this._getFoldWidgetBase(session,foldStyle,row);if(!fw&&this.startRegionRe.test(line))return\"start\";// lineCommentRegionStart\nreturn fw;};this.getFoldWidgetRange=function(session,foldStyle,row,forceMultiline){var line=session.getLine(row);if(this.startRegionRe.test(line))return this.getCommentRegionBlock(session,line,row);var match=line.match(this.foldingStartMarker);if(match){var i=match.index;if(match[1])return this.openingBracketBlock(session,match[1],row,i);var range=session.getCommentFoldRange(row,i+match[0].length,1);if(range&&!range.isMultiLine()){if(forceMultiline){range=this.getSectionRange(session,row);}else if(foldStyle!=\"all\")range=null;}return range;}if(foldStyle===\"markbegin\")return;var match=line.match(this.foldingStopMarker);if(match){var i=match.index+match[0].length;if(match[1])return this.closingBracketBlock(session,match[1],row,i);return session.getCommentFoldRange(row,i,-1);}};this.getSectionRange=function(session,row){var line=session.getLine(row);var startIndent=line.search(/\\S/);var startRow=row;var startColumn=line.length;row=row+1;var endRow=row;var maxRow=session.getLength();while(++row<maxRow){line=session.getLine(row);var indent=line.search(/\\S/);if(indent===-1)continue;if(startIndent>indent)break;var subRange=this.getFoldWidgetRange(session,\"all\",row);if(subRange){if(subRange.start.row<=startRow){break;}else if(subRange.isMultiLine()){row=subRange.end.row;}else if(startIndent==indent){break;}}endRow=row;}return new Range(startRow,startColumn,endRow,session.getLine(endRow).length);};this.getCommentRegionBlock=function(session,line,row){var startColumn=line.search(/\\s*$/);var maxRow=session.getLength();var startRow=row;var re=/^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;var depth=1;while(++row<maxRow){line=session.getLine(row);var m=re.exec(line);if(!m)continue;if(m[1])depth--;else depth++;if(!depth)break;}var endRow=row;if(endRow>startRow){return new Range(startRow,startColumn,endRow,line.length);}};}).call(FoldMode.prototype);});ace.define(\"ace/mode/batchfile\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/batchfile_highlight_rules\",\"ace/mode/folding/cstyle\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextMode=acequire(\"./text\").Mode;var BatchFileHighlightRules=acequire(\"./batchfile_highlight_rules\").BatchFileHighlightRules;var FoldMode=acequire(\"./folding/cstyle\").FoldMode;var Mode=function Mode(){this.HighlightRules=BatchFileHighlightRules;this.foldingRules=new FoldMode();this.$behaviour=this.$defaultBehaviour;};oop.inherits(Mode,TextMode);(function(){this.lineCommentStart=\"::\";this.blockComment=\"\";this.$id=\"ace/mode/batchfile\";}).call(Mode.prototype);exports.Mode=Mode;});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// vendor/brace/mode/batchfile.chunk.js","ace.define(\"ace/mode/batchfile_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar BatchFileHighlightRules = function() {\n\n    this.$rules = { start: \n       [ { token: 'keyword.command.dosbatch',\n           regex: '\\\\b(?:append|assoc|at|attrib|break|cacls|cd|chcp|chdir|chkdsk|chkntfs|cls|cmd|color|comp|compact|convert|copy|date|del|dir|diskcomp|diskcopy|doskey|echo|endlocal|erase|fc|find|findstr|format|ftype|graftabl|help|keyb|label|md|mkdir|mode|more|move|path|pause|popd|print|prompt|pushd|rd|recover|ren|rename|replace|restore|rmdir|set|setlocal|shift|sort|start|subst|time|title|tree|type|ver|verify|vol|xcopy)\\\\b',\n           caseInsensitive: true },\n         { token: 'keyword.control.statement.dosbatch',\n           regex: '\\\\b(?:goto|call|exit)\\\\b',\n           caseInsensitive: true },\n         { token: 'keyword.control.conditional.if.dosbatch',\n           regex: '\\\\bif\\\\s+not\\\\s+(?:exist|defined|errorlevel|cmdextversion)\\\\b',\n           caseInsensitive: true },\n         { token: 'keyword.control.conditional.dosbatch',\n           regex: '\\\\b(?:if|else)\\\\b',\n           caseInsensitive: true },\n         { token: 'keyword.control.repeat.dosbatch',\n           regex: '\\\\bfor\\\\b',\n           caseInsensitive: true },\n         { token: 'keyword.operator.dosbatch',\n           regex: '\\\\b(?:EQU|NEQ|LSS|LEQ|GTR|GEQ)\\\\b' },\n         { token: ['doc.comment', 'comment'],\n           regex: '(?:^|\\\\b)(rem)($|\\\\s.*$)',\n           caseInsensitive: true },\n         { token: 'comment.line.colons.dosbatch',\n           regex: '::.*$' },\n         { include: 'variable' },\n         { token: 'punctuation.definition.string.begin.shell',\n           regex: '\"',\n           push: [ \n              { token: 'punctuation.definition.string.end.shell', regex: '\"', next: 'pop' },\n              { include: 'variable' },\n              { defaultToken: 'string.quoted.double.dosbatch' } ] },\n         { token: 'keyword.operator.pipe.dosbatch', regex: '[|]' },\n         { token: 'keyword.operator.redirect.shell',\n           regex: '&>|\\\\d*>&\\\\d*|\\\\d*(?:>>|>|<)|\\\\d*<&|\\\\d*<>' } ],\n        variable: [\n         { token: 'constant.numeric', regex: '%%\\\\w+|%[*\\\\d]|%\\\\w+%'},\n         { token: 'constant.numeric', regex: '%~\\\\d+'},\n         { token: ['markup.list', 'constant.other', 'markup.list'],\n            regex: '(%)(\\\\w+)(%?)' }]}\n    \n    this.normalizeRules();\n};\n\nBatchFileHighlightRules.metaData = { name: 'Batch File',\n      scopeName: 'source.dosbatch',\n      fileTypes: [ 'bat' ] }\n\n\noop.inherits(BatchFileHighlightRules, TextHighlightRules);\n\nexports.BatchFileHighlightRules = BatchFileHighlightRules;\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar Range = acequire(\"../../range\").Range;\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    \n    this.foldingStartMarker = /(\\{|\\[)[^\\}\\]]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{]*(\\}|\\])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n    \n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n    \n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n    \n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n    \n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        \n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        \n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n                \n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            \n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n            \n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    \n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            \n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        \n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/batchfile\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/batchfile_highlight_rules\",\"ace/mode/folding/cstyle\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar BatchFileHighlightRules = acequire(\"./batchfile_highlight_rules\").BatchFileHighlightRules;\nvar FoldMode = acequire(\"./folding/cstyle\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = BatchFileHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.lineCommentStart = \"::\";\n    this.blockComment = \"\";\n    this.$id = \"ace/mode/batchfile\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n\n\n\n// WEBPACK FOOTER //\n// /Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/batchfile.js"],"sourceRoot":""}