{"version":3,"sources":["webpack:///vendor/brace/mode/dot.chunk.js","webpack:////Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/dot.js"],"names":["webpackJsonppanneau","240","module","exports","ace","define","acequire","Range","MatchingBraceOutdent","this","checkOutdent","line","input","test","autoOutdent","doc","row","getLine","match","column","length","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","oop","TextHighlightRules","DocCommentHighlightRules","$rules","start","token","regex","getTagRule","defaultToken","caseInsensitive","inherits","getStartRule","next","getEndRule","lang","DotHighlightRules","keywords","arrayToMap","split","attributes","merge","value","hasOwnProperty","toLowerCase","comment","qqstring","qstring","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","i","index","openingBracketBlock","range","getCommentFoldRange","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","subRange","re","depth","m","exec","TextMode","Mode","DotFoldMode","HighlightRules","$outdent","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","blockComment","getNextLineIndent","state","tab","tokenizedLine","getTokenizer","getLineTokens","tokens","type","$id"],"mappings":"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","file":"vendor/brace/mode/dot.chunk.js","sourcesContent":["webpackJsonppanneau([201],{\n\n/***/ 240:\n/***/ (function(module, exports) {\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"],function(acequire,exports,module){\"use strict\";var Range=acequire(\"../range\").Range;var MatchingBraceOutdent=function MatchingBraceOutdent(){};(function(){this.checkOutdent=function(line,input){if(!/^\\s+$/.test(line))return false;return /^\\s*\\}/.test(input);};this.autoOutdent=function(doc,row){var line=doc.getLine(row);var match=line.match(/^(\\s*\\})/);if(!match)return 0;var column=match[1].length;var openBracePos=doc.findMatchingBracket({row:row,column:column});if(!openBracePos||openBracePos.row==row)return 0;var indent=this.$getIndent(doc.getLine(openBracePos.row));doc.replace(new Range(row,0,row,column-1),indent);};this.$getIndent=function(line){return line.match(/^\\s*/)[0];};}).call(MatchingBraceOutdent.prototype);exports.MatchingBraceOutdent=MatchingBraceOutdent;});ace.define(\"ace/mode/doc_comment_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextHighlightRules=acequire(\"./text_highlight_rules\").TextHighlightRules;var DocCommentHighlightRules=function DocCommentHighlightRules(){this.$rules={\"start\":[{token:\"comment.doc.tag\",regex:\"@[\\\\w\\\\d_]+\"// TODO: fix email addresses\n},DocCommentHighlightRules.getTagRule(),{defaultToken:\"comment.doc\",caseInsensitive:true}]};};oop.inherits(DocCommentHighlightRules,TextHighlightRules);DocCommentHighlightRules.getTagRule=function(start){return{token:\"comment.doc.tag.storage.type\",regex:\"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"};};DocCommentHighlightRules.getStartRule=function(start){return{token:\"comment.doc\",// doc comment\nregex:\"\\\\/\\\\*(?=\\\\*)\",next:start};};DocCommentHighlightRules.getEndRule=function(start){return{token:\"comment.doc\",// closing comment\nregex:\"\\\\*\\\\/\",next:start};};exports.DocCommentHighlightRules=DocCommentHighlightRules;});ace.define(\"ace/mode/dot_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/mode/text_highlight_rules\",\"ace/mode/doc_comment_highlight_rules\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var lang=acequire(\"../lib/lang\");var TextHighlightRules=acequire(\"./text_highlight_rules\").TextHighlightRules;var DocCommentHighlightRules=acequire(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;var DotHighlightRules=function DotHighlightRules(){var keywords=lang.arrayToMap(\"strict|node|edge|graph|digraph|subgraph\".split(\"|\"));var attributes=lang.arrayToMap(\"damping|k|url|area|arrowhead|arrowsize|arrowtail|aspect|bb|bgcolor|center|charset|clusterrank|color|colorscheme|comment|compound|concentrate|constraint|decorate|defaultdist|dim|dimen|dir|diredgeconstraints|distortion|dpi|edgeurl|edgehref|edgetarget|edgetooltip|epsilon|esep|fillcolor|fixedsize|fontcolor|fontname|fontnames|fontpath|fontsize|forcelabels|gradientangle|group|headurl|head_lp|headclip|headhref|headlabel|headport|headtarget|headtooltip|height|href|id|image|imagepath|imagescale|label|labelurl|label_scheme|labelangle|labeldistance|labelfloat|labelfontcolor|labelfontname|labelfontsize|labelhref|labeljust|labelloc|labeltarget|labeltooltip|landscape|layer|layerlistsep|layers|layerselect|layersep|layout|len|levels|levelsgap|lhead|lheight|lp|ltail|lwidth|margin|maxiter|mclimit|mindist|minlen|mode|model|mosek|nodesep|nojustify|normalize|nslimit|nslimit1|ordering|orientation|outputorder|overlap|overlap_scaling|pack|packmode|pad|page|pagedir|pencolor|penwidth|peripheries|pin|pos|quadtree|quantum|rank|rankdir|ranksep|ratio|rects|regular|remincross|repulsiveforce|resolution|root|rotate|rotation|samehead|sametail|samplepoints|scale|searchsize|sep|shape|shapefile|showboxes|sides|size|skew|smoothing|sortv|splines|start|style|stylesheet|tailurl|tail_lp|tailclip|tailhref|taillabel|tailport|tailtarget|tailtooltip|target|tooltip|truecolor|vertices|viewport|voro_margin|weight|width|xlabel|xlp|z\".split(\"|\"));this.$rules={\"start\":[{token:\"comment\",regex:/\\/\\/.*$/},{token:\"comment\",regex:/#.*$/},{token:\"comment\",// multi line comment\nmerge:true,regex:/\\/\\*/,next:\"comment\"},{token:\"string\",regex:\"'(?=.)\",next:\"qstring\"},{token:\"string\",regex:'\"(?=.)',next:\"qqstring\"},{token:\"constant.numeric\",regex:/[+\\-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)?\\b/},{token:\"keyword.operator\",regex:/\\+|=|\\->/},{token:\"punctuation.operator\",regex:/,|;/},{token:\"paren.lparen\",regex:/[\\[{]/},{token:\"paren.rparen\",regex:/[\\]}]/},{token:\"comment\",regex:/^#!.*$/},{token:function token(value){if(keywords.hasOwnProperty(value.toLowerCase())){return\"keyword\";}else if(attributes.hasOwnProperty(value.toLowerCase())){return\"variable\";}else{return\"text\";}},regex:\"\\\\-?[a-zA-Z_][a-zA-Z0-9_\\\\-]*\"}],\"comment\":[{token:\"comment\",// closing comment\nregex:\".*?\\\\*\\\\/\",merge:true,next:\"start\"},{token:\"comment\",// comment spanning whole line\nmerge:true,regex:\".+\"}],\"qqstring\":[{token:\"string\",regex:'[^\"\\\\\\\\]+',merge:true},{token:\"string\",regex:\"\\\\\\\\$\",next:\"qqstring\",merge:true},{token:\"string\",regex:'\"|$',next:\"start\",merge:true}],\"qstring\":[{token:\"string\",regex:\"[^'\\\\\\\\]+\",merge:true},{token:\"string\",regex:\"\\\\\\\\$\",next:\"qstring\",merge:true},{token:\"string\",regex:\"'|$\",next:\"start\",merge:true}]};};oop.inherits(DotHighlightRules,TextHighlightRules);exports.DotHighlightRules=DotHighlightRules;});ace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../../lib/oop\");var Range=acequire(\"../../range\").Range;var BaseFoldMode=acequire(\"./fold_mode\").FoldMode;var FoldMode=exports.FoldMode=function(commentRegex){if(commentRegex){this.foldingStartMarker=new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/,\"|\"+commentRegex.start));this.foldingStopMarker=new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/,\"|\"+commentRegex.end));}};oop.inherits(FoldMode,BaseFoldMode);(function(){this.foldingStartMarker=/(\\{|\\[)[^\\}\\]]*$|^\\s*(\\/\\*)/;this.foldingStopMarker=/^[^\\[\\{]*(\\}|\\])|^[\\s\\*]*(\\*\\/)/;this.singleLineBlockCommentRe=/^\\s*(\\/\\*).*\\*\\/\\s*$/;this.tripleStarBlockCommentRe=/^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;this.startRegionRe=/^\\s*(\\/\\*|\\/\\/)#?region\\b/;this._getFoldWidgetBase=this.getFoldWidget;this.getFoldWidget=function(session,foldStyle,row){var line=session.getLine(row);if(this.singleLineBlockCommentRe.test(line)){if(!this.startRegionRe.test(line)&&!this.tripleStarBlockCommentRe.test(line))return\"\";}var fw=this._getFoldWidgetBase(session,foldStyle,row);if(!fw&&this.startRegionRe.test(line))return\"start\";// lineCommentRegionStart\nreturn fw;};this.getFoldWidgetRange=function(session,foldStyle,row,forceMultiline){var line=session.getLine(row);if(this.startRegionRe.test(line))return this.getCommentRegionBlock(session,line,row);var match=line.match(this.foldingStartMarker);if(match){var i=match.index;if(match[1])return this.openingBracketBlock(session,match[1],row,i);var range=session.getCommentFoldRange(row,i+match[0].length,1);if(range&&!range.isMultiLine()){if(forceMultiline){range=this.getSectionRange(session,row);}else if(foldStyle!=\"all\")range=null;}return range;}if(foldStyle===\"markbegin\")return;var match=line.match(this.foldingStopMarker);if(match){var i=match.index+match[0].length;if(match[1])return this.closingBracketBlock(session,match[1],row,i);return session.getCommentFoldRange(row,i,-1);}};this.getSectionRange=function(session,row){var line=session.getLine(row);var startIndent=line.search(/\\S/);var startRow=row;var startColumn=line.length;row=row+1;var endRow=row;var maxRow=session.getLength();while(++row<maxRow){line=session.getLine(row);var indent=line.search(/\\S/);if(indent===-1)continue;if(startIndent>indent)break;var subRange=this.getFoldWidgetRange(session,\"all\",row);if(subRange){if(subRange.start.row<=startRow){break;}else if(subRange.isMultiLine()){row=subRange.end.row;}else if(startIndent==indent){break;}}endRow=row;}return new Range(startRow,startColumn,endRow,session.getLine(endRow).length);};this.getCommentRegionBlock=function(session,line,row){var startColumn=line.search(/\\s*$/);var maxRow=session.getLength();var startRow=row;var re=/^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;var depth=1;while(++row<maxRow){line=session.getLine(row);var m=re.exec(line);if(!m)continue;if(m[1])depth--;else depth++;if(!depth)break;}var endRow=row;if(endRow>startRow){return new Range(startRow,startColumn,endRow,line.length);}};}).call(FoldMode.prototype);});ace.define(\"ace/mode/dot\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/matching_brace_outdent\",\"ace/mode/dot_highlight_rules\",\"ace/mode/folding/cstyle\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextMode=acequire(\"./text\").Mode;var MatchingBraceOutdent=acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;var DotHighlightRules=acequire(\"./dot_highlight_rules\").DotHighlightRules;var DotFoldMode=acequire(\"./folding/cstyle\").FoldMode;var Mode=function Mode(){this.HighlightRules=DotHighlightRules;this.$outdent=new MatchingBraceOutdent();this.foldingRules=new DotFoldMode();this.$behaviour=this.$defaultBehaviour;};oop.inherits(Mode,TextMode);(function(){this.lineCommentStart=[\"//\",\"#\"];this.blockComment={start:\"/*\",end:\"*/\"};this.getNextLineIndent=function(state,line,tab){var indent=this.$getIndent(line);var tokenizedLine=this.getTokenizer().getLineTokens(line,state);var tokens=tokenizedLine.tokens;var endState=tokenizedLine.state;if(tokens.length&&tokens[tokens.length-1].type==\"comment\"){return indent;}if(state==\"start\"){var match=line.match(/^.*(?:\\bcase\\b.*:|[\\{\\(\\[])\\s*$/);if(match){indent+=tab;}}return indent;};this.checkOutdent=function(state,line,input){return this.$outdent.checkOutdent(line,input);};this.autoOutdent=function(state,doc,row){this.$outdent.autoOutdent(doc,row);};this.$id=\"ace/mode/dot\";}).call(Mode.prototype);exports.Mode=Mode;});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// vendor/brace/mode/dot.chunk.js","ace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar Range = acequire(\"../range\").Range;\n\nvar MatchingBraceOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        return line.match(/^\\s*/)[0];\n    };\n\n}).call(MatchingBraceOutdent.prototype);\n\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\n\nace.define(\"ace/mode/doc_comment_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar DocCommentHighlightRules = function() {\n    this.$rules = {\n        \"start\" : [ {\n            token : \"comment.doc.tag\",\n            regex : \"@[\\\\w\\\\d_]+\" // TODO: fix email addresses\n        }, \n        DocCommentHighlightRules.getTagRule(),\n        {\n            defaultToken : \"comment.doc\",\n            caseInsensitive: true\n        }]\n    };\n};\n\noop.inherits(DocCommentHighlightRules, TextHighlightRules);\n\nDocCommentHighlightRules.getTagRule = function(start) {\n    return {\n        token : \"comment.doc.tag.storage.type\",\n        regex : \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n}\n\nDocCommentHighlightRules.getStartRule = function(start) {\n    return {\n        token : \"comment.doc\", // doc comment\n        regex : \"\\\\/\\\\*(?=\\\\*)\",\n        next  : start\n    };\n};\n\nDocCommentHighlightRules.getEndRule = function (start) {\n    return {\n        token : \"comment.doc\", // closing comment\n        regex : \"\\\\*\\\\/\",\n        next  : start\n    };\n};\n\n\nexports.DocCommentHighlightRules = DocCommentHighlightRules;\n\n});\n\nace.define(\"ace/mode/dot_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/mode/text_highlight_rules\",\"ace/mode/doc_comment_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar lang = acequire(\"../lib/lang\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\nvar DocCommentHighlightRules = acequire(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\n\nvar DotHighlightRules = function() {\n\n   var keywords = lang.arrayToMap(\n        (\"strict|node|edge|graph|digraph|subgraph\").split(\"|\")\n   );\n\n   var attributes = lang.arrayToMap(\n        (\"damping|k|url|area|arrowhead|arrowsize|arrowtail|aspect|bb|bgcolor|center|charset|clusterrank|color|colorscheme|comment|compound|concentrate|constraint|decorate|defaultdist|dim|dimen|dir|diredgeconstraints|distortion|dpi|edgeurl|edgehref|edgetarget|edgetooltip|epsilon|esep|fillcolor|fixedsize|fontcolor|fontname|fontnames|fontpath|fontsize|forcelabels|gradientangle|group|headurl|head_lp|headclip|headhref|headlabel|headport|headtarget|headtooltip|height|href|id|image|imagepath|imagescale|label|labelurl|label_scheme|labelangle|labeldistance|labelfloat|labelfontcolor|labelfontname|labelfontsize|labelhref|labeljust|labelloc|labeltarget|labeltooltip|landscape|layer|layerlistsep|layers|layerselect|layersep|layout|len|levels|levelsgap|lhead|lheight|lp|ltail|lwidth|margin|maxiter|mclimit|mindist|minlen|mode|model|mosek|nodesep|nojustify|normalize|nslimit|nslimit1|ordering|orientation|outputorder|overlap|overlap_scaling|pack|packmode|pad|page|pagedir|pencolor|penwidth|peripheries|pin|pos|quadtree|quantum|rank|rankdir|ranksep|ratio|rects|regular|remincross|repulsiveforce|resolution|root|rotate|rotation|samehead|sametail|samplepoints|scale|searchsize|sep|shape|shapefile|showboxes|sides|size|skew|smoothing|sortv|splines|start|style|stylesheet|tailurl|tail_lp|tailclip|tailhref|taillabel|tailport|tailtarget|tailtooltip|target|tooltip|truecolor|vertices|viewport|voro_margin|weight|width|xlabel|xlp|z\").split(\"|\")\n   );\n\n   this.$rules = {\n        \"start\" : [\n            {\n                token : \"comment\",\n                regex : /\\/\\/.*$/\n            }, {\n                token : \"comment\",\n                regex : /#.*$/\n            }, {\n                token : \"comment\", // multi line comment\n                merge : true,\n                regex : /\\/\\*/,\n                next : \"comment\"\n            }, {\n                token : \"string\",\n                regex : \"'(?=.)\",\n                next  : \"qstring\"\n            }, {\n                token : \"string\",\n                regex : '\"(?=.)',\n                next  : \"qqstring\"\n            }, {\n                token : \"constant.numeric\",\n                regex : /[+\\-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)?\\b/\n            }, {\n                token : \"keyword.operator\",\n                regex : /\\+|=|\\->/\n            }, {\n                token : \"punctuation.operator\",\n                regex : /,|;/\n            }, {\n                token : \"paren.lparen\",\n                regex : /[\\[{]/\n            }, {\n                token : \"paren.rparen\",\n                regex : /[\\]}]/\n            }, {\n                token: \"comment\",\n                regex: /^#!.*$/\n            }, {\n                token: function(value) {\n                    if (keywords.hasOwnProperty(value.toLowerCase())) {\n                        return \"keyword\";\n                    }\n                    else if (attributes.hasOwnProperty(value.toLowerCase())) {\n                        return \"variable\";\n                    }\n                    else {\n                        return \"text\";\n                    }\n                },\n                regex: \"\\\\-?[a-zA-Z_][a-zA-Z0-9_\\\\-]*\"\n           }\n        ],\n        \"comment\" : [\n            {\n                token : \"comment\", // closing comment\n                regex : \".*?\\\\*\\\\/\",\n                merge : true,\n                next : \"start\"\n            }, {\n                token : \"comment\", // comment spanning whole line\n                merge : true,\n                regex : \".+\"\n            }\n        ],\n        \"qqstring\" : [\n            {\n                token : \"string\",\n                regex : '[^\"\\\\\\\\]+',\n                merge : true\n            }, {\n                token : \"string\",\n                regex : \"\\\\\\\\$\",\n                next  : \"qqstring\",\n                merge : true\n            }, {\n                token : \"string\",\n                regex : '\"|$',\n                next  : \"start\",\n                merge : true\n            }\n        ],\n        \"qstring\" : [\n            {\n                token : \"string\",\n                regex : \"[^'\\\\\\\\]+\",\n                merge : true\n            }, {\n                token : \"string\",\n                regex : \"\\\\\\\\$\",\n                next  : \"qstring\",\n                merge : true\n            }, {\n                token : \"string\",\n                regex : \"'|$\",\n                next  : \"start\",\n                merge : true\n            }\n        ]\n   };\n};\n\noop.inherits(DotHighlightRules, TextHighlightRules);\n\nexports.DotHighlightRules = DotHighlightRules;\n\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar Range = acequire(\"../../range\").Range;\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    \n    this.foldingStartMarker = /(\\{|\\[)[^\\}\\]]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{]*(\\}|\\])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n    \n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n    \n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n    \n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n    \n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        \n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        \n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n                \n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            \n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n            \n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    \n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            \n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        \n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/dot\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/matching_brace_outdent\",\"ace/mode/dot_highlight_rules\",\"ace/mode/folding/cstyle\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar MatchingBraceOutdent = acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar DotHighlightRules = acequire(\"./dot_highlight_rules\").DotHighlightRules;\nvar DotFoldMode = acequire(\"./folding/cstyle\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = DotHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.foldingRules = new DotFoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n\n    this.lineCommentStart = [\"//\", \"#\"];\n    this.blockComment = {start: \"/*\", end: \"*/\"};\n\n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n        var endState = tokenizedLine.state;\n\n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\n            return indent;\n        }\n\n        if (state == \"start\") {\n            var match = line.match(/^.*(?:\\bcase\\b.*:|[\\{\\(\\[])\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        }\n\n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.$id = \"ace/mode/dot\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n\n\n\n// WEBPACK FOOTER //\n// /Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/dot.js"],"sourceRoot":""}