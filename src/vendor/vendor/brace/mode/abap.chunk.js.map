{"version":3,"sources":["webpack:///vendor/brace/mode/abap.chunk.js","webpack:////Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/abap.js"],"names":["webpackJsonppanneau","214","module","exports","ace","define","acequire","oop","TextHighlightRules","AbapHighlightRules","keywordMapper","this","createKeywordMapper","variable.language","keyword","constant.language","support.type","keyword.operator","$rules","start","token","regex","next","caseInsensitive","qstring","defaultToken","string","inherits","BaseFoldMode","FoldMode","Range","getFoldWidgetRange","session","foldStyle","row","range","indentationBlock","re","line","getLine","startLevel","search","startColumn","length","maxRow","getLength","startRow","endRow","level","endColumn","getFoldWidget","indent","prev","prevIndent","nextIndent","foldWidgets","call","prototype","Mode","HighlightRules","Rules","foldingRules","TextMode","lineCommentStart","getNextLineIndent","state","tab","$getIndent","$id"],"mappings":"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","file":"vendor/brace/mode/abap.chunk.js","sourcesContent":["webpackJsonppanneau([222],{\n\n/***/ 214:\n/***/ (function(module, exports) {\n\nace.define(\"ace/mode/abap_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextHighlightRules=acequire(\"./text_highlight_rules\").TextHighlightRules;var AbapHighlightRules=function AbapHighlightRules(){var keywordMapper=this.createKeywordMapper({\"variable.language\":\"this\",\"keyword\":\"ADD ALIAS ALIASES ASCENDING ASSERT ASSIGN ASSIGNING AT BACK\"+\" CALL CASE CATCH CHECK CLASS CLEAR CLOSE CNT COLLECT COMMIT COMMUNICATION COMPUTE CONCATENATE CONDENSE CONSTANTS CONTINUE CONTROLS CONVERT CREATE CURRENCY\"+\" DATA DEFINE DEFINITION DEFERRED DELETE DESCENDING DESCRIBE DETAIL DIVIDE DO\"+\" ELSE ELSEIF ENDAT ENDCASE ENDCLASS ENDDO ENDEXEC ENDFORM ENDFUNCTION ENDIF ENDIFEND ENDINTERFACE ENDLOOP ENDMETHOD ENDMODULE ENDON ENDPROVIDE ENDSELECT ENDTRY ENDWHILE EVENT EVENTS EXEC EXIT EXPORT EXPORTING EXTRACT\"+\" FETCH FIELDS FORM FORMAT FREE FROM FUNCTION\"+\" GENERATE GET\"+\" HIDE\"+\" IF IMPORT IMPORTING INDEX INFOTYPES INITIALIZATION INTERFACE INTERFACES INPUT INSERT IMPLEMENTATION\"+\" LEAVE LIKE LINE LOAD LOCAL LOOP\"+\" MESSAGE METHOD METHODS MODIFY MODULE MOVE MULTIPLY\"+\" ON OVERLAY OPTIONAL OTHERS\"+\" PACK PARAMETERS PERFORM POSITION PROGRAM PROVIDE PUT\"+\" RAISE RANGES READ RECEIVE RECEIVING REDEFINITION REFERENCE REFRESH REJECT REPLACE REPORT RESERVE RESTORE RETURN RETURNING ROLLBACK\"+\" SCAN SCROLL SEARCH SELECT SET SHIFT SKIP SORT SORTED SPLIT STANDARD STATICS STEP STOP SUBMIT SUBTRACT SUM SUMMARY SUPPRESS\"+\" TABLES TIMES TRANSFER TRANSLATE TRY TYPE TYPES\"+\" UNASSIGN ULINE UNPACK UPDATE\"+\" WHEN WHILE WINDOW WRITE\"+\" OCCURS STRUCTURE OBJECT PROPERTY\"+\" CASTING APPEND RAISING VALUE COLOR\"+\" CHANGING EXCEPTION EXCEPTIONS DEFAULT CHECKBOX COMMENT\"+\" ID NUMBER FOR TITLE OUTPUT\"+\" WITH EXIT USING\"+\" INTO WHERE GROUP BY HAVING ORDER BY SINGLE\"+\" APPENDING CORRESPONDING FIELDS OF TABLE\"+\" LEFT RIGHT OUTER INNER JOIN AS CLIENT SPECIFIED BYPASSING BUFFER UP TO ROWS CONNECTING\"+\" EQ NE LT LE GT GE NOT AND OR XOR IN LIKE BETWEEN\",\"constant.language\":\"TRUE FALSE NULL SPACE\",\"support.type\":\"c n i p f d t x string xstring decfloat16 decfloat34\",\"keyword.operator\":\"abs sign ceil floor trunc frac acos asin atan cos sin tan\"+\" abapOperator cosh sinh tanh exp log log10 sqrt\"+\" strlen xstrlen charlen numofchar dbmaxlen lines\"},\"text\",true,\" \");var compoundKeywords=\"WITH\\\\W+(?:HEADER\\\\W+LINE|FRAME|KEY)|NO\\\\W+STANDARD\\\\W+PAGE\\\\W+HEADING|\"+\"EXIT\\\\W+FROM\\\\W+STEP\\\\W+LOOP|BEGIN\\\\W+OF\\\\W+(?:BLOCK|LINE)|BEGIN\\\\W+OF|\"+\"END\\\\W+OF\\\\W+(?:BLOCK|LINE)|END\\\\W+OF|NO\\\\W+INTERVALS|\"+\"RESPECTING\\\\W+BLANKS|SEPARATED\\\\W+BY|USING\\\\W+(?:EDIT\\\\W+MASK)|\"+\"WHERE\\\\W+(?:LINE)|RADIOBUTTON\\\\W+GROUP|REF\\\\W+TO|\"+\"(?:PUBLIC|PRIVATE|PROTECTED)(?:\\\\W+SECTION)?|DELETING\\\\W+(?:TRAILING|LEADING)\"+\"(?:ALL\\\\W+OCCURRENCES)|(?:FIRST|LAST)\\\\W+OCCURRENCE|INHERITING\\\\W+FROM|\"+\"LINE-COUNT|ADD-CORRESPONDING|AUTHORITY-CHECK|BREAK-POINT|CLASS-DATA|CLASS-METHODS|\"+\"CLASS-METHOD|DIVIDE-CORRESPONDING|EDITOR-CALL|END-OF-DEFINITION|END-OF-PAGE|END-OF-SELECTION|\"+\"FIELD-GROUPS|FIELD-SYMBOLS|FUNCTION-POOL|MOVE-CORRESPONDING|MULTIPLY-CORRESPONDING|NEW-LINE|\"+\"NEW-PAGE|NEW-SECTION|PRINT-CONTROL|RP-PROVIDE-FROM-LAST|SELECT-OPTIONS|SELECTION-SCREEN|\"+\"START-OF-SELECTION|SUBTRACT-CORRESPONDING|SYNTAX-CHECK|SYNTAX-TRACE|TOP-OF-PAGE|TYPE-POOL|\"+\"TYPE-POOLS|LINE-SIZE|LINE-COUNT|MESSAGE-ID|DISPLAY-MODE|READ(?:-ONLY)?|\"+\"IS\\\\W+(?:NOT\\\\W+)?(?:ASSIGNED|BOUND|INITIAL|SUPPLIED)\";this.$rules={\"start\":[{token:\"string\",regex:\"`\",next:\"string\"},{token:\"string\",regex:\"'\",next:\"qstring\"},{token:\"doc.comment\",regex:/^\\*.+/},{token:\"comment\",regex:/\".+$/},{token:\"invalid\",regex:\"\\\\.{2,}\"},{token:\"keyword.operator\",regex:/\\W[\\-+%=<>*]\\W|\\*\\*|[~:,\\.&$]|->*?|=>/},{token:\"paren.lparen\",regex:\"[\\\\[({]\"},{token:\"paren.rparen\",regex:\"[\\\\])}]\"},{token:\"constant.numeric\",regex:\"[+-]?\\\\d+\\\\b\"},{token:\"variable.parameter\",regex:/sy|pa?\\d\\d\\d\\d\\|t\\d\\d\\d\\.|innnn/},{token:\"keyword\",regex:compoundKeywords},{token:\"variable.parameter\",regex:/\\w+-\\w+(?:-\\w+)*/},{token:keywordMapper,regex:\"\\\\b\\\\w+\\\\b\"},{caseInsensitive:true}],\"qstring\":[{token:\"constant.language.escape\",regex:\"''\"},{token:\"string\",regex:\"'\",next:\"start\"},{defaultToken:\"string\"}],\"string\":[{token:\"constant.language.escape\",regex:\"``\"},{token:\"string\",regex:\"`\",next:\"start\"},{defaultToken:\"string\"}]};};oop.inherits(AbapHighlightRules,TextHighlightRules);exports.AbapHighlightRules=AbapHighlightRules;});ace.define(\"ace/mode/folding/coffee\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../../lib/oop\");var BaseFoldMode=acequire(\"./fold_mode\").FoldMode;var Range=acequire(\"../../range\").Range;var FoldMode=exports.FoldMode=function(){};oop.inherits(FoldMode,BaseFoldMode);(function(){this.getFoldWidgetRange=function(session,foldStyle,row){var range=this.indentationBlock(session,row);if(range)return range;var re=/\\S/;var line=session.getLine(row);var startLevel=line.search(re);if(startLevel==-1||line[startLevel]!=\"#\")return;var startColumn=line.length;var maxRow=session.getLength();var startRow=row;var endRow=row;while(++row<maxRow){line=session.getLine(row);var level=line.search(re);if(level==-1)continue;if(line[level]!=\"#\")break;endRow=row;}if(endRow>startRow){var endColumn=session.getLine(endRow).length;return new Range(startRow,startColumn,endRow,endColumn);}};this.getFoldWidget=function(session,foldStyle,row){var line=session.getLine(row);var indent=line.search(/\\S/);var next=session.getLine(row+1);var prev=session.getLine(row-1);var prevIndent=prev.search(/\\S/);var nextIndent=next.search(/\\S/);if(indent==-1){session.foldWidgets[row-1]=prevIndent!=-1&&prevIndent<nextIndent?\"start\":\"\";return\"\";}if(prevIndent==-1){if(indent==nextIndent&&line[indent]==\"#\"&&next[indent]==\"#\"){session.foldWidgets[row-1]=\"\";session.foldWidgets[row+1]=\"\";return\"start\";}}else if(prevIndent==indent&&line[indent]==\"#\"&&prev[indent]==\"#\"){if(session.getLine(row-2).search(/\\S/)==-1){session.foldWidgets[row-1]=\"start\";session.foldWidgets[row+1]=\"\";return\"\";}}if(prevIndent!=-1&&prevIndent<indent)session.foldWidgets[row-1]=\"start\";else session.foldWidgets[row-1]=\"\";if(indent<nextIndent)return\"start\";else return\"\";};}).call(FoldMode.prototype);});ace.define(\"ace/mode/abap\",[\"require\",\"exports\",\"module\",\"ace/mode/abap_highlight_rules\",\"ace/mode/folding/coffee\",\"ace/range\",\"ace/mode/text\",\"ace/lib/oop\"],function(acequire,exports,module){\"use strict\";var Rules=acequire(\"./abap_highlight_rules\").AbapHighlightRules;var FoldMode=acequire(\"./folding/coffee\").FoldMode;var Range=acequire(\"../range\").Range;var TextMode=acequire(\"./text\").Mode;var oop=acequire(\"../lib/oop\");function Mode(){this.HighlightRules=Rules;this.foldingRules=new FoldMode();}oop.inherits(Mode,TextMode);(function(){this.lineCommentStart='\"';this.getNextLineIndent=function(state,line,tab){var indent=this.$getIndent(line);return indent;};this.$id=\"ace/mode/abap\";}).call(Mode.prototype);exports.Mode=Mode;});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// vendor/brace/mode/abap.chunk.js","ace.define(\"ace/mode/abap_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar AbapHighlightRules = function() {\n\n    var keywordMapper = this.createKeywordMapper({\n        \"variable.language\": \"this\",\n        \"keyword\": \n            \"ADD ALIAS ALIASES ASCENDING ASSERT ASSIGN ASSIGNING AT BACK\" +\n            \" CALL CASE CATCH CHECK CLASS CLEAR CLOSE CNT COLLECT COMMIT COMMUNICATION COMPUTE CONCATENATE CONDENSE CONSTANTS CONTINUE CONTROLS CONVERT CREATE CURRENCY\" +\n            \" DATA DEFINE DEFINITION DEFERRED DELETE DESCENDING DESCRIBE DETAIL DIVIDE DO\" +\n            \" ELSE ELSEIF ENDAT ENDCASE ENDCLASS ENDDO ENDEXEC ENDFORM ENDFUNCTION ENDIF ENDIFEND ENDINTERFACE ENDLOOP ENDMETHOD ENDMODULE ENDON ENDPROVIDE ENDSELECT ENDTRY ENDWHILE EVENT EVENTS EXEC EXIT EXPORT EXPORTING EXTRACT\" +\n            \" FETCH FIELDS FORM FORMAT FREE FROM FUNCTION\" +\n            \" GENERATE GET\" +\n            \" HIDE\" +\n            \" IF IMPORT IMPORTING INDEX INFOTYPES INITIALIZATION INTERFACE INTERFACES INPUT INSERT IMPLEMENTATION\" +\n            \" LEAVE LIKE LINE LOAD LOCAL LOOP\" +\n            \" MESSAGE METHOD METHODS MODIFY MODULE MOVE MULTIPLY\" +\n            \" ON OVERLAY OPTIONAL OTHERS\" +\n            \" PACK PARAMETERS PERFORM POSITION PROGRAM PROVIDE PUT\" +\n            \" RAISE RANGES READ RECEIVE RECEIVING REDEFINITION REFERENCE REFRESH REJECT REPLACE REPORT RESERVE RESTORE RETURN RETURNING ROLLBACK\" +\n            \" SCAN SCROLL SEARCH SELECT SET SHIFT SKIP SORT SORTED SPLIT STANDARD STATICS STEP STOP SUBMIT SUBTRACT SUM SUMMARY SUPPRESS\" +\n            \" TABLES TIMES TRANSFER TRANSLATE TRY TYPE TYPES\" +\n            \" UNASSIGN ULINE UNPACK UPDATE\" +\n            \" WHEN WHILE WINDOW WRITE\" +\n            \" OCCURS STRUCTURE OBJECT PROPERTY\" +\n            \" CASTING APPEND RAISING VALUE COLOR\" +\n            \" CHANGING EXCEPTION EXCEPTIONS DEFAULT CHECKBOX COMMENT\" +\n            \" ID NUMBER FOR TITLE OUTPUT\" +\n            \" WITH EXIT USING\" +\n            \" INTO WHERE GROUP BY HAVING ORDER BY SINGLE\" +\n            \" APPENDING CORRESPONDING FIELDS OF TABLE\" +\n            \" LEFT RIGHT OUTER INNER JOIN AS CLIENT SPECIFIED BYPASSING BUFFER UP TO ROWS CONNECTING\" +\n            \" EQ NE LT LE GT GE NOT AND OR XOR IN LIKE BETWEEN\",\n        \"constant.language\": \n            \"TRUE FALSE NULL SPACE\",\n        \"support.type\": \n            \"c n i p f d t x string xstring decfloat16 decfloat34\",\n        \"keyword.operator\":\n            \"abs sign ceil floor trunc frac acos asin atan cos sin tan\" +\n            \" abapOperator cosh sinh tanh exp log log10 sqrt\" +\n            \" strlen xstrlen charlen numofchar dbmaxlen lines\" \n    }, \"text\", true, \" \");\n\n    var compoundKeywords = \"WITH\\\\W+(?:HEADER\\\\W+LINE|FRAME|KEY)|NO\\\\W+STANDARD\\\\W+PAGE\\\\W+HEADING|\"+\n        \"EXIT\\\\W+FROM\\\\W+STEP\\\\W+LOOP|BEGIN\\\\W+OF\\\\W+(?:BLOCK|LINE)|BEGIN\\\\W+OF|\"+\n        \"END\\\\W+OF\\\\W+(?:BLOCK|LINE)|END\\\\W+OF|NO\\\\W+INTERVALS|\"+\n        \"RESPECTING\\\\W+BLANKS|SEPARATED\\\\W+BY|USING\\\\W+(?:EDIT\\\\W+MASK)|\"+\n        \"WHERE\\\\W+(?:LINE)|RADIOBUTTON\\\\W+GROUP|REF\\\\W+TO|\"+\n        \"(?:PUBLIC|PRIVATE|PROTECTED)(?:\\\\W+SECTION)?|DELETING\\\\W+(?:TRAILING|LEADING)\"+\n        \"(?:ALL\\\\W+OCCURRENCES)|(?:FIRST|LAST)\\\\W+OCCURRENCE|INHERITING\\\\W+FROM|\"+\n        \"LINE-COUNT|ADD-CORRESPONDING|AUTHORITY-CHECK|BREAK-POINT|CLASS-DATA|CLASS-METHODS|\"+\n        \"CLASS-METHOD|DIVIDE-CORRESPONDING|EDITOR-CALL|END-OF-DEFINITION|END-OF-PAGE|END-OF-SELECTION|\"+\n        \"FIELD-GROUPS|FIELD-SYMBOLS|FUNCTION-POOL|MOVE-CORRESPONDING|MULTIPLY-CORRESPONDING|NEW-LINE|\"+\n        \"NEW-PAGE|NEW-SECTION|PRINT-CONTROL|RP-PROVIDE-FROM-LAST|SELECT-OPTIONS|SELECTION-SCREEN|\"+\n        \"START-OF-SELECTION|SUBTRACT-CORRESPONDING|SYNTAX-CHECK|SYNTAX-TRACE|TOP-OF-PAGE|TYPE-POOL|\"+\n        \"TYPE-POOLS|LINE-SIZE|LINE-COUNT|MESSAGE-ID|DISPLAY-MODE|READ(?:-ONLY)?|\"+\n        \"IS\\\\W+(?:NOT\\\\W+)?(?:ASSIGNED|BOUND|INITIAL|SUPPLIED)\";\n     \n    this.$rules = {\n        \"start\" : [\n            {token : \"string\", regex : \"`\", next  : \"string\"},\n            {token : \"string\", regex : \"'\", next  : \"qstring\"},\n            {token : \"doc.comment\", regex : /^\\*.+/},\n            {token : \"comment\",  regex : /\".+$/},\n            {token : \"invalid\", regex: \"\\\\.{2,}\"},\n            {token : \"keyword.operator\", regex: /\\W[\\-+%=<>*]\\W|\\*\\*|[~:,\\.&$]|->*?|=>/},\n            {token : \"paren.lparen\", regex : \"[\\\\[({]\"},\n            {token : \"paren.rparen\", regex : \"[\\\\])}]\"},\n            {token : \"constant.numeric\", regex: \"[+-]?\\\\d+\\\\b\"},\n            {token : \"variable.parameter\", regex : /sy|pa?\\d\\d\\d\\d\\|t\\d\\d\\d\\.|innnn/}, \n            {token : \"keyword\", regex : compoundKeywords}, \n            {token : \"variable.parameter\", regex : /\\w+-\\w+(?:-\\w+)*/}, \n            {token : keywordMapper, regex : \"\\\\b\\\\w+\\\\b\"},\n            {caseInsensitive: true}\n        ],\n        \"qstring\" : [\n            {token : \"constant.language.escape\",   regex : \"''\"},\n            {token : \"string\", regex : \"'\",     next  : \"start\"},\n            {defaultToken : \"string\"}\n        ],\n        \"string\" : [\n            {token : \"constant.language.escape\",   regex : \"``\"},\n            {token : \"string\", regex : \"`\",     next  : \"start\"},\n            {defaultToken : \"string\"}\n        ]\n    };\n};\noop.inherits(AbapHighlightRules, TextHighlightRules);\n\nexports.AbapHighlightRules = AbapHighlightRules;\n});\n\nace.define(\"ace/mode/folding/coffee\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\nvar Range = acequire(\"../../range\").Range;\n\nvar FoldMode = exports.FoldMode = function() {};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var range = this.indentationBlock(session, row);\n        if (range)\n            return range;\n\n        var re = /\\S/;\n        var line = session.getLine(row);\n        var startLevel = line.search(re);\n        if (startLevel == -1 || line[startLevel] != \"#\")\n            return;\n\n        var startColumn = line.length;\n        var maxRow = session.getLength();\n        var startRow = row;\n        var endRow = row;\n\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var level = line.search(re);\n\n            if (level == -1)\n                continue;\n\n            if (line[level] != \"#\")\n                break;\n\n            endRow = row;\n        }\n\n        if (endRow > startRow) {\n            var endColumn = session.getLine(endRow).length;\n            return new Range(startRow, startColumn, endRow, endColumn);\n        }\n    };\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        var next = session.getLine(row + 1);\n        var prev = session.getLine(row - 1);\n        var prevIndent = prev.search(/\\S/);\n        var nextIndent = next.search(/\\S/);\n\n        if (indent == -1) {\n            session.foldWidgets[row - 1] = prevIndent!= -1 && prevIndent < nextIndent ? \"start\" : \"\";\n            return \"\";\n        }\n        if (prevIndent == -1) {\n            if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n                session.foldWidgets[row - 1] = \"\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"start\";\n            }\n        } else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n            if (session.getLine(row - 2).search(/\\S/) == -1) {\n                session.foldWidgets[row - 1] = \"start\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"\";\n            }\n        }\n\n        if (prevIndent!= -1 && prevIndent < indent)\n            session.foldWidgets[row - 1] = \"start\";\n        else\n            session.foldWidgets[row - 1] = \"\";\n\n        if (indent < nextIndent)\n            return \"start\";\n        else\n            return \"\";\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/abap\",[\"require\",\"exports\",\"module\",\"ace/mode/abap_highlight_rules\",\"ace/mode/folding/coffee\",\"ace/range\",\"ace/mode/text\",\"ace/lib/oop\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar Rules = acequire(\"./abap_highlight_rules\").AbapHighlightRules;\nvar FoldMode = acequire(\"./folding/coffee\").FoldMode;\nvar Range = acequire(\"../range\").Range;\nvar TextMode = acequire(\"./text\").Mode;\nvar oop = acequire(\"../lib/oop\");\n\nfunction Mode() {\n    this.HighlightRules = Rules;\n    this.foldingRules = new FoldMode();\n}\n\noop.inherits(Mode, TextMode);\n\n(function() {\n    \n    this.lineCommentStart = '\"'\n    \n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n        return indent;\n    };    \n    \n    this.$id = \"ace/mode/abap\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n\n});\n\n\n\n// WEBPACK FOOTER //\n// /Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/abap.js"],"sourceRoot":""}