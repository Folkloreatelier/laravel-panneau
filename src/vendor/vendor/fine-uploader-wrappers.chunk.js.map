{"version":3,"sources":["webpack:///vendor/fine-uploader-wrappers.chunk.js","webpack:////Users/dmp/Code/panneau/js/fields/core/node_modules/fine-uploader-wrappers/traditional.js","webpack:////Users/dmp/Code/panneau/js/fields/core/node_modules/fine-uploader-wrappers/callback-names.js","webpack:////Users/dmp/Code/panneau/js/fields/core/node_modules/fine-uploader-wrappers/base-wrapper.js","webpack:////Users/dmp/Code/panneau/js/fields/core/node_modules/fine-uploader-wrappers/callback-proxy.js","webpack:////Users/dmp/Code/panneau/js/fields/core/node_modules/fine-uploader/lib/core/index.js","webpack:////Users/dmp/Code/panneau/js/fields/core/node_modules/fine-uploader/fine-uploader/fine-uploader.core.js"],"names":["webpackJsonppanneau","807","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_typeof","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","Symbol","iterator","defineProperty","_baseWrapper","_baseWrapper2","_core","_core2","_callbackNames","FineUploaderTraditional","_BaseWrapper","_ref","options","this","getPrototypeOf","callbackNames","traditional","qq","type","937","s3","thenable","undefined","_objectAssign","_objectAssign2","941","_createClass","defineProperties","target","props","i","length","descriptor","key","protoProps","staticProps","_callbackProxy","_callbackProxy2","callbackProxies","WeakMap","BaseWrapper","callbacks","optionsSansCallbacks","set","createCallbackProxies","registerOptionsCallbacks","get","methods","createFineUploader","name","callback","normalizedName","normalizeCallbackName","remove","add","names","proxyMap","forEach","callbackName","_ref2","optionsCopy","keys","proxy","proxyFunction","FineUploaderBasic","match","toUpperCase","slice","_ref3","942","_typeof2","privateData","CallbackProxy","getProxyFunction","push","index","indexOf","splice","proxyClassContext","_len","arguments","originalCallbackArguments","Array","_key","isThenable","registeredCallbacks","callbackReturnValue","executeThenableCallbacks","every","returnValue","apply","executeThenableCallback","reverse","Promise","resolve","getResultToPass","newResult","previousResult","_ref4","reject","pop","then","result","resultToPass","catch","error","943","944","__WEBPACK_AMD_DEFINE_RESULT__","global","element","hide","style","display","attach","fn","addEventListener","attachEvent","detach","removeEventListener","detachEvent","contains","descendant","compareDocumentPosition","insertBefore","elementB","parentNode","removeChild","css","styles","Error","opacity","filters","filter","Math","round","extend","hasClass","considerParent","re","RegExp","test","className","addClass","removeClass","replace","getByClass","first","candidates","querySelector","querySelectorAll","getElementsByTagName","each","idx","val","getFirstByClass","children","child","firstChild","nodeType","nextSibling","setText","text","innerText","textContent","clearText","hasAttribute","attrName","attrVal","exec","getAttribute","canvasToBlob","canvas","mime","quality","dataUriToBlob","toDataURL","dataUri","arrayBuffer","byteString","intArray","mimeString","split","atob","decodeURI","ArrayBuffer","Uint8Array","character","charCodeAt","data","BlobBuilder","window","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","blobBuilder","append","getBlob","Blob","log","message","level","console","isObject","variable","toString","isFunction","isArray","buffer","isItemList","maybeItemList","isNodeList","maybeNodeList","item","namedItem","isString","maybeString","trimStr","string","String","trim","format","str","args","newStr","nextIdxToReplace","strBefore","substring","strAfter","isFile","maybeFile","File","isFileList","maybeFileList","FileList","isFileOrInput","maybeFileOrInput","isInput","maybeInput","notFile","evaluateType","normalizedType","toLowerCase","HTMLInputElement","tagName","isBlob","maybeBlob","isXhrUploadSupported","input","document","createElement","multiple","FormData","createXhrInstance","upload","XMLHttpRequest","ActiveXObject","isFolderDropSupported","dataTransfer","items","webkitGetAsEntry","isFileChunkingSupported","androidStock","webkitSlice","mozSlice","sliceBlob","fileOrBlob","start","end","arrayBufferToHex","bytesAsHex","bytes","byt","byteAsHexStr","readBlobToHex","blob","startOffset","initialBlob","fileReader","FileReader","promise","onload","success","onerror","failure","readAsArrayBuffer","second","extendNested","prop","override","sourceFn","super_","source","srcPropName","srcPropVal","arr","elt","from","len","hasOwnProperty","getUniqueId","c","r","random","ie","navigator","userAgent","ie7","ie8","ie10","ie11","edge","safari","vendor","chrome","opera","firefox","windows","platform","android","ios6","ios","ios7","ios8","ios800","iosChrome","iosSafari","iosSafariWebView","preventDefault","e","toElement","div","html","innerHTML","iterableItem","keyOrIndex","Storage","getItem","charAt","bind","oldFunc","context","newArgs","concat","obj2url","temp","prefixDone","uristrings","prefix","nextObj","nextTemp","encodeURIComponent","join","obj2FormData","formData","arrayKeyName","obj2Inputs","form","setAttribute","appendChild","parseJson","json","JSON","parse","eval","getExtension","filename","extIdx","lastIndexOf","substr","getFilename","blobOrFileInput","fileName","DisposeSupport","disposers","dispose","disposer","shift","addDisposer","disposeFunction","version","supportedFeatures","isCrossOriginXhrSupported","withCredentials","isXdrSupported","XDomainRequest","supportsUploading","supportsUploadingBlobs","supportsFileDrop","supportsAjaxFileUploading","supportsFolderDrop","supportsChunking","supportsResume","supportsUploadViaPaste","supportsUploadCors","supportsDeleteFileXdr","supportsDeleteFileCorsXhr","supportsDeleteFileCors","supportsFolderSelection","supportsImagePreviews","supportsUploadProgress","tempInput","supported","disabled","ex","span","localStorage","setItem","postMessage","webkitdirectory","ajaxUploading","blobUploading","canDetermineSize","chunking","deleteFileCors","deleteFileCorsXdr","deleteFileCorsXhr","dialogElement","HTMLDialogElement","fileDrop","folderDrop","folderSelection","imagePreviews","imageValidation","itemSizeValidation","pause","progressBar","resume","scaling","tiffPreviews","unlimitedScaledImageSize","uploading","uploadCors","uploadCustomHeaders","uploadNonMultipart","uploadViaPaste","isGenericPromise","maybePromise","successArgs","failureArgs","successCallbacks","failureCallbacks","doneCallbacks","state","onSuccess","onFailure","done","BlobProxy","referenceBlob","onCreate","UploadButton","o","createInput","BUTTON_ID_ATTR_NAME","buttonId","title","setMultiple","folders","acceptFiles","position","right","top","fontFamily","fontSize","margin","padding","cursor","height","disposeSupport","onChange","hoverClass","focusClass","ios8BrowserCrashWorkaround","overflow","direction","getInput","getButtonId","isMultiple","optInput","removeAttribute","setAcceptFiles","reset","UploadData","uploaderProxy","getDataByIds","idOrIds","entries","id","getDataByUuids","uuids","uuid","byUuid","getDataByStatus","status","statusResults","statuses","statusEnum","statusResultIndexes","byStatus","dataIndex","byProxyGroupId","byBatchId","addFile","spec","SUBMITTING","originalName","size","file","batchId","proxyGroupId","onBeforeStatusChange","onStatusChange","retrieve","optionalFilter","removeFileRef","record","setStatus","newStatus","oldStatus","byStatusOldStatusIndex","uuidChanged","newUuid","oldUuid","updateName","newName","updateSize","newSize","setParentId","targetId","parentId","getIdsInProxyGroup","getIdsInBatch","SUBMITTED","REJECTED","QUEUED","CANCELED","PAUSED","UPLOADING","UPLOAD_FINALIZING","UPLOAD_RETRYING","UPLOAD_SUCCESSFUL","UPLOAD_FAILED","DELETE_FAILED","DELETING","DELETED","basePublicApi","addBlobs","blobDataOrArray","params","endpoint","addFiles","addInitialFiles","cannedFileList","cannedFile","_addCannedFile","_maybeHandleIos8SafariWorkaround","_storedIds","_currentBatchId","processBlob","_handleNewFile","_options","blobs","defaultName","verifiedFiles","processBlobData","blobData","processCanvas","processCanvasData","canvasData","normalizedQuality","processFileOrInput","fileOrInput","files","fileContainer","_prepareItemsForUpload","cancel","uploadData","_uploadData","getName","_handler","cancelAll","storedIdsCopy","storedFileId","clearStoredFiles","continueUpload","enabled","_uploadFile","deleteFile","_onSubmitDelete","doesExist","fileOrBlobId","isValid","drawThumbnail","fileId","imgOrCanvas","maxSize","fromServer","customResizeFunction","fileOrUrl","promiseToReturn","_imageGenerator","_thumbnailUrls","scale","getFile","container","generate","modifiedContainer","reason","getButton","_getButton","_buttonIdsForFileIds","getEndpoint","_endpointStore","uploadDataRecord","getInProgress","getParentId","uploadDataEntry","getUploads","getResumableFilesData","getSize","getNetUploads","_netUploaded","getRemainingAllowedItems","allowedItems","_currentItemLimit","_netUploadedOrQueued","getUuid","isResumable","hasResumeRecord","debug","pauseUpload","expunge","_autoRetries","_retryTimeouts","_preventRetries","_buttons","button","_paramsStore","_pasteHandler","session","refreshOnReset","_refreshSessionData","_succeededSinceLastAllComplete","_failedSinceLastAllComplete","_totalProgress","_customResumeDataStore","retry","_manualRetry","scaleImage","specs","Scaler","setCustomHeaders","headers","_customHeadersStore","setCustomResumeData","setDeleteFileCustomHeaders","_deleteFileCustomHeadersStore","setDeleteFileEndpoint","_deleteFileEndpointStore","setDeleteFileParams","_deleteFileParamsStore","setEndpoint","setForm","elementOrId","_updateFormSupportAndParams","setItemLimit","newItemLimit","setName","setParams","setUuid","_onDeleteComplete","errorMessage","uploadStoredFiles","_itemError","_uploadStoredFiles","basePrivateApi","sessionData","deleteFileEndpoint","deleteFileParams","thumbnailUrl","_annotateWithButtonId","associatedInput","qqButtonId","_getButtonId","_batchError","onError","_createDeleteHandler","DeleteFileAjaxRequester","method","maxConnections","uuidParamName","request","uuidName","customHeaders","paramsStore","endpointStore","cors","onDelete","_onDelete","onDeleteComplete","xhrOrXdr","isError","_createPasteHandler","PasteSupport","targetElement","paste","pasteReceived","_handleCheckedCallback","onPasteReceived","_handlePasteSuccess","identifier","_createStore","initialValue","_readOnlyValues_","store","catchall","perIdReadOnlyValues","readOnlyValues","copy","orig","getReadOnlyValues","includeReadOnlyValues","existing","values","addReadOnly","_createUploadDataTracker","_onUploadStatusChange","_maybeAllComplete","setTimeout","_createUploadButton","accept","validation","allowedExtensions","classes","buttonFocus","buttonHover","workarounds","ios8BrowserCrash","iosEmptyVideos","_isAllowedExtension","inputName","_onInputChange","fileInputTitle","_disposeSupport","_createUploadHandler","additionalOptions","namespace","lastOnProgress","preventRetryParam","preventRetryResponseProperty","onProgress","loaded","total","_onProgress","onComplete","xhr","retVal","_onComplete","onCancel","cancelFinalizationEffort","_onCancel","onUploadPrep","_onUploadPrep","onUpload","_onUpload","onUploadResult","onUploadChunk","chunkData","_onUploadChunk","onUploadChunkResult","partIndex","onUploadChunkSuccess","_onUploadChunkSuccess","onResume","customResumeData","onAutoRetry","responseJSON","_onAutoRetry","onUuidChanged","setSize","_setSize","getDataByUuid","isQueued","isInProgress","getCustomResumeData","_getCustomResumeData","UploadHandlerController","_fileOrBlobRejected","_formatSize","sizeSymbols","max","toFixed","_generateExtraButtonSpecs","_extraButtonSpecs","extraButtons","extraButtonOptionEntry","extraButtonSpec","_initExtraButton","extraButtonsSpec","_defaultButtonId","buttonOrFileInputOrFile","inputs","fileInput","fileBlobOrInput","_getNotFinished","_getValidationBase","_getValidationDescriptor","fileWrapper","_getValidationDescriptors","fileWrappers","fileDescriptors","_handleCameraAccess","camera","optionRoot","details","callbackRetVal","successParam","newFileWrapperList","actualFile","handler","_customNewFileHandler","_handleNewFileGeneric","addFileToHandler","_trackButton","fileList","extSuppliedName","extension","_handleDeleteSuccess","_handleDeleteFailed","_initFormSupportAndParams","_formSupport","FormSupport","attachedToForm","getFormInputsAsObject","autoUpload","newAutoUpload","newEndpoint","_isDeletePossible","expected","allowXdr","allowed","valid","allowedExt","extRegex","code","maybeNameOrNames","replacement","extensionsForMessage","placeholderMatch","messages","validationBase","allowedExtension","formatFileName","sizeLimit","minSizeLimit","placeholder","_onBeforeManualRetry","notFinished","_onAllComplete","ios8SafariUploads","alert","unsupportedBrowserIos8Safari","_maybeParseAndSendUploadError","response","errorReason","defaultResponseError","_maybeProcessNextItemAfterOnValidateCallback","validItem","stopOnFirstInvalidFile","validationDescriptor","onValidate","_onValidateCallbackSuccess","_onValidateCallbackFailure","successful","failed","onAllComplete","_shouldAutoRetry","retryWaitPeriod","autoAttemptDelay","_onBeforeAutoRetry","itemLimit","onManualRetry","clearTimeout","storedItemIndex","fileIndex","onIndividualProgress","_onSubmit","_onSubmitCallbackSuccess","_onSubmitted","onSubmitted","_storeForLater","onSuccessCallback","additionalMandatedParams","adjustedOnSuccessCallback","onSubmitDelete","_deleteHandler","sendDelete","_onTotalProgress","onTotalProgress","enableAuto","_onValidateBatchCallbackFailure","_onValidateBatchCallbackSuccess","validationDescriptors","proposedNetFilesUploadedOrQueued","tooManyItemsError","nextIndex","_validateFileOrBlobData","_upload","onValidateBatch","_preventLeaveInProgress","event","onLeave","Session","_session","addFileRecord","refresh","_sessionRequestComplete","onSessionRequestComplete","onNewSize","maxAutoAttempts","formElementOrId","onSubmit","idToUpload","stillSubmitting","validityChecker","allowEmpty","ImageValidation","validate","image","errorCode","_wrapCallbacks","safeCallback","errorMsg","exception","callbackFunc","disableCancelForFormUploads","warnBeforeUnload","filenameParam","forceMultipart","omitDefaultParams","paramsInBody","requireSuccessJson","totalFileSizeName","maxHeight","maxWidth","minHeight","minWidth","maybeXhr","maybeXhrOrXdr","attemptNumber","fileOrBlobData","typeError","sizeError","minSizeError","emptyError","noFilesError","maxHeightImageError","maxWidthImageError","minHeightImageError","minWidthImageError","retryFailTooManyItems","concurrent","mandatory","paramNames","partByteOffset","chunkSize","totalFileSize","totalParts","partSize","jsonPayload","resetOnStatus","recordsExpireIn","resuming","customKeys","fileOrBlobName","sendCredentials","interceptSubmit","customResizer","sendOriginal","orient","defaultType","defaultQuality","failureText","includeExif","sizes","ImageGenerator","_scaler","handleNewFile","TotalProgress","entry","AjaxRequester","isSimpleMethod","containsNonSimpleHeaders","containsNonSimple","header","isXdr","getCorsAjaxTransport","ontimeout","onprogress","getXhrOrXdr","suppliedXhr","requestData","dequeue","nextId","queue","sendRequest","xdrError","isResponseSuccessful","getParams","onDemandParams","additionalParams","mandatedParams","optXhr","url","payload","onSend","createUrl","additionalQueryParams","getXdrLoadHandler","getXdrErrorHandler","onreadystatechange","getXhrReadyStateChangeHandler","registerForUploadProgress","open","setHeaders","send","shouldParamsBeInQueryString","contentType","stringify","addToPath","readyState","lengthComputable","onDemandHeaders","additionalHeaders","allHeaders","acceptHeader","setRequestHeader","allowXRequestedWithAndCacheControl","responseCode","successfulResponseCodes","prepareToSend","validMethods","DELETE","PATCH","POST","PUT","GET","initTransport","path","cacheBuster","withPath","appendToPath","withParams","withQueryParams","_additionalQueryParams_","withHeaders","withPayload","thePayload","withCacheBuster","qqtimestamp","Date","getTime","canceled","UploadHandler","fileState","fileItem","getThirdPartyFileId","_getFileState","_setThirdPartyFileId","thirdPartyFileId","_wasCanceled","preventRetryResponse","controller","chunkingPossible","concurrentChunkingPossible","chunked","chunkIdx","_getChunkData","attemptingResume","chunkProgress","_getChunkDataForCallback","finalize","finalizeChunks","normaizedResponse","normalizeResponse","_maybeDeletePersistedChunkData","cleanup","normalizedResponse","handleFailure","clearCachedChunk","inProgressIdx","responseToReport","inProgressChunksArray","inProgress","remaining","unshift","ignoreFailure","_getXhrs","ckid","ckXhr","abort","_cancelled","moveInProgressToRemaining","connectionManager","free","hasMoreParts","nextPart","nextIdx","_getTotalChunks","reevaluateChunking","sendNext","inProgressChunks","available","requestOverrides","uploadChunkData","overrides","uploadChunk","inProgressChunkIdx","_maybePersistChunkedState","clearXhr","_open","_openChunks","_waiting","openChunkEntriesCount","openChunksCount","openChunkIndexes","dontAllowNext","allowNext","waitingIndex","connectionsIndex","getProxyOrBlob","getWaitingOrConnected","waitingOrConnected","chunks","parseInt","isUsingConnection","openChunksEntry","simple","uploadFile","maybeNewUuid","_clearXhrs","getProxy","initHandler","handlerType","handlerModuleSubtype","onFinalizing","_removeExpiredChunkingRecords","isDeferredEligibleForUpload","maybeDefer","generatedBlob","updateBlob","maybeSendDeferredFiles","errorResponse","idsInGroup","uploadedThisId","idInGroup","now","originalResponse","_shouldChunkThisFile","blobToUpload","cancelRetVal","isProxied","_getLocalStorageId","isAttemptingResume","WindowReceiveMessage","callbackWrapperDetachers","receiveMessage","onMessageCallbackWrapper","stopReceivingMessages","detacher","FormUploadHandler","expungeFile","detachLoadEvents","isCors","postMessageCallbackTimers","corsMessageReceiver","iframe","getElementById","_getIframeName","getFileIdForIframeName","iframeName","initIframeForUpload","body","registerPostMessageCallback","onloadCallbacks","onloadCallback","_parseJsonResponse","_detachLoadEvent","formHandlerInstanceId","_attachLoadEvent","responseDescriptor","contentDocument","_createIframe","_initFormForUpload","targetName","innerHtmlOrMessage","XhrUploadHandler","xhrId","ajaxRequester","_getAjaxRequester","getChunkSize","chunkFiles","resumeEnabled","blobOrProxy","_initTempState","_maybePrepareForResume","cachedChunks","tempState","xhrs","ajaxRequesters","responseParser","lastChunkIdx","_getXhr","resumableFilesData","_iterateResumeRecords","notResumable","optInProgress","optRemaining","chunkingState","paused","totalChunks","parts","newBlob","chunkId","_createXhr","optChunkIdx","_registerXhr","chunkIndex","fileSize","startBytes","endBytes","part","count","startByte","endByte","localStorageId","_getMimeType","_getPersistableData","ceil","_markNotResumable","removeItem","persistedData","lastUpdated","_registerProgressHandler","progressCalculator","totalSuccessfullyLoadedForFile","loadedForRequest","totalForRequest","estActualChunkLoaded","totalLoadedForFile","chunkLoaded","optAjaxRequester","xhrsId","expirationDays","expirationDate","setDate","getDate","requester","_method","detectSubsampling","img","ctx","iw","naturalWidth","ih","naturalHeight","width","getContext","drawImage","getImageData","detectVerticalSquash","alpha","ratio","sy","ey","py","renderImageToDataURL","doSquash","renderImageToCanvas","maybeCalculateDownsampledDimensions","origHeight","origWidth","newHeight","sqrt","newWidth","modifiedDimensions","save","resize","renderImageToCanvasWithCustomResizer","imageHeight","imageWidth","orientation","targetHeight","targetWidth","transformCoordinate","tmpCtx","sx","dx","d","tmpCanvas","vertSquashRatio","dw","dh","dy","clearRect","restore","qqImageRendered","resizeInfo","sourceCanvas","sourceCanvasContext","targetCanvas","translate","rotate","PI","MegaPixImage","srcImage","errorCallback","Image","URL","createObjectURL","webkitURL","src","listeners","imageLoadListeners","render","opt","imgWidth","imgHeight","optionsKey","optionsValue","oldTargetSrc","onrender","isImg","el","isCanvas","isImgCorsSupported","crossOrigin","isCanvasSupported","determineMimeOfFileName","nameWithPath","pathSegments","isCrossOrigin","targetProtocol","targetHostname","targetPort","targetAnchor","href","protocol","port","hostname","location","registerImgLoadListeners","registerCanvasDrawImageListener","registerThumbnailRenderedListener","registered","draw","drawPreview","Identify","megapixErrorHandler","isPreviewable","dummyExif","exif","Exif","mpImg","Orientation","failureMsg","drawOnCanvasOrImgFromUrl","canvasOrImg","tempImg","tempImgRender","drawOnImgFromUrlWithCssScaling","drawFromUrl","fileBlobOrUrl","_testing","parseLittleEndian","hex","pow","seekToApp1","offset","theOffset","thePromise","segmentLength","getApp1Offset","isLittleEndian","app1Start","getDirEntryCount","littleEndian","getIfd","dirEntries","getDirEntries","ifdHex","getTagValues","tagsToFind","TAG_IDS","vals","tagValHex","tagValLength","idHex","tagsToFindIdx","TAG_INFO","274","parser","onParseFailure","app1Offset","dirEntryCount","tagValues","isIdentifiable","magicBytes","questionableBytes","identifiable","magicBytesEntries","magicBytesArrayEntry","previewable","isPreviewableSync","PREVIEWABLE_MIME_TYPES","fileMime","isRecognizedImage","image/jpeg","image/gif","image/png","image/bmp","image/tiff","hasNonZeroLimits","limits","atLeastOne","limit","getWidthHeight","sizeDetermination","getFailingLimit","dimensions","failingLimit","limitName","limitValue","limitMatcher","dimensionPropName","actualValue","validationEffort","isJsonResponseValid","handleFileItems","fileItems","someItemsIgnored","err","refreshEffort","refreshCompleteCallback","requesterOptions","SessionAjaxRequester","queryServer","responseText","includeOriginal","failedToScaleText","_getSortedSizes","getFileRecords","originalFileUuid","originalFileName","originalBlobOrBlobData","records","originalBlob","sizeRecord","outputType","_determineOutputType","requestedType","refType","_getName","_generateScaledImage","failedText","api","scaledIds","originalId","blobSize","scaledId","qqparentuuid","qqparentsize","param","scalingEffort","scalingOptions","scaler","referenceType","scaledVersionProperties","startOfExt","versionType","scaledName","scaledExt","nameAppendage","sort","a","b","sourceFile","imageGenerator","scaledImageDataUri","signalSuccess","_insertExifHeader","scaledImageDataUriWithExif","originalImage","reader","insertionEffort","originalImageDataUri","ExifRestorer","readAsDataURL","_dataUriToBlob","_createBlob","KEY_STR","encode64","chr1","chr2","enc1","enc2","enc3","output","chr3","enc4","isNaN","origFileBase64","resizedFileBase64","rawImage","decode64","segments","slice2Segments","exifManipulation","exifArray","getExifArray","newImageArray","insertExif","seg","x","imageData","buf","separatePoint","mae","ato","array","rawImageArray","head","endPoint","perFileProgress","totalLoaded","totalSize","lastLoadedSent","lastTotalSent","callbackProxy","noRetryableFiles","retryable","none","failedId","updateTotalProgress","onNew","newLoaded","newTotal","oldLoaded","oldTotal","isImage","unregisterPasteHandler","detachPasteHandler","clipboardData","getAsFile","startUpload","determineNewEndpoint","formEl","validateForm","nativeSubmit","checkValidity","maybeUploadOnSubmit","submit","_form2Obj","notIrrelevantType","irrelevantTypes","radioOrCheckbox","ignoreValue","checked","selectValue","select","selected","elements","getIframeContentJson","doc","innerHtml","contentWindow","nodeValue","createForm","responseFromMessage","multipart","addChunkingSpecificParams","allChunksDoneRequester","AllChunksDoneAjaxRequester","createReadyStateChangedHandler","onUploadOrChunkComplete","getChunksCompleteParams","isErrorUploadResponse","parseResponse","sendChunksCompleteRequest","complete","setParamsAndGetEntityToSend","entityToSendParams","xhrOverrides","customParams","defaultParams","xhrOverrideParams","setUploadHeaders","headersOptions","headerOverrides","headerName","headerValue","extraHeaders","uploadChunkParams","toSend","promises","endpointHandler"],"mappings":"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","file":"vendor/fine-uploader-wrappers.chunk.js","sourcesContent":["webpackJsonppanneau([224],{\n\n/***/ 807:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar _typeof=typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};Object.defineProperty(exports,\"__esModule\",{value:true});var _baseWrapper=__webpack_require__(941);var _baseWrapper2=_interopRequireDefault(_baseWrapper);var _core=__webpack_require__(943);var _core2=_interopRequireDefault(_core);var _callbackNames=__webpack_require__(937);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&((typeof call==='undefined'?'undefined':_typeof(call))===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+(typeof superClass==='undefined'?'undefined':_typeof(superClass)));}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var FineUploaderTraditional=function(_BaseWrapper){_inherits(FineUploaderTraditional,_BaseWrapper);function FineUploaderTraditional(_ref){var options=_ref.options;_classCallCheck(this,FineUploaderTraditional);return _possibleConstructorReturn(this,(FineUploaderTraditional.__proto__||Object.getPrototypeOf(FineUploaderTraditional)).call(this,{callbackNames:_callbackNames.traditional,options:options,qq:_core2.default,type:'traditional'}));}return FineUploaderTraditional;}(_baseWrapper2.default);exports.default=FineUploaderTraditional;\n\n/***/ }),\n\n/***/ 937:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});exports.s3=exports.traditional=exports.thenable=undefined;var _objectAssign=__webpack_require__(194);var _objectAssign2=_interopRequireDefault(_objectAssign);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var thenable=exports.thenable=['onCancel','onPasteReceived','onSubmit','onSubmitDelete','onUpload','onUploadChunk','onValidate','onValidateBatch'];var traditional=exports.traditional=['onAutoRetry','onCancel','onComplete','onAllComplete','onDelete','onDeleteComplete','onError','onManualRetry','onPasteReceived','onProgress','onResume','onSessionRequestComplete','onStatusChange','onSubmit','onSubmitDelete','onSubmitted','onTotalProgress','onUpload','onUploadChunk','onUploadChunkSuccess','onValidate','onValidateBatch'];var s3=exports.s3=(0,_objectAssign2.default)([],traditional,['onCredentialsExpired']);\n\n/***/ }),\n\n/***/ 941:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _objectAssign=__webpack_require__(194);var _objectAssign2=_interopRequireDefault(_objectAssign);var _callbackProxy=__webpack_require__(942);var _callbackProxy2=_interopRequireDefault(_callbackProxy);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}var callbackProxies=new WeakMap();var BaseWrapper=function(){function BaseWrapper(_ref){var callbackNames=_ref.callbackNames,options=_ref.options,qq=_ref.qq,type=_ref.type;_classCallCheck(this,BaseWrapper);var callbacks=options.callbacks||{};var optionsSansCallbacks=(0,_objectAssign2.default)({},options);delete optionsSansCallbacks.callbacks;this.options=optionsSansCallbacks;callbackProxies.set(this,createCallbackProxies(callbackNames));registerOptionsCallbacks({callbacks:callbacks,callbackProxies:callbackProxies.get(this)});this.methods=createFineUploader({callbackProxies:callbackProxies.get(this),options:optionsSansCallbacks,qq:qq,type:type});this.qq=qq;}_createClass(BaseWrapper,[{key:'off',value:function off(name,callback){var normalizedName=normalizeCallbackName(name);var proxy=callbackProxies.get(this)[normalizedName];proxy.remove(callback);}},{key:'on',value:function on(name,callback){var normalizedName=normalizeCallbackName(name);var proxy=callbackProxies.get(this)[normalizedName];proxy.add(callback);}}]);return BaseWrapper;}();exports.default=BaseWrapper;var createCallbackProxies=function createCallbackProxies(names){var proxyMap={};names.forEach(function(callbackName){proxyMap[callbackName]=new _callbackProxy2.default(callbackName);});return proxyMap;};var createFineUploader=function createFineUploader(_ref2){var callbackProxies=_ref2.callbackProxies,options=_ref2.options,qq=_ref2.qq,type=_ref2.type;var optionsCopy=(0,_objectAssign2.default)({callbacks:{}},options);Object.keys(callbackProxies).forEach(function(callbackName){var proxy=callbackProxies[callbackName];optionsCopy.callbacks[callbackName]=proxy.proxyFunction;});if(type==='traditional'){return new qq.FineUploaderBasic(optionsCopy);}else{return new qq[type].FineUploaderBasic(optionsCopy);}};var normalizeCallbackName=function normalizeCallbackName(name){if(!name.match(/^on[A-Z]/)){return'on'+name[0].toUpperCase()+name.slice(1);}return name;};var registerOptionsCallbacks=function registerOptionsCallbacks(_ref3){var callbacks=_ref3.callbacks,callbackProxies=_ref3.callbackProxies;Object.keys(callbacks).forEach(function(callbackName){var callbackProxy=callbackProxies[callbackName];callbackProxy.add(callbacks[callbackName]);});};\n\n/***/ }),\n\n/***/ 942:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar _typeof2=typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};Object.defineProperty(exports,\"__esModule\",{value:true});var _typeof=typeof Symbol===\"function\"&&_typeof2(Symbol.iterator)===\"symbol\"?function(obj){return typeof obj===\"undefined\"?\"undefined\":_typeof2(obj);}:function(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj===\"undefined\"?\"undefined\":_typeof2(obj);};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _objectAssign=__webpack_require__(194);var _objectAssign2=_interopRequireDefault(_objectAssign);var _callbackNames=__webpack_require__(937);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}var privateData=new WeakMap();var callbacks=new WeakMap();var CallbackProxy=function(){function CallbackProxy(name){_classCallCheck(this,CallbackProxy);callbacks.set(this,[]);privateData.set(this,{name:name,proxyFunction:getProxyFunction.call(this,{name:name})});}_createClass(CallbackProxy,[{key:'add',value:function add(callback){callbacks.get(this).push(callback);}},{key:'remove',value:function remove(callback){var index=callbacks.get(this).indexOf(callback);if(index>=0){callbacks.get(this).splice(index,1);}}},{key:'name',get:function get(){return privateData.get(this).name;}},{key:'proxyFunction',get:function get(){return privateData.get(this).proxyFunction;}}]);return CallbackProxy;}();exports.default=CallbackProxy;var getProxyFunction=function getProxyFunction(_ref){var name=_ref.name;var proxyClassContext=this;return function(){for(var _len=arguments.length,originalCallbackArguments=Array(_len),_key=0;_key<_len;_key++){originalCallbackArguments[_key]=arguments[_key];}var isThenable=_callbackNames.thenable.indexOf(name)>=0;var registeredCallbacks=callbacks.get(proxyClassContext);var callbackReturnValue=void 0;if(isThenable){callbackReturnValue=executeThenableCallbacks({registeredCallbacks:registeredCallbacks,originalCallbackArguments:originalCallbackArguments});}else{(0,_objectAssign2.default)([],registeredCallbacks).every(function(callback){var returnValue=callback.apply(null,originalCallbackArguments);callbackReturnValue=returnValue;return returnValue!==false;});}return callbackReturnValue;};};var executeThenableCallbacks=function executeThenableCallbacks(_ref2){var registeredCallbacks=_ref2.registeredCallbacks,originalCallbackArguments=_ref2.originalCallbackArguments;if(registeredCallbacks.length){return executeThenableCallback({registeredCallbacks:(0,_objectAssign2.default)([],registeredCallbacks).reverse(),originalCallbackArguments:originalCallbackArguments});}return Promise.resolve();};var getResultToPass=function getResultToPass(_ref3){var newResult=_ref3.newResult,previousResult=_ref3.previousResult;if(newResult!==null&&(typeof newResult==='undefined'?'undefined':_typeof(newResult))==='object'){return(0,_objectAssign2.default)({},previousResult||{},newResult);}else{return newResult||previousResult;}};var executeThenableCallback=function executeThenableCallback(_ref4){var registeredCallbacks=_ref4.registeredCallbacks,originalCallbackArguments=_ref4.originalCallbackArguments,previousResult=_ref4.previousResult;return new Promise(function(resolve,reject){var callback=registeredCallbacks.pop();var returnValue=callback.apply(null,originalCallbackArguments);if(returnValue&&returnValue.then){returnValue.then(function(result){var resultToPass=getResultToPass({newResult:result,previousResult:previousResult});if(registeredCallbacks.length){executeThenableCallback({registeredCallbacks:registeredCallbacks,originalCallbackArguments:originalCallbackArguments,previousResult:resultToPass}).then(resolve,reject);}else{resolve(resultToPass);}}).catch(function(error){return reject(error);});}else if(returnValue===false){reject();}else{var resultToPass=getResultToPass({newResult:returnValue,previousResult:previousResult});if(registeredCallbacks.length){executeThenableCallback({registeredCallbacks:registeredCallbacks,originalCallbackArguments:originalCallbackArguments,previousResult:resultToPass}).then(resolve,reject);}else{resolve(resultToPass);}}});};\n\n/***/ }),\n\n/***/ 943:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nmodule.exports=__webpack_require__(944);\n\n/***/ }),\n\n/***/ 944:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;var _typeof=typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};// Fine Uploader 5.16.2 - MIT licensed. http://fineuploader.com\n(function(global){var qq=function qq(element){\"use strict\";return{hide:function hide(){element.style.display=\"none\";return this;},attach:function attach(type,fn){if(element.addEventListener){element.addEventListener(type,fn,false);}else if(element.attachEvent){element.attachEvent(\"on\"+type,fn);}return function(){qq(element).detach(type,fn);};},detach:function detach(type,fn){if(element.removeEventListener){element.removeEventListener(type,fn,false);}else if(element.attachEvent){element.detachEvent(\"on\"+type,fn);}return this;},contains:function contains(descendant){if(!descendant){return false;}if(element===descendant){return true;}if(element.contains){return element.contains(descendant);}else{return!!(descendant.compareDocumentPosition(element)&8);}},insertBefore:function insertBefore(elementB){elementB.parentNode.insertBefore(element,elementB);return this;},remove:function remove(){element.parentNode.removeChild(element);return this;},css:function css(styles){if(element.style==null){throw new qq.Error(\"Can't apply style to node as it is not on the HTMLElement prototype chain!\");}if(styles.opacity!=null){if(typeof element.style.opacity!==\"string\"&&typeof element.filters!==\"undefined\"){styles.filter=\"alpha(opacity=\"+Math.round(100*styles.opacity)+\")\";}}qq.extend(element.style,styles);return this;},hasClass:function hasClass(name,considerParent){var re=new RegExp(\"(^| )\"+name+\"( |$)\");return re.test(element.className)||!!(considerParent&&re.test(element.parentNode.className));},addClass:function addClass(name){if(!qq(element).hasClass(name)){element.className+=\" \"+name;}return this;},removeClass:function removeClass(name){var re=new RegExp(\"(^| )\"+name+\"( |$)\");element.className=element.className.replace(re,\" \").replace(/^\\s+|\\s+$/g,\"\");return this;},getByClass:function getByClass(className,first){var candidates,result=[];if(first&&element.querySelector){return element.querySelector(\".\"+className);}else if(element.querySelectorAll){return element.querySelectorAll(\".\"+className);}candidates=element.getElementsByTagName(\"*\");qq.each(candidates,function(idx,val){if(qq(val).hasClass(className)){result.push(val);}});return first?result[0]:result;},getFirstByClass:function getFirstByClass(className){return qq(element).getByClass(className,true);},children:function children(){var children=[],child=element.firstChild;while(child){if(child.nodeType===1){children.push(child);}child=child.nextSibling;}return children;},setText:function setText(text){element.innerText=text;element.textContent=text;return this;},clearText:function clearText(){return qq(element).setText(\"\");},hasAttribute:function hasAttribute(attrName){var attrVal;if(element.hasAttribute){if(!element.hasAttribute(attrName)){return false;}return /^false$/i.exec(element.getAttribute(attrName))==null;}else{attrVal=element[attrName];if(attrVal===undefined){return false;}return /^false$/i.exec(attrVal)==null;}}};};(function(){\"use strict\";qq.canvasToBlob=function(canvas,mime,quality){return qq.dataUriToBlob(canvas.toDataURL(mime,quality));};qq.dataUriToBlob=function(dataUri){var arrayBuffer,byteString,createBlob=function createBlob(data,mime){var BlobBuilder=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,blobBuilder=BlobBuilder&&new BlobBuilder();if(blobBuilder){blobBuilder.append(data);return blobBuilder.getBlob(mime);}else{return new Blob([data],{type:mime});}},intArray,mimeString;if(dataUri.split(\",\")[0].indexOf(\"base64\")>=0){byteString=atob(dataUri.split(\",\")[1]);}else{byteString=decodeURI(dataUri.split(\",\")[1]);}mimeString=dataUri.split(\",\")[0].split(\":\")[1].split(\";\")[0];arrayBuffer=new ArrayBuffer(byteString.length);intArray=new Uint8Array(arrayBuffer);qq.each(byteString,function(idx,character){intArray[idx]=character.charCodeAt(0);});return createBlob(arrayBuffer,mimeString);};qq.log=function(message,level){if(window.console){if(!level||level===\"info\"){window.console.log(message);}else{if(window.console[level]){window.console[level](message);}else{window.console.log(\"<\"+level+\"> \"+message);}}}};qq.isObject=function(variable){return variable&&!variable.nodeType&&Object.prototype.toString.call(variable)===\"[object Object]\";};qq.isFunction=function(variable){return typeof variable===\"function\";};qq.isArray=function(value){return Object.prototype.toString.call(value)===\"[object Array]\"||value&&window.ArrayBuffer&&value.buffer&&value.buffer.constructor===ArrayBuffer;};qq.isItemList=function(maybeItemList){return Object.prototype.toString.call(maybeItemList)===\"[object DataTransferItemList]\";};qq.isNodeList=function(maybeNodeList){return Object.prototype.toString.call(maybeNodeList)===\"[object NodeList]\"||maybeNodeList.item&&maybeNodeList.namedItem;};qq.isString=function(maybeString){return Object.prototype.toString.call(maybeString)===\"[object String]\";};qq.trimStr=function(string){if(String.prototype.trim){return string.trim();}return string.replace(/^\\s+|\\s+$/g,\"\");};qq.format=function(str){var args=Array.prototype.slice.call(arguments,1),newStr=str,nextIdxToReplace=newStr.indexOf(\"{}\");qq.each(args,function(idx,val){var strBefore=newStr.substring(0,nextIdxToReplace),strAfter=newStr.substring(nextIdxToReplace+2);newStr=strBefore+val+strAfter;nextIdxToReplace=newStr.indexOf(\"{}\",nextIdxToReplace+val.length);if(nextIdxToReplace<0){return false;}});return newStr;};qq.isFile=function(maybeFile){return window.File&&Object.prototype.toString.call(maybeFile)===\"[object File]\";};qq.isFileList=function(maybeFileList){return window.FileList&&Object.prototype.toString.call(maybeFileList)===\"[object FileList]\";};qq.isFileOrInput=function(maybeFileOrInput){return qq.isFile(maybeFileOrInput)||qq.isInput(maybeFileOrInput);};qq.isInput=function(maybeInput,notFile){var evaluateType=function evaluateType(type){var normalizedType=type.toLowerCase();if(notFile){return normalizedType!==\"file\";}return normalizedType===\"file\";};if(window.HTMLInputElement){if(Object.prototype.toString.call(maybeInput)===\"[object HTMLInputElement]\"){if(maybeInput.type&&evaluateType(maybeInput.type)){return true;}}}if(maybeInput.tagName){if(maybeInput.tagName.toLowerCase()===\"input\"){if(maybeInput.type&&evaluateType(maybeInput.type)){return true;}}}return false;};qq.isBlob=function(maybeBlob){if(window.Blob&&Object.prototype.toString.call(maybeBlob)===\"[object Blob]\"){return true;}};qq.isXhrUploadSupported=function(){var input=document.createElement(\"input\");input.type=\"file\";return input.multiple!==undefined&&typeof File!==\"undefined\"&&typeof FormData!==\"undefined\"&&typeof qq.createXhrInstance().upload!==\"undefined\";};qq.createXhrInstance=function(){if(window.XMLHttpRequest){return new XMLHttpRequest();}try{return new ActiveXObject(\"MSXML2.XMLHTTP.3.0\");}catch(error){qq.log(\"Neither XHR or ActiveX are supported!\",\"error\");return null;}};qq.isFolderDropSupported=function(dataTransfer){return dataTransfer.items&&dataTransfer.items.length>0&&dataTransfer.items[0].webkitGetAsEntry;};qq.isFileChunkingSupported=function(){return!qq.androidStock()&&qq.isXhrUploadSupported()&&(File.prototype.slice!==undefined||File.prototype.webkitSlice!==undefined||File.prototype.mozSlice!==undefined);};qq.sliceBlob=function(fileOrBlob,start,end){var slicer=fileOrBlob.slice||fileOrBlob.mozSlice||fileOrBlob.webkitSlice;return slicer.call(fileOrBlob,start,end);};qq.arrayBufferToHex=function(buffer){var bytesAsHex=\"\",bytes=new Uint8Array(buffer);qq.each(bytes,function(idx,byt){var byteAsHexStr=byt.toString(16);if(byteAsHexStr.length<2){byteAsHexStr=\"0\"+byteAsHexStr;}bytesAsHex+=byteAsHexStr;});return bytesAsHex;};qq.readBlobToHex=function(blob,startOffset,length){var initialBlob=qq.sliceBlob(blob,startOffset,startOffset+length),fileReader=new FileReader(),promise=new qq.Promise();fileReader.onload=function(){promise.success(qq.arrayBufferToHex(fileReader.result));};fileReader.onerror=promise.failure;fileReader.readAsArrayBuffer(initialBlob);return promise;};qq.extend=function(first,second,extendNested){qq.each(second,function(prop,val){if(extendNested&&qq.isObject(val)){if(first[prop]===undefined){first[prop]={};}qq.extend(first[prop],val,true);}else{first[prop]=val;}});return first;};qq.override=function(target,sourceFn){var super_={},source=sourceFn(super_);qq.each(source,function(srcPropName,srcPropVal){if(target[srcPropName]!==undefined){super_[srcPropName]=target[srcPropName];}target[srcPropName]=srcPropVal;});return target;};qq.indexOf=function(arr,elt,from){if(arr.indexOf){return arr.indexOf(elt,from);}from=from||0;var len=arr.length;if(from<0){from+=len;}for(;from<len;from+=1){if(arr.hasOwnProperty(from)&&arr[from]===elt){return from;}}return-1;};qq.getUniqueId=function(){return\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c==\"x\"?r:r&3|8;return v.toString(16);});};qq.ie=function(){return navigator.userAgent.indexOf(\"MSIE\")!==-1||navigator.userAgent.indexOf(\"Trident\")!==-1;};qq.ie7=function(){return navigator.userAgent.indexOf(\"MSIE 7\")!==-1;};qq.ie8=function(){return navigator.userAgent.indexOf(\"MSIE 8\")!==-1;};qq.ie10=function(){return navigator.userAgent.indexOf(\"MSIE 10\")!==-1;};qq.ie11=function(){return qq.ie()&&navigator.userAgent.indexOf(\"rv:11\")!==-1;};qq.edge=function(){return navigator.userAgent.indexOf(\"Edge\")>=0;};qq.safari=function(){return navigator.vendor!==undefined&&navigator.vendor.indexOf(\"Apple\")!==-1;};qq.chrome=function(){return navigator.vendor!==undefined&&navigator.vendor.indexOf(\"Google\")!==-1;};qq.opera=function(){return navigator.vendor!==undefined&&navigator.vendor.indexOf(\"Opera\")!==-1;};qq.firefox=function(){return!qq.edge()&&!qq.ie11()&&navigator.userAgent.indexOf(\"Mozilla\")!==-1&&navigator.vendor!==undefined&&navigator.vendor===\"\";};qq.windows=function(){return navigator.platform===\"Win32\";};qq.android=function(){return navigator.userAgent.toLowerCase().indexOf(\"android\")!==-1;};qq.androidStock=function(){return qq.android()&&navigator.userAgent.toLowerCase().indexOf(\"chrome\")<0;};qq.ios6=function(){return qq.ios()&&navigator.userAgent.indexOf(\" OS 6_\")!==-1;};qq.ios7=function(){return qq.ios()&&navigator.userAgent.indexOf(\" OS 7_\")!==-1;};qq.ios8=function(){return qq.ios()&&navigator.userAgent.indexOf(\" OS 8_\")!==-1;};qq.ios800=function(){return qq.ios()&&navigator.userAgent.indexOf(\" OS 8_0 \")!==-1;};qq.ios=function(){return navigator.userAgent.indexOf(\"iPad\")!==-1||navigator.userAgent.indexOf(\"iPod\")!==-1||navigator.userAgent.indexOf(\"iPhone\")!==-1;};qq.iosChrome=function(){return qq.ios()&&navigator.userAgent.indexOf(\"CriOS\")!==-1;};qq.iosSafari=function(){return qq.ios()&&!qq.iosChrome()&&navigator.userAgent.indexOf(\"Safari\")!==-1;};qq.iosSafariWebView=function(){return qq.ios()&&!qq.iosChrome()&&!qq.iosSafari();};qq.preventDefault=function(e){if(e.preventDefault){e.preventDefault();}else{e.returnValue=false;}};qq.toElement=function(){var div=document.createElement(\"div\");return function(html){div.innerHTML=html;var element=div.firstChild;div.removeChild(element);return element;};}();qq.each=function(iterableItem,callback){var keyOrIndex,retVal;if(iterableItem){if(window.Storage&&iterableItem.constructor===window.Storage){for(keyOrIndex=0;keyOrIndex<iterableItem.length;keyOrIndex++){retVal=callback(iterableItem.key(keyOrIndex),iterableItem.getItem(iterableItem.key(keyOrIndex)));if(retVal===false){break;}}}else if(qq.isArray(iterableItem)||qq.isItemList(iterableItem)||qq.isNodeList(iterableItem)){for(keyOrIndex=0;keyOrIndex<iterableItem.length;keyOrIndex++){retVal=callback(keyOrIndex,iterableItem[keyOrIndex]);if(retVal===false){break;}}}else if(qq.isString(iterableItem)){for(keyOrIndex=0;keyOrIndex<iterableItem.length;keyOrIndex++){retVal=callback(keyOrIndex,iterableItem.charAt(keyOrIndex));if(retVal===false){break;}}}else{for(keyOrIndex in iterableItem){if(Object.prototype.hasOwnProperty.call(iterableItem,keyOrIndex)){retVal=callback(keyOrIndex,iterableItem[keyOrIndex]);if(retVal===false){break;}}}}}};qq.bind=function(oldFunc,context){if(qq.isFunction(oldFunc)){var args=Array.prototype.slice.call(arguments,2);return function(){var newArgs=qq.extend([],args);if(arguments.length){newArgs=newArgs.concat(Array.prototype.slice.call(arguments));}return oldFunc.apply(context,newArgs);};}throw new Error(\"first parameter must be a function!\");};qq.obj2url=function(obj,temp,prefixDone){var uristrings=[],prefix=\"&\",add=function add(nextObj,i){var nextTemp=temp?/\\[\\]$/.test(temp)?temp:temp+\"[\"+i+\"]\":i;if(nextTemp!==\"undefined\"&&i!==\"undefined\"){uristrings.push((typeof nextObj===\"undefined\"?\"undefined\":_typeof(nextObj))===\"object\"?qq.obj2url(nextObj,nextTemp,true):Object.prototype.toString.call(nextObj)===\"[object Function]\"?encodeURIComponent(nextTemp)+\"=\"+encodeURIComponent(nextObj()):encodeURIComponent(nextTemp)+\"=\"+encodeURIComponent(nextObj));}};if(!prefixDone&&temp){prefix=/\\?/.test(temp)?/\\?$/.test(temp)?\"\":\"&\":\"?\";uristrings.push(temp);uristrings.push(qq.obj2url(obj));}else if(Object.prototype.toString.call(obj)===\"[object Array]\"&&typeof obj!==\"undefined\"){qq.each(obj,function(idx,val){add(val,idx);});}else if(typeof obj!==\"undefined\"&&obj!==null&&(typeof obj===\"undefined\"?\"undefined\":_typeof(obj))===\"object\"){qq.each(obj,function(prop,val){add(val,prop);});}else{uristrings.push(encodeURIComponent(temp)+\"=\"+encodeURIComponent(obj));}if(temp){return uristrings.join(prefix);}else{return uristrings.join(prefix).replace(/^&/,\"\").replace(/%20/g,\"+\");}};qq.obj2FormData=function(obj,formData,arrayKeyName){if(!formData){formData=new FormData();}qq.each(obj,function(key,val){key=arrayKeyName?arrayKeyName+\"[\"+key+\"]\":key;if(qq.isObject(val)){qq.obj2FormData(val,formData,key);}else if(qq.isFunction(val)){formData.append(key,val());}else{formData.append(key,val);}});return formData;};qq.obj2Inputs=function(obj,form){var input;if(!form){form=document.createElement(\"form\");}qq.obj2FormData(obj,{append:function append(key,val){input=document.createElement(\"input\");input.setAttribute(\"name\",key);input.setAttribute(\"value\",val);form.appendChild(input);}});return form;};qq.parseJson=function(json){if(window.JSON&&qq.isFunction(JSON.parse)){return JSON.parse(json);}else{return eval(\"(\"+json+\")\");}};qq.getExtension=function(filename){var extIdx=filename.lastIndexOf(\".\")+1;if(extIdx>0){return filename.substr(extIdx,filename.length-extIdx);}};qq.getFilename=function(blobOrFileInput){if(qq.isInput(blobOrFileInput)){return blobOrFileInput.value.replace(/.*(\\/|\\\\)/,\"\");}else if(qq.isFile(blobOrFileInput)){if(blobOrFileInput.fileName!==null&&blobOrFileInput.fileName!==undefined){return blobOrFileInput.fileName;}}return blobOrFileInput.name;};qq.DisposeSupport=function(){var disposers=[];return{dispose:function dispose(){var disposer;do{disposer=disposers.shift();if(disposer){disposer();}}while(disposer);},attach:function attach(){var args=arguments;this.addDisposer(qq(args[0]).attach.apply(this,Array.prototype.slice.call(arguments,1)));},addDisposer:function addDisposer(disposeFunction){disposers.push(disposeFunction);}};};})();(function(){\"use strict\";if(true){!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(){return qq;}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));}else if(typeof module!==\"undefined\"&&module.exports){module.exports=qq;}else{global.qq=qq;}})();(function(){\"use strict\";qq.Error=function(message){this.message=\"[Fine Uploader \"+qq.version+\"] \"+message;};qq.Error.prototype=new Error();})();qq.version=\"5.16.2\";qq.supportedFeatures=function(){\"use strict\";var supportsUploading,supportsUploadingBlobs,supportsFileDrop,supportsAjaxFileUploading,supportsFolderDrop,supportsChunking,supportsResume,supportsUploadViaPaste,supportsUploadCors,supportsDeleteFileXdr,supportsDeleteFileCorsXhr,supportsDeleteFileCors,supportsFolderSelection,supportsImagePreviews,supportsUploadProgress;function testSupportsFileInputElement(){var supported=true,tempInput;try{tempInput=document.createElement(\"input\");tempInput.type=\"file\";qq(tempInput).hide();if(tempInput.disabled){supported=false;}}catch(ex){supported=false;}return supported;}function isChrome14OrHigher(){return(qq.chrome()||qq.opera())&&navigator.userAgent.match(/Chrome\\/[1][4-9]|Chrome\\/[2-9][0-9]/)!==undefined;}function isCrossOriginXhrSupported(){if(window.XMLHttpRequest){var xhr=qq.createXhrInstance();return xhr.withCredentials!==undefined;}return false;}function isXdrSupported(){return window.XDomainRequest!==undefined;}function isCrossOriginAjaxSupported(){if(isCrossOriginXhrSupported()){return true;}return isXdrSupported();}function isFolderSelectionSupported(){return document.createElement(\"input\").webkitdirectory!==undefined;}function isLocalStorageSupported(){try{return!!window.localStorage&&qq.isFunction(window.localStorage.setItem);}catch(error){return false;}}function isDragAndDropSupported(){var span=document.createElement(\"span\");return(\"draggable\"in span||\"ondragstart\"in span&&\"ondrop\"in span)&&!qq.android()&&!qq.ios();}supportsUploading=testSupportsFileInputElement();supportsAjaxFileUploading=supportsUploading&&qq.isXhrUploadSupported();supportsUploadingBlobs=supportsAjaxFileUploading&&!qq.androidStock();supportsFileDrop=supportsAjaxFileUploading&&isDragAndDropSupported();supportsFolderDrop=supportsFileDrop&&function(){var input=document.createElement(\"input\");input.type=\"file\";return!!(\"webkitdirectory\"in(input||document.querySelectorAll(\"input[type=file]\")[0]));}();supportsChunking=supportsAjaxFileUploading&&qq.isFileChunkingSupported();supportsResume=supportsAjaxFileUploading&&supportsChunking&&isLocalStorageSupported();supportsUploadViaPaste=supportsAjaxFileUploading&&isChrome14OrHigher();supportsUploadCors=supportsUploading&&(window.postMessage!==undefined||supportsAjaxFileUploading);supportsDeleteFileCorsXhr=isCrossOriginXhrSupported();supportsDeleteFileXdr=isXdrSupported();supportsDeleteFileCors=isCrossOriginAjaxSupported();supportsFolderSelection=isFolderSelectionSupported();supportsImagePreviews=supportsAjaxFileUploading&&window.FileReader!==undefined;supportsUploadProgress=function(){if(supportsAjaxFileUploading){return!qq.androidStock()&&!qq.iosChrome();}return false;}();return{ajaxUploading:supportsAjaxFileUploading,blobUploading:supportsUploadingBlobs,canDetermineSize:supportsAjaxFileUploading,chunking:supportsChunking,deleteFileCors:supportsDeleteFileCors,deleteFileCorsXdr:supportsDeleteFileXdr,deleteFileCorsXhr:supportsDeleteFileCorsXhr,dialogElement:!!window.HTMLDialogElement,fileDrop:supportsFileDrop,folderDrop:supportsFolderDrop,folderSelection:supportsFolderSelection,imagePreviews:supportsImagePreviews,imageValidation:supportsImagePreviews,itemSizeValidation:supportsAjaxFileUploading,pause:supportsChunking,progressBar:supportsUploadProgress,resume:supportsResume,scaling:supportsImagePreviews&&supportsUploadingBlobs,tiffPreviews:qq.safari(),unlimitedScaledImageSize:!qq.ios(),uploading:supportsUploading,uploadCors:supportsUploadCors,uploadCustomHeaders:supportsAjaxFileUploading,uploadNonMultipart:supportsAjaxFileUploading,uploadViaPaste:supportsUploadViaPaste};}();qq.isGenericPromise=function(maybePromise){\"use strict\";return!!(maybePromise&&maybePromise.then&&qq.isFunction(maybePromise.then));};qq.Promise=function(){\"use strict\";var successArgs,failureArgs,successCallbacks=[],failureCallbacks=[],doneCallbacks=[],state=0;qq.extend(this,{then:function then(onSuccess,onFailure){if(state===0){if(onSuccess){successCallbacks.push(onSuccess);}if(onFailure){failureCallbacks.push(onFailure);}}else if(state===-1){onFailure&&onFailure.apply(null,failureArgs);}else if(onSuccess){onSuccess.apply(null,successArgs);}return this;},done:function done(callback){if(state===0){doneCallbacks.push(callback);}else{callback.apply(null,failureArgs===undefined?successArgs:failureArgs);}return this;},success:function success(){state=1;successArgs=arguments;if(successCallbacks.length){qq.each(successCallbacks,function(idx,callback){callback.apply(null,successArgs);});}if(doneCallbacks.length){qq.each(doneCallbacks,function(idx,callback){callback.apply(null,successArgs);});}return this;},failure:function failure(){state=-1;failureArgs=arguments;if(failureCallbacks.length){qq.each(failureCallbacks,function(idx,callback){callback.apply(null,failureArgs);});}if(doneCallbacks.length){qq.each(doneCallbacks,function(idx,callback){callback.apply(null,failureArgs);});}return this;}});};qq.BlobProxy=function(referenceBlob,onCreate){\"use strict\";qq.extend(this,{referenceBlob:referenceBlob,create:function create(){return onCreate(referenceBlob);}});};qq.UploadButton=function(o){\"use strict\";var self=this,disposeSupport=new qq.DisposeSupport(),options={acceptFiles:null,element:null,focusClass:\"qq-upload-button-focus\",folders:false,hoverClass:\"qq-upload-button-hover\",ios8BrowserCrashWorkaround:false,multiple:false,name:\"qqfile\",onChange:function onChange(input){},title:null},input,buttonId;qq.extend(options,o);buttonId=qq.getUniqueId();function createInput(){var input=document.createElement(\"input\");input.setAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME,buttonId);input.setAttribute(\"title\",options.title);self.setMultiple(options.multiple,input);if(options.folders&&qq.supportedFeatures.folderSelection){input.setAttribute(\"webkitdirectory\",\"\");}if(options.acceptFiles){input.setAttribute(\"accept\",options.acceptFiles);}input.setAttribute(\"type\",\"file\");input.setAttribute(\"name\",options.name);qq(input).css({position:\"absolute\",right:0,top:0,fontFamily:\"Arial\",fontSize:qq.ie()&&!qq.ie8()?\"3500px\":\"118px\",margin:0,padding:0,cursor:\"pointer\",opacity:0});!qq.ie7()&&qq(input).css({height:\"100%\"});options.element.appendChild(input);disposeSupport.attach(input,\"change\",function(){options.onChange(input);});disposeSupport.attach(input,\"mouseover\",function(){qq(options.element).addClass(options.hoverClass);});disposeSupport.attach(input,\"mouseout\",function(){qq(options.element).removeClass(options.hoverClass);});disposeSupport.attach(input,\"focus\",function(){qq(options.element).addClass(options.focusClass);});disposeSupport.attach(input,\"blur\",function(){qq(options.element).removeClass(options.focusClass);});return input;}qq(options.element).css({position:\"relative\",overflow:\"hidden\",direction:\"ltr\"});qq.extend(this,{getInput:function getInput(){return input;},getButtonId:function getButtonId(){return buttonId;},setMultiple:function setMultiple(isMultiple,optInput){var input=optInput||this.getInput();if(options.ios8BrowserCrashWorkaround&&qq.ios8()&&(qq.iosChrome()||qq.iosSafariWebView())){input.setAttribute(\"multiple\",\"\");}else{if(isMultiple){input.setAttribute(\"multiple\",\"\");}else{input.removeAttribute(\"multiple\");}}},setAcceptFiles:function setAcceptFiles(acceptFiles){if(acceptFiles!==options.acceptFiles){input.setAttribute(\"accept\",acceptFiles);}},reset:function reset(){if(input.parentNode){qq(input).remove();}qq(options.element).removeClass(options.focusClass);input=null;input=createInput();}});input=createInput();};qq.UploadButton.BUTTON_ID_ATTR_NAME=\"qq-button-id\";qq.UploadData=function(uploaderProxy){\"use strict\";var data=[],byUuid={},byStatus={},byProxyGroupId={},byBatchId={};function getDataByIds(idOrIds){if(qq.isArray(idOrIds)){var entries=[];qq.each(idOrIds,function(idx,id){entries.push(data[id]);});return entries;}return data[idOrIds];}function getDataByUuids(uuids){if(qq.isArray(uuids)){var entries=[];qq.each(uuids,function(idx,uuid){entries.push(data[byUuid[uuid]]);});return entries;}return data[byUuid[uuids]];}function getDataByStatus(status){var statusResults=[],statuses=[].concat(status);qq.each(statuses,function(index,statusEnum){var statusResultIndexes=byStatus[statusEnum];if(statusResultIndexes!==undefined){qq.each(statusResultIndexes,function(i,dataIndex){statusResults.push(data[dataIndex]);});}});return statusResults;}qq.extend(this,{addFile:function addFile(spec){var status=spec.status||qq.status.SUBMITTING,id=data.push({name:spec.name,originalName:spec.name,uuid:spec.uuid,size:spec.size==null?-1:spec.size,status:status,file:spec.file})-1;if(spec.batchId){data[id].batchId=spec.batchId;if(byBatchId[spec.batchId]===undefined){byBatchId[spec.batchId]=[];}byBatchId[spec.batchId].push(id);}if(spec.proxyGroupId){data[id].proxyGroupId=spec.proxyGroupId;if(byProxyGroupId[spec.proxyGroupId]===undefined){byProxyGroupId[spec.proxyGroupId]=[];}byProxyGroupId[spec.proxyGroupId].push(id);}data[id].id=id;byUuid[spec.uuid]=id;if(byStatus[status]===undefined){byStatus[status]=[];}byStatus[status].push(id);spec.onBeforeStatusChange&&spec.onBeforeStatusChange(id);uploaderProxy.onStatusChange(id,null,status);return id;},retrieve:function retrieve(optionalFilter){if(qq.isObject(optionalFilter)&&data.length){if(optionalFilter.id!==undefined){return getDataByIds(optionalFilter.id);}else if(optionalFilter.uuid!==undefined){return getDataByUuids(optionalFilter.uuid);}else if(optionalFilter.status){return getDataByStatus(optionalFilter.status);}}else{return qq.extend([],data,true);}},removeFileRef:function removeFileRef(id){var record=getDataByIds(id);if(record){delete record.file;}},reset:function reset(){data=[];byUuid={};byStatus={};byBatchId={};},setStatus:function setStatus(id,newStatus){var oldStatus=data[id].status,byStatusOldStatusIndex=qq.indexOf(byStatus[oldStatus],id);byStatus[oldStatus].splice(byStatusOldStatusIndex,1);data[id].status=newStatus;if(byStatus[newStatus]===undefined){byStatus[newStatus]=[];}byStatus[newStatus].push(id);uploaderProxy.onStatusChange(id,oldStatus,newStatus);},uuidChanged:function uuidChanged(id,newUuid){var oldUuid=data[id].uuid;data[id].uuid=newUuid;byUuid[newUuid]=id;delete byUuid[oldUuid];},updateName:function updateName(id,newName){data[id].name=newName;},updateSize:function updateSize(id,newSize){data[id].size=newSize;},setParentId:function setParentId(targetId,parentId){data[targetId].parentId=parentId;},getIdsInProxyGroup:function getIdsInProxyGroup(id){var proxyGroupId=data[id].proxyGroupId;if(proxyGroupId){return byProxyGroupId[proxyGroupId];}return[];},getIdsInBatch:function getIdsInBatch(id){var batchId=data[id].batchId;return byBatchId[batchId];}});};qq.status={SUBMITTING:\"submitting\",SUBMITTED:\"submitted\",REJECTED:\"rejected\",QUEUED:\"queued\",CANCELED:\"canceled\",PAUSED:\"paused\",UPLOADING:\"uploading\",UPLOAD_FINALIZING:\"upload finalizing\",UPLOAD_RETRYING:\"retrying upload\",UPLOAD_SUCCESSFUL:\"upload successful\",UPLOAD_FAILED:\"upload failed\",DELETE_FAILED:\"delete failed\",DELETING:\"deleting\",DELETED:\"deleted\"};(function(){\"use strict\";qq.basePublicApi={addBlobs:function addBlobs(blobDataOrArray,params,endpoint){this.addFiles(blobDataOrArray,params,endpoint);},addInitialFiles:function addInitialFiles(cannedFileList){var self=this;qq.each(cannedFileList,function(index,cannedFile){self._addCannedFile(cannedFile);});},addFiles:function addFiles(data,params,endpoint){this._maybeHandleIos8SafariWorkaround();var batchId=this._storedIds.length===0?qq.getUniqueId():this._currentBatchId,processBlob=qq.bind(function(blob){this._handleNewFile({blob:blob,name:this._options.blobs.defaultName},batchId,verifiedFiles);},this),processBlobData=qq.bind(function(blobData){this._handleNewFile(blobData,batchId,verifiedFiles);},this),processCanvas=qq.bind(function(canvas){var blob=qq.canvasToBlob(canvas);this._handleNewFile({blob:blob,name:this._options.blobs.defaultName+\".png\"},batchId,verifiedFiles);},this),processCanvasData=qq.bind(function(canvasData){var normalizedQuality=canvasData.quality&&canvasData.quality/100,blob=qq.canvasToBlob(canvasData.canvas,canvasData.type,normalizedQuality);this._handleNewFile({blob:blob,name:canvasData.name},batchId,verifiedFiles);},this),processFileOrInput=qq.bind(function(fileOrInput){if(qq.isInput(fileOrInput)&&qq.supportedFeatures.ajaxUploading){var files=Array.prototype.slice.call(fileOrInput.files),self=this;qq.each(files,function(idx,file){self._handleNewFile(file,batchId,verifiedFiles);});}else{this._handleNewFile(fileOrInput,batchId,verifiedFiles);}},this),normalizeData=function normalizeData(){if(qq.isFileList(data)){data=Array.prototype.slice.call(data);}data=[].concat(data);},self=this,verifiedFiles=[];this._currentBatchId=batchId;if(data){normalizeData();qq.each(data,function(idx,fileContainer){if(qq.isFileOrInput(fileContainer)){processFileOrInput(fileContainer);}else if(qq.isBlob(fileContainer)){processBlob(fileContainer);}else if(qq.isObject(fileContainer)){if(fileContainer.blob&&fileContainer.name){processBlobData(fileContainer);}else if(fileContainer.canvas&&fileContainer.name){processCanvasData(fileContainer);}}else if(fileContainer.tagName&&fileContainer.tagName.toLowerCase()===\"canvas\"){processCanvas(fileContainer);}else{self.log(fileContainer+\" is not a valid file container!  Ignoring!\",\"warn\");}});this.log(\"Received \"+verifiedFiles.length+\" files.\");this._prepareItemsForUpload(verifiedFiles,params,endpoint);}},cancel:function cancel(id){var uploadData=this._uploadData.retrieve({id:id});if(uploadData&&uploadData.status===qq.status.UPLOAD_FINALIZING){this.log(qq.format(\"Ignoring cancel for file ID {} ({}).  Finalizing upload.\",id,this.getName(id)),\"error\");}else{this._handler.cancel(id);}},cancelAll:function cancelAll(){var storedIdsCopy=[],self=this;qq.extend(storedIdsCopy,this._storedIds);qq.each(storedIdsCopy,function(idx,storedFileId){self.cancel(storedFileId);});this._handler.cancelAll();},clearStoredFiles:function clearStoredFiles(){this._storedIds=[];},continueUpload:function continueUpload(id){var uploadData=this._uploadData.retrieve({id:id});if(!qq.supportedFeatures.pause||!this._options.chunking.enabled){return false;}if(uploadData.status===qq.status.PAUSED){this.log(qq.format(\"Paused file ID {} ({}) will be continued.  Not paused.\",id,this.getName(id)));this._uploadFile(id);return true;}else{this.log(qq.format(\"Ignoring continue for file ID {} ({}).  Not paused.\",id,this.getName(id)),\"error\");}return false;},deleteFile:function deleteFile(id){return this._onSubmitDelete(id);},doesExist:function doesExist(fileOrBlobId){return this._handler.isValid(fileOrBlobId);},drawThumbnail:function drawThumbnail(fileId,imgOrCanvas,maxSize,fromServer,customResizeFunction){var promiseToReturn=new qq.Promise(),fileOrUrl,options;if(this._imageGenerator){fileOrUrl=this._thumbnailUrls[fileId];options={customResizeFunction:customResizeFunction,maxSize:maxSize>0?maxSize:null,scale:maxSize>0};if(!fromServer&&qq.supportedFeatures.imagePreviews){fileOrUrl=this.getFile(fileId);}if(fileOrUrl==null){promiseToReturn.failure({container:imgOrCanvas,error:\"File or URL not found.\"});}else{this._imageGenerator.generate(fileOrUrl,imgOrCanvas,options).then(function success(modifiedContainer){promiseToReturn.success(modifiedContainer);},function failure(container,reason){promiseToReturn.failure({container:container,error:reason||\"Problem generating thumbnail\"});});}}else{promiseToReturn.failure({container:imgOrCanvas,error:\"Missing image generator module\"});}return promiseToReturn;},getButton:function getButton(fileId){return this._getButton(this._buttonIdsForFileIds[fileId]);},getEndpoint:function getEndpoint(fileId){return this._endpointStore.get(fileId);},getFile:function getFile(fileOrBlobId){var file=this._handler.getFile(fileOrBlobId);var uploadDataRecord;if(!file){uploadDataRecord=this._uploadData.retrieve({id:fileOrBlobId});if(uploadDataRecord){file=uploadDataRecord.file;}}return file||null;},getInProgress:function getInProgress(){return this._uploadData.retrieve({status:[qq.status.UPLOADING,qq.status.UPLOAD_RETRYING,qq.status.QUEUED]}).length;},getName:function getName(id){return this._uploadData.retrieve({id:id}).name;},getParentId:function getParentId(id){var uploadDataEntry=this.getUploads({id:id}),parentId=null;if(uploadDataEntry){if(uploadDataEntry.parentId!==undefined){parentId=uploadDataEntry.parentId;}}return parentId;},getResumableFilesData:function getResumableFilesData(){return this._handler.getResumableFilesData();},getSize:function getSize(id){return this._uploadData.retrieve({id:id}).size;},getNetUploads:function getNetUploads(){return this._netUploaded;},getRemainingAllowedItems:function getRemainingAllowedItems(){var allowedItems=this._currentItemLimit;if(allowedItems>0){return allowedItems-this._netUploadedOrQueued;}return null;},getUploads:function getUploads(optionalFilter){return this._uploadData.retrieve(optionalFilter);},getUuid:function getUuid(id){return this._uploadData.retrieve({id:id}).uuid;},isResumable:function isResumable(id){return this._handler.hasResumeRecord(id);},log:function log(str,level){if(this._options.debug&&(!level||level===\"info\")){qq.log(\"[Fine Uploader \"+qq.version+\"] \"+str);}else if(level&&level!==\"info\"){qq.log(\"[Fine Uploader \"+qq.version+\"] \"+str,level);}},pauseUpload:function pauseUpload(id){var uploadData=this._uploadData.retrieve({id:id});if(!qq.supportedFeatures.pause||!this._options.chunking.enabled){return false;}if(qq.indexOf([qq.status.UPLOADING,qq.status.UPLOAD_RETRYING],uploadData.status)>=0){if(this._handler.pause(id)){this._uploadData.setStatus(id,qq.status.PAUSED);return true;}else{this.log(qq.format(\"Unable to pause file ID {} ({}).\",id,this.getName(id)),\"error\");}}else{this.log(qq.format(\"Ignoring pause for file ID {} ({}).  Not in progress.\",id,this.getName(id)),\"error\");}return false;},removeFileRef:function removeFileRef(id){this._handler.expunge(id);this._uploadData.removeFileRef(id);},reset:function reset(){this.log(\"Resetting uploader...\");this._handler.reset();this._storedIds=[];this._autoRetries=[];this._retryTimeouts=[];this._preventRetries=[];this._thumbnailUrls=[];qq.each(this._buttons,function(idx,button){button.reset();});this._paramsStore.reset();this._endpointStore.reset();this._netUploadedOrQueued=0;this._netUploaded=0;this._uploadData.reset();this._buttonIdsForFileIds=[];this._pasteHandler&&this._pasteHandler.reset();this._options.session.refreshOnReset&&this._refreshSessionData();this._succeededSinceLastAllComplete=[];this._failedSinceLastAllComplete=[];this._totalProgress&&this._totalProgress.reset();this._customResumeDataStore.reset();},retry:function retry(id){return this._manualRetry(id);},scaleImage:function scaleImage(id,specs){var self=this;return qq.Scaler.prototype.scaleImage(id,specs,{log:qq.bind(self.log,self),getFile:qq.bind(self.getFile,self),uploadData:self._uploadData});},setCustomHeaders:function setCustomHeaders(headers,id){this._customHeadersStore.set(headers,id);},setCustomResumeData:function setCustomResumeData(id,data){this._customResumeDataStore.set(data,id);},setDeleteFileCustomHeaders:function setDeleteFileCustomHeaders(headers,id){this._deleteFileCustomHeadersStore.set(headers,id);},setDeleteFileEndpoint:function setDeleteFileEndpoint(endpoint,id){this._deleteFileEndpointStore.set(endpoint,id);},setDeleteFileParams:function setDeleteFileParams(params,id){this._deleteFileParamsStore.set(params,id);},setEndpoint:function setEndpoint(endpoint,id){this._endpointStore.set(endpoint,id);},setForm:function setForm(elementOrId){this._updateFormSupportAndParams(elementOrId);},setItemLimit:function setItemLimit(newItemLimit){this._currentItemLimit=newItemLimit;},setName:function setName(id,newName){this._uploadData.updateName(id,newName);},setParams:function setParams(params,id){this._paramsStore.set(params,id);},setUuid:function setUuid(id,newUuid){return this._uploadData.uuidChanged(id,newUuid);},setStatus:function setStatus(id,newStatus){var fileRecord=this.getUploads({id:id});if(!fileRecord){throw new qq.Error(id+\" is not a valid file ID.\");}switch(newStatus){case qq.status.DELETED:this._onDeleteComplete(id,null,false);break;case qq.status.DELETE_FAILED:this._onDeleteComplete(id,null,true);break;default:var errorMessage=\"Method setStatus called on '\"+name+\"' not implemented yet for \"+newStatus;this.log(errorMessage);throw new qq.Error(errorMessage);}},uploadStoredFiles:function uploadStoredFiles(){if(this._storedIds.length===0){this._itemError(\"noFilesError\");}else{this._uploadStoredFiles();}}};qq.basePrivateApi={_addCannedFile:function _addCannedFile(sessionData){var self=this;return this._uploadData.addFile({uuid:sessionData.uuid,name:sessionData.name,size:sessionData.size,status:qq.status.UPLOAD_SUCCESSFUL,onBeforeStatusChange:function onBeforeStatusChange(id){sessionData.deleteFileEndpoint&&self.setDeleteFileEndpoint(sessionData.deleteFileEndpoint,id);sessionData.deleteFileParams&&self.setDeleteFileParams(sessionData.deleteFileParams,id);if(sessionData.thumbnailUrl){self._thumbnailUrls[id]=sessionData.thumbnailUrl;}self._netUploaded++;self._netUploadedOrQueued++;}});},_annotateWithButtonId:function _annotateWithButtonId(file,associatedInput){if(qq.isFile(file)){file.qqButtonId=this._getButtonId(associatedInput);}},_batchError:function _batchError(message){this._options.callbacks.onError(null,null,message,undefined);},_createDeleteHandler:function _createDeleteHandler(){var self=this;return new qq.DeleteFileAjaxRequester({method:this._options.deleteFile.method.toUpperCase(),maxConnections:this._options.maxConnections,uuidParamName:this._options.request.uuidName,customHeaders:this._deleteFileCustomHeadersStore,paramsStore:this._deleteFileParamsStore,endpointStore:this._deleteFileEndpointStore,cors:this._options.cors,log:qq.bind(self.log,self),onDelete:function onDelete(id){self._onDelete(id);self._options.callbacks.onDelete(id);},onDeleteComplete:function onDeleteComplete(id,xhrOrXdr,isError){self._onDeleteComplete(id,xhrOrXdr,isError);self._options.callbacks.onDeleteComplete(id,xhrOrXdr,isError);}});},_createPasteHandler:function _createPasteHandler(){var self=this;return new qq.PasteSupport({targetElement:this._options.paste.targetElement,callbacks:{log:qq.bind(self.log,self),pasteReceived:function pasteReceived(blob){self._handleCheckedCallback({name:\"onPasteReceived\",callback:qq.bind(self._options.callbacks.onPasteReceived,self,blob),onSuccess:qq.bind(self._handlePasteSuccess,self,blob),identifier:\"pasted image\"});}}});},_createStore:function _createStore(initialValue,_readOnlyValues_){var store={},catchall=initialValue,perIdReadOnlyValues={},readOnlyValues=_readOnlyValues_,copy=function copy(orig){if(qq.isObject(orig)){return qq.extend({},orig);}return orig;},getReadOnlyValues=function getReadOnlyValues(){if(qq.isFunction(readOnlyValues)){return readOnlyValues();}return readOnlyValues;},includeReadOnlyValues=function includeReadOnlyValues(id,existing){if(readOnlyValues&&qq.isObject(existing)){qq.extend(existing,getReadOnlyValues());}if(perIdReadOnlyValues[id]){qq.extend(existing,perIdReadOnlyValues[id]);}};return{set:function set(val,id){if(id==null){store={};catchall=copy(val);}else{store[id]=copy(val);}},get:function get(id){var values;if(id!=null&&store[id]){values=store[id];}else{values=copy(catchall);}includeReadOnlyValues(id,values);return copy(values);},addReadOnly:function addReadOnly(id,values){if(qq.isObject(store)){if(id===null){if(qq.isFunction(values)){readOnlyValues=values;}else{readOnlyValues=readOnlyValues||{};qq.extend(readOnlyValues,values);}}else{perIdReadOnlyValues[id]=perIdReadOnlyValues[id]||{};qq.extend(perIdReadOnlyValues[id],values);}}},remove:function remove(fileId){return delete store[fileId];},reset:function reset(){store={};perIdReadOnlyValues={};catchall=initialValue;}};},_createUploadDataTracker:function _createUploadDataTracker(){var self=this;return new qq.UploadData({getName:function getName(id){return self.getName(id);},getUuid:function getUuid(id){return self.getUuid(id);},getSize:function getSize(id){return self.getSize(id);},onStatusChange:function onStatusChange(id,oldStatus,newStatus){self._onUploadStatusChange(id,oldStatus,newStatus);self._options.callbacks.onStatusChange(id,oldStatus,newStatus);self._maybeAllComplete(id,newStatus);if(self._totalProgress){setTimeout(function(){self._totalProgress.onStatusChange(id,oldStatus,newStatus);},0);}}});},_createUploadButton:function _createUploadButton(spec){var self=this,acceptFiles=spec.accept||this._options.validation.acceptFiles,allowedExtensions=spec.allowedExtensions||this._options.validation.allowedExtensions,button;function allowMultiple(){if(qq.supportedFeatures.ajaxUploading){if(self._options.workarounds.iosEmptyVideos&&qq.ios()&&!qq.ios6()&&self._isAllowedExtension(allowedExtensions,\".mov\")){return false;}if(spec.multiple===undefined){return self._options.multiple;}return spec.multiple;}return false;}button=new qq.UploadButton({acceptFiles:acceptFiles,element:spec.element,focusClass:this._options.classes.buttonFocus,folders:spec.folders,hoverClass:this._options.classes.buttonHover,ios8BrowserCrashWorkaround:this._options.workarounds.ios8BrowserCrash,multiple:allowMultiple(),name:this._options.request.inputName,onChange:function onChange(input){self._onInputChange(input);},title:spec.title==null?this._options.text.fileInputTitle:spec.title});this._disposeSupport.addDisposer(function(){button.dispose();});self._buttons.push(button);return button;},_createUploadHandler:function _createUploadHandler(additionalOptions,namespace){var self=this,lastOnProgress={},options={debug:this._options.debug,maxConnections:this._options.maxConnections,cors:this._options.cors,paramsStore:this._paramsStore,endpointStore:this._endpointStore,chunking:this._options.chunking,resume:this._options.resume,blobs:this._options.blobs,log:qq.bind(self.log,self),preventRetryParam:this._options.retry.preventRetryResponseProperty,onProgress:function onProgress(id,name,loaded,total){if(loaded<0||total<0){return;}if(lastOnProgress[id]){if(lastOnProgress[id].loaded!==loaded||lastOnProgress[id].total!==total){self._onProgress(id,name,loaded,total);self._options.callbacks.onProgress(id,name,loaded,total);}}else{self._onProgress(id,name,loaded,total);self._options.callbacks.onProgress(id,name,loaded,total);}lastOnProgress[id]={loaded:loaded,total:total};},onComplete:function onComplete(id,name,result,xhr){delete lastOnProgress[id];var status=self.getUploads({id:id}).status,retVal;if(status===qq.status.UPLOAD_SUCCESSFUL||status===qq.status.UPLOAD_FAILED){return;}retVal=self._onComplete(id,name,result,xhr);if(retVal instanceof qq.Promise){retVal.done(function(){self._options.callbacks.onComplete(id,name,result,xhr);});}else{self._options.callbacks.onComplete(id,name,result,xhr);}},onCancel:function onCancel(id,name,cancelFinalizationEffort){var promise=new qq.Promise();self._handleCheckedCallback({name:\"onCancel\",callback:qq.bind(self._options.callbacks.onCancel,self,id,name),onFailure:promise.failure,onSuccess:function onSuccess(){cancelFinalizationEffort.then(function(){self._onCancel(id,name);});promise.success();},identifier:id});return promise;},onUploadPrep:qq.bind(this._onUploadPrep,this),onUpload:function onUpload(id,name){self._onUpload(id,name);var onUploadResult=self._options.callbacks.onUpload(id,name);if(qq.isGenericPromise(onUploadResult)){self.log(qq.format(\"onUpload for {} returned a Promise - waiting for resolution.\",id));return onUploadResult;}return new qq.Promise().success();},onUploadChunk:function onUploadChunk(id,name,chunkData){self._onUploadChunk(id,chunkData);var onUploadChunkResult=self._options.callbacks.onUploadChunk(id,name,chunkData);if(qq.isGenericPromise(onUploadChunkResult)){self.log(qq.format(\"onUploadChunk for {}.{} returned a Promise - waiting for resolution.\",id,chunkData.partIndex));return onUploadChunkResult;}return new qq.Promise().success();},onUploadChunkSuccess:function onUploadChunkSuccess(id,chunkData,result,xhr){self._onUploadChunkSuccess(id,chunkData);self._options.callbacks.onUploadChunkSuccess.apply(self,arguments);},onResume:function onResume(id,name,chunkData,customResumeData){return self._options.callbacks.onResume(id,name,chunkData,customResumeData);},onAutoRetry:function onAutoRetry(id,name,responseJSON,xhr){return self._onAutoRetry.apply(self,arguments);},onUuidChanged:function onUuidChanged(id,newUuid){self.log(\"Server requested UUID change from '\"+self.getUuid(id)+\"' to '\"+newUuid+\"'\");self.setUuid(id,newUuid);},getName:qq.bind(self.getName,self),getUuid:qq.bind(self.getUuid,self),getSize:qq.bind(self.getSize,self),setSize:qq.bind(self._setSize,self),getDataByUuid:function getDataByUuid(uuid){return self.getUploads({uuid:uuid});},isQueued:function isQueued(id){var status=self.getUploads({id:id}).status;return status===qq.status.QUEUED||status===qq.status.SUBMITTED||status===qq.status.UPLOAD_RETRYING||status===qq.status.PAUSED;},getIdsInProxyGroup:self._uploadData.getIdsInProxyGroup,getIdsInBatch:self._uploadData.getIdsInBatch,isInProgress:function isInProgress(id){return self.getUploads({id:id}).status===qq.status.UPLOADING;},getCustomResumeData:qq.bind(self._getCustomResumeData,self),setStatus:function setStatus(id,status){self._uploadData.setStatus(id,status);}};qq.each(this._options.request,function(prop,val){options[prop]=val;});options.customHeaders=this._customHeadersStore;if(additionalOptions){qq.each(additionalOptions,function(key,val){options[key]=val;});}return new qq.UploadHandlerController(options,namespace);},_fileOrBlobRejected:function _fileOrBlobRejected(id){this._netUploadedOrQueued--;this._uploadData.setStatus(id,qq.status.REJECTED);},_formatSize:function _formatSize(bytes){if(bytes===0){return bytes+this._options.text.sizeSymbols[0];}var i=-1;do{bytes=bytes/1e3;i++;}while(bytes>999);return Math.max(bytes,.1).toFixed(1)+this._options.text.sizeSymbols[i];},_generateExtraButtonSpecs:function _generateExtraButtonSpecs(){var self=this;this._extraButtonSpecs={};qq.each(this._options.extraButtons,function(idx,extraButtonOptionEntry){var multiple=extraButtonOptionEntry.multiple,validation=qq.extend({},self._options.validation,true),extraButtonSpec=qq.extend({},extraButtonOptionEntry);if(multiple===undefined){multiple=self._options.multiple;}if(extraButtonSpec.validation){qq.extend(validation,extraButtonOptionEntry.validation,true);}qq.extend(extraButtonSpec,{multiple:multiple,validation:validation},true);self._initExtraButton(extraButtonSpec);});},_getButton:function _getButton(buttonId){var extraButtonsSpec=this._extraButtonSpecs[buttonId];if(extraButtonsSpec){return extraButtonsSpec.element;}else if(buttonId===this._defaultButtonId){return this._options.button;}},_getButtonId:function _getButtonId(buttonOrFileInputOrFile){var inputs,fileInput,fileBlobOrInput=buttonOrFileInputOrFile;if(fileBlobOrInput instanceof qq.BlobProxy){fileBlobOrInput=fileBlobOrInput.referenceBlob;}if(fileBlobOrInput&&!qq.isBlob(fileBlobOrInput)){if(qq.isFile(fileBlobOrInput)){return fileBlobOrInput.qqButtonId;}else if(fileBlobOrInput.tagName.toLowerCase()===\"input\"&&fileBlobOrInput.type.toLowerCase()===\"file\"){return fileBlobOrInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);}inputs=fileBlobOrInput.getElementsByTagName(\"input\");qq.each(inputs,function(idx,input){if(input.getAttribute(\"type\")===\"file\"){fileInput=input;return false;}});if(fileInput){return fileInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);}}},_getCustomResumeData:function _getCustomResumeData(fileId){return this._customResumeDataStore.get(fileId);},_getNotFinished:function _getNotFinished(){return this._uploadData.retrieve({status:[qq.status.UPLOADING,qq.status.UPLOAD_RETRYING,qq.status.QUEUED,qq.status.SUBMITTING,qq.status.SUBMITTED,qq.status.PAUSED]}).length;},_getValidationBase:function _getValidationBase(buttonId){var extraButtonSpec=this._extraButtonSpecs[buttonId];return extraButtonSpec?extraButtonSpec.validation:this._options.validation;},_getValidationDescriptor:function _getValidationDescriptor(fileWrapper){if(fileWrapper.file instanceof qq.BlobProxy){return{name:qq.getFilename(fileWrapper.file.referenceBlob),size:fileWrapper.file.referenceBlob.size};}return{name:this.getUploads({id:fileWrapper.id}).name,size:this.getUploads({id:fileWrapper.id}).size};},_getValidationDescriptors:function _getValidationDescriptors(fileWrappers){var self=this,fileDescriptors=[];qq.each(fileWrappers,function(idx,fileWrapper){fileDescriptors.push(self._getValidationDescriptor(fileWrapper));});return fileDescriptors;},_handleCameraAccess:function _handleCameraAccess(){if(this._options.camera.ios&&qq.ios()){var acceptIosCamera=\"image/*;capture=camera\",button=this._options.camera.button,buttonId=button?this._getButtonId(button):this._defaultButtonId,optionRoot=this._options;if(buttonId&&buttonId!==this._defaultButtonId){optionRoot=this._extraButtonSpecs[buttonId];}optionRoot.multiple=false;if(optionRoot.validation.acceptFiles===null){optionRoot.validation.acceptFiles=acceptIosCamera;}else{optionRoot.validation.acceptFiles+=\",\"+acceptIosCamera;}qq.each(this._buttons,function(idx,button){if(button.getButtonId()===buttonId){button.setMultiple(optionRoot.multiple);button.setAcceptFiles(optionRoot.acceptFiles);return false;}});}},_handleCheckedCallback:function _handleCheckedCallback(details){var self=this,callbackRetVal=details.callback();if(qq.isGenericPromise(callbackRetVal)){this.log(details.name+\" - waiting for \"+details.name+\" promise to be fulfilled for \"+details.identifier);return callbackRetVal.then(function(successParam){self.log(details.name+\" promise success for \"+details.identifier);details.onSuccess(successParam);},function(){if(details.onFailure){self.log(details.name+\" promise failure for \"+details.identifier);details.onFailure();}else{self.log(details.name+\" promise failure for \"+details.identifier);}});}if(callbackRetVal!==false){details.onSuccess(callbackRetVal);}else{if(details.onFailure){this.log(details.name+\" - return value was 'false' for \"+details.identifier+\".  Invoking failure callback.\");details.onFailure();}else{this.log(details.name+\" - return value was 'false' for \"+details.identifier+\".  Will not proceed.\");}}return callbackRetVal;},_handleNewFile:function _handleNewFile(file,batchId,newFileWrapperList){var self=this,uuid=qq.getUniqueId(),size=-1,name=qq.getFilename(file),actualFile=file.blob||file,handler=this._customNewFileHandler?this._customNewFileHandler:qq.bind(self._handleNewFileGeneric,self);if(!qq.isInput(actualFile)&&actualFile.size>=0){size=actualFile.size;}handler(actualFile,name,uuid,size,newFileWrapperList,batchId,this._options.request.uuidName,{uploadData:self._uploadData,paramsStore:self._paramsStore,addFileToHandler:function addFileToHandler(id,file){self._handler.add(id,file);self._netUploadedOrQueued++;self._trackButton(id);}});},_handleNewFileGeneric:function _handleNewFileGeneric(file,name,uuid,size,fileList,batchId){var id=this._uploadData.addFile({uuid:uuid,name:name,size:size,batchId:batchId,file:file});this._handler.add(id,file);this._trackButton(id);this._netUploadedOrQueued++;fileList.push({id:id,file:file});},_handlePasteSuccess:function _handlePasteSuccess(blob,extSuppliedName){var extension=blob.type.split(\"/\")[1],name=extSuppliedName;if(name==null){name=this._options.paste.defaultName;}name+=\".\"+extension;this.addFiles({name:name,blob:blob});},_handleDeleteSuccess:function _handleDeleteSuccess(id){if(this.getUploads({id:id}).status!==qq.status.DELETED){var name=this.getName(id);this._netUploadedOrQueued--;this._netUploaded--;this._handler.expunge(id);this._uploadData.setStatus(id,qq.status.DELETED);this.log(\"Delete request for '\"+name+\"' has succeeded.\");}},_handleDeleteFailed:function _handleDeleteFailed(id,xhrOrXdr){var name=this.getName(id);this._uploadData.setStatus(id,qq.status.DELETE_FAILED);this.log(\"Delete request for '\"+name+\"' has failed.\",\"error\");if(!xhrOrXdr||xhrOrXdr.withCredentials===undefined){this._options.callbacks.onError(id,name,\"Delete request failed\",xhrOrXdr);}else{this._options.callbacks.onError(id,name,\"Delete request failed with response code \"+xhrOrXdr.status,xhrOrXdr);}},_initExtraButton:function _initExtraButton(spec){var button=this._createUploadButton({accept:spec.validation.acceptFiles,allowedExtensions:spec.validation.allowedExtensions,element:spec.element,folders:spec.folders,multiple:spec.multiple,title:spec.fileInputTitle});this._extraButtonSpecs[button.getButtonId()]=spec;},_initFormSupportAndParams:function _initFormSupportAndParams(){this._formSupport=qq.FormSupport&&new qq.FormSupport(this._options.form,qq.bind(this.uploadStoredFiles,this),qq.bind(this.log,this));if(this._formSupport&&this._formSupport.attachedToForm){this._paramsStore=this._createStore(this._options.request.params,this._formSupport.getFormInputsAsObject);this._options.autoUpload=this._formSupport.newAutoUpload;if(this._formSupport.newEndpoint){this._options.request.endpoint=this._formSupport.newEndpoint;}}else{this._paramsStore=this._createStore(this._options.request.params);}},_isDeletePossible:function _isDeletePossible(){if(!qq.DeleteFileAjaxRequester||!this._options.deleteFile.enabled){return false;}if(this._options.cors.expected){if(qq.supportedFeatures.deleteFileCorsXhr){return true;}if(qq.supportedFeatures.deleteFileCorsXdr&&this._options.cors.allowXdr){return true;}return false;}return true;},_isAllowedExtension:function _isAllowedExtension(allowed,fileName){var valid=false;if(!allowed.length){return true;}qq.each(allowed,function(idx,allowedExt){if(qq.isString(allowedExt)){var extRegex=new RegExp(\"\\\\.\"+allowedExt+\"$\",\"i\");if(fileName.match(extRegex)!=null){valid=true;return false;}}});return valid;},_itemError:function _itemError(code,maybeNameOrNames,item){var message=this._options.messages[code],allowedExtensions=[],names=[].concat(maybeNameOrNames),name=names[0],buttonId=this._getButtonId(item),validationBase=this._getValidationBase(buttonId),extensionsForMessage,placeholderMatch;function r(name,replacement){message=message.replace(name,replacement);}qq.each(validationBase.allowedExtensions,function(idx,allowedExtension){if(qq.isString(allowedExtension)){allowedExtensions.push(allowedExtension);}});extensionsForMessage=allowedExtensions.join(\", \").toLowerCase();r(\"{file}\",this._options.formatFileName(name));r(\"{extensions}\",extensionsForMessage);r(\"{sizeLimit}\",this._formatSize(validationBase.sizeLimit));r(\"{minSizeLimit}\",this._formatSize(validationBase.minSizeLimit));placeholderMatch=message.match(/(\\{\\w+\\})/g);if(placeholderMatch!==null){qq.each(placeholderMatch,function(idx,placeholder){r(placeholder,names[idx]);});}this._options.callbacks.onError(null,name,message,undefined);return message;},_manualRetry:function _manualRetry(id,callback){if(this._onBeforeManualRetry(id)){this._netUploadedOrQueued++;this._uploadData.setStatus(id,qq.status.UPLOAD_RETRYING);if(callback){callback(id);}else{this._handler.retry(id);}return true;}},_maybeAllComplete:function _maybeAllComplete(id,status){var self=this,notFinished=this._getNotFinished();if(status===qq.status.UPLOAD_SUCCESSFUL){this._succeededSinceLastAllComplete.push(id);}else if(status===qq.status.UPLOAD_FAILED){this._failedSinceLastAllComplete.push(id);}if(notFinished===0&&(this._succeededSinceLastAllComplete.length||this._failedSinceLastAllComplete.length)){setTimeout(function(){self._onAllComplete(self._succeededSinceLastAllComplete,self._failedSinceLastAllComplete);},0);}},_maybeHandleIos8SafariWorkaround:function _maybeHandleIos8SafariWorkaround(){var self=this;if(this._options.workarounds.ios8SafariUploads&&qq.ios800()&&qq.iosSafari()){setTimeout(function(){window.alert(self._options.messages.unsupportedBrowserIos8Safari);},0);throw new qq.Error(this._options.messages.unsupportedBrowserIos8Safari);}},_maybeParseAndSendUploadError:function _maybeParseAndSendUploadError(id,name,response,xhr){if(!response.success){if(xhr&&xhr.status!==200&&!response.error){this._options.callbacks.onError(id,name,\"XHR returned response code \"+xhr.status,xhr);}else{var errorReason=response.error?response.error:this._options.text.defaultResponseError;this._options.callbacks.onError(id,name,errorReason,xhr);}}},_maybeProcessNextItemAfterOnValidateCallback:function _maybeProcessNextItemAfterOnValidateCallback(validItem,items,index,params,endpoint){var self=this;if(items.length>index){if(validItem||!this._options.validation.stopOnFirstInvalidFile){setTimeout(function(){var validationDescriptor=self._getValidationDescriptor(items[index]),buttonId=self._getButtonId(items[index].file),button=self._getButton(buttonId);self._handleCheckedCallback({name:\"onValidate\",callback:qq.bind(self._options.callbacks.onValidate,self,validationDescriptor,button),onSuccess:qq.bind(self._onValidateCallbackSuccess,self,items,index,params,endpoint),onFailure:qq.bind(self._onValidateCallbackFailure,self,items,index,params,endpoint),identifier:\"Item '\"+validationDescriptor.name+\"', size: \"+validationDescriptor.size});},0);}else if(!validItem){for(;index<items.length;index++){self._fileOrBlobRejected(items[index].id);}}}},_onAllComplete:function _onAllComplete(successful,failed){this._totalProgress&&this._totalProgress.onAllComplete(successful,failed,this._preventRetries);this._options.callbacks.onAllComplete(qq.extend([],successful),qq.extend([],failed));this._succeededSinceLastAllComplete=[];this._failedSinceLastAllComplete=[];},_onAutoRetry:function _onAutoRetry(id,name,responseJSON,xhr,callback){var self=this;self._preventRetries[id]=responseJSON[self._options.retry.preventRetryResponseProperty];if(self._shouldAutoRetry(id)){var retryWaitPeriod=self._options.retry.autoAttemptDelay*1e3;self._maybeParseAndSendUploadError.apply(self,arguments);self._options.callbacks.onAutoRetry(id,name,self._autoRetries[id]);self._onBeforeAutoRetry(id,name);self._uploadData.setStatus(id,qq.status.UPLOAD_RETRYING);self._retryTimeouts[id]=setTimeout(function(){self.log(\"Starting retry for \"+name+\"...\");if(callback){callback(id);}else{self._handler.retry(id);}},retryWaitPeriod);return true;}},_onBeforeAutoRetry:function _onBeforeAutoRetry(id,name){this.log(\"Waiting \"+this._options.retry.autoAttemptDelay+\" seconds before retrying \"+name+\"...\");},_onBeforeManualRetry:function _onBeforeManualRetry(id){var itemLimit=this._currentItemLimit,fileName;if(this._preventRetries[id]){this.log(\"Retries are forbidden for id \"+id,\"warn\");return false;}else if(this._handler.isValid(id)){fileName=this.getName(id);if(this._options.callbacks.onManualRetry(id,fileName)===false){return false;}if(itemLimit>0&&this._netUploadedOrQueued+1>itemLimit){this._itemError(\"retryFailTooManyItems\");return false;}this.log(\"Retrying upload for '\"+fileName+\"' (id: \"+id+\")...\");return true;}else{this.log(\"'\"+id+\"' is not a valid file ID\",\"error\");return false;}},_onCancel:function _onCancel(id,name){this._netUploadedOrQueued--;clearTimeout(this._retryTimeouts[id]);var storedItemIndex=qq.indexOf(this._storedIds,id);if(!this._options.autoUpload&&storedItemIndex>=0){this._storedIds.splice(storedItemIndex,1);}this._uploadData.setStatus(id,qq.status.CANCELED);},_onComplete:function _onComplete(id,name,result,xhr){if(!result.success){this._netUploadedOrQueued--;this._uploadData.setStatus(id,qq.status.UPLOAD_FAILED);if(result[this._options.retry.preventRetryResponseProperty]===true){this._preventRetries[id]=true;}}else{if(result.thumbnailUrl){this._thumbnailUrls[id]=result.thumbnailUrl;}this._netUploaded++;this._uploadData.setStatus(id,qq.status.UPLOAD_SUCCESSFUL);}this._maybeParseAndSendUploadError(id,name,result,xhr);return result.success?true:false;},_onDelete:function _onDelete(id){this._uploadData.setStatus(id,qq.status.DELETING);},_onDeleteComplete:function _onDeleteComplete(id,xhrOrXdr,isError){var name=this.getName(id);if(isError){this._handleDeleteFailed(id,xhrOrXdr);}else{this._handleDeleteSuccess(id);}},_onInputChange:function _onInputChange(input){var fileIndex;if(qq.supportedFeatures.ajaxUploading){for(fileIndex=0;fileIndex<input.files.length;fileIndex++){this._annotateWithButtonId(input.files[fileIndex],input);}this.addFiles(input.files);}else if(input.value.length>0){this.addFiles(input);}qq.each(this._buttons,function(idx,button){button.reset();});},_onProgress:function _onProgress(id,name,loaded,total){this._totalProgress&&this._totalProgress.onIndividualProgress(id,loaded,total);},_onSubmit:function _onSubmit(id,name){},_onSubmitCallbackSuccess:function _onSubmitCallbackSuccess(id,name){this._onSubmit.apply(this,arguments);this._uploadData.setStatus(id,qq.status.SUBMITTED);this._onSubmitted.apply(this,arguments);if(this._options.autoUpload){this._options.callbacks.onSubmitted.apply(this,arguments);this._uploadFile(id);}else{this._storeForLater(id);this._options.callbacks.onSubmitted.apply(this,arguments);}},_onSubmitDelete:function _onSubmitDelete(id,onSuccessCallback,additionalMandatedParams){var uuid=this.getUuid(id),adjustedOnSuccessCallback;if(onSuccessCallback){adjustedOnSuccessCallback=qq.bind(onSuccessCallback,this,id,uuid,additionalMandatedParams);}if(this._isDeletePossible()){this._handleCheckedCallback({name:\"onSubmitDelete\",callback:qq.bind(this._options.callbacks.onSubmitDelete,this,id),onSuccess:adjustedOnSuccessCallback||qq.bind(this._deleteHandler.sendDelete,this,id,uuid,additionalMandatedParams),identifier:id});return true;}else{this.log(\"Delete request ignored for ID \"+id+\", delete feature is disabled or request not possible \"+\"due to CORS on a user agent that does not support pre-flighting.\",\"warn\");return false;}},_onSubmitted:function _onSubmitted(id){},_onTotalProgress:function _onTotalProgress(loaded,total){this._options.callbacks.onTotalProgress(loaded,total);},_onUploadPrep:function _onUploadPrep(id){},_onUpload:function _onUpload(id,name){this._uploadData.setStatus(id,qq.status.UPLOADING);},_onUploadChunk:function _onUploadChunk(id,chunkData){},_onUploadChunkSuccess:function _onUploadChunkSuccess(id,chunkData){if(!this._preventRetries[id]&&this._options.retry.enableAuto){this._autoRetries[id]=0;}},_onUploadStatusChange:function _onUploadStatusChange(id,oldStatus,newStatus){if(newStatus===qq.status.PAUSED){clearTimeout(this._retryTimeouts[id]);}},_onValidateBatchCallbackFailure:function _onValidateBatchCallbackFailure(fileWrappers){var self=this;qq.each(fileWrappers,function(idx,fileWrapper){self._fileOrBlobRejected(fileWrapper.id);});},_onValidateBatchCallbackSuccess:function _onValidateBatchCallbackSuccess(validationDescriptors,items,params,endpoint,button){var errorMessage,itemLimit=this._currentItemLimit,proposedNetFilesUploadedOrQueued=this._netUploadedOrQueued;if(itemLimit===0||proposedNetFilesUploadedOrQueued<=itemLimit){if(items.length>0){this._handleCheckedCallback({name:\"onValidate\",callback:qq.bind(this._options.callbacks.onValidate,this,validationDescriptors[0],button),onSuccess:qq.bind(this._onValidateCallbackSuccess,this,items,0,params,endpoint),onFailure:qq.bind(this._onValidateCallbackFailure,this,items,0,params,endpoint),identifier:\"Item '\"+items[0].file.name+\"', size: \"+items[0].file.size});}else{this._itemError(\"noFilesError\");}}else{this._onValidateBatchCallbackFailure(items);errorMessage=this._options.messages.tooManyItemsError.replace(/\\{netItems\\}/g,proposedNetFilesUploadedOrQueued).replace(/\\{itemLimit\\}/g,itemLimit);this._batchError(errorMessage);}},_onValidateCallbackFailure:function _onValidateCallbackFailure(items,index,params,endpoint){var nextIndex=index+1;this._fileOrBlobRejected(items[index].id,items[index].file.name);this._maybeProcessNextItemAfterOnValidateCallback(false,items,nextIndex,params,endpoint);},_onValidateCallbackSuccess:function _onValidateCallbackSuccess(items,index,params,endpoint){var self=this,nextIndex=index+1,validationDescriptor=this._getValidationDescriptor(items[index]);this._validateFileOrBlobData(items[index],validationDescriptor).then(function(){self._upload(items[index].id,params,endpoint);self._maybeProcessNextItemAfterOnValidateCallback(true,items,nextIndex,params,endpoint);},function(){self._maybeProcessNextItemAfterOnValidateCallback(false,items,nextIndex,params,endpoint);});},_prepareItemsForUpload:function _prepareItemsForUpload(items,params,endpoint){if(items.length===0){this._itemError(\"noFilesError\");return;}var validationDescriptors=this._getValidationDescriptors(items),buttonId=this._getButtonId(items[0].file),button=this._getButton(buttonId);this._handleCheckedCallback({name:\"onValidateBatch\",callback:qq.bind(this._options.callbacks.onValidateBatch,this,validationDescriptors,button),onSuccess:qq.bind(this._onValidateBatchCallbackSuccess,this,validationDescriptors,items,params,endpoint,button),onFailure:qq.bind(this._onValidateBatchCallbackFailure,this,items),identifier:\"batch validation\"});},_preventLeaveInProgress:function _preventLeaveInProgress(){var self=this;this._disposeSupport.attach(window,\"beforeunload\",function(e){if(self.getInProgress()){e=e||window.event;e.returnValue=self._options.messages.onLeave;return self._options.messages.onLeave;}});},_refreshSessionData:function _refreshSessionData(){var self=this,options=this._options.session;if(qq.Session&&this._options.session.endpoint!=null){if(!this._session){qq.extend(options,{cors:this._options.cors});options.log=qq.bind(this.log,this);options.addFileRecord=qq.bind(this._addCannedFile,this);this._session=new qq.Session(options);}setTimeout(function(){self._session.refresh().then(function(response,xhrOrXdr){self._sessionRequestComplete();self._options.callbacks.onSessionRequestComplete(response,true,xhrOrXdr);},function(response,xhrOrXdr){self._options.callbacks.onSessionRequestComplete(response,false,xhrOrXdr);});},0);}},_sessionRequestComplete:function _sessionRequestComplete(){},_setSize:function _setSize(id,newSize){this._uploadData.updateSize(id,newSize);this._totalProgress&&this._totalProgress.onNewSize(id);},_shouldAutoRetry:function _shouldAutoRetry(id){var uploadData=this._uploadData.retrieve({id:id});if(!this._preventRetries[id]&&this._options.retry.enableAuto&&uploadData.status!==qq.status.PAUSED){if(this._autoRetries[id]===undefined){this._autoRetries[id]=0;}if(this._autoRetries[id]<this._options.retry.maxAutoAttempts){this._autoRetries[id]+=1;return true;}}return false;},_storeForLater:function _storeForLater(id){this._storedIds.push(id);},_trackButton:function _trackButton(id){var buttonId;if(qq.supportedFeatures.ajaxUploading){buttonId=this._handler.getFile(id).qqButtonId;}else{buttonId=this._getButtonId(this._handler.getInput(id));}if(buttonId){this._buttonIdsForFileIds[id]=buttonId;}},_updateFormSupportAndParams:function _updateFormSupportAndParams(formElementOrId){this._options.form.element=formElementOrId;this._formSupport=qq.FormSupport&&new qq.FormSupport(this._options.form,qq.bind(this.uploadStoredFiles,this),qq.bind(this.log,this));if(this._formSupport&&this._formSupport.attachedToForm){this._paramsStore.addReadOnly(null,this._formSupport.getFormInputsAsObject);this._options.autoUpload=this._formSupport.newAutoUpload;if(this._formSupport.newEndpoint){this.setEndpoint(this._formSupport.newEndpoint);}}},_upload:function _upload(id,params,endpoint){var name=this.getName(id);if(params){this.setParams(params,id);}if(endpoint){this.setEndpoint(endpoint,id);}this._handleCheckedCallback({name:\"onSubmit\",callback:qq.bind(this._options.callbacks.onSubmit,this,id,name),onSuccess:qq.bind(this._onSubmitCallbackSuccess,this,id,name),onFailure:qq.bind(this._fileOrBlobRejected,this,id,name),identifier:id});},_uploadFile:function _uploadFile(id){if(!this._handler.upload(id)){this._uploadData.setStatus(id,qq.status.QUEUED);}},_uploadStoredFiles:function _uploadStoredFiles(){var idToUpload,stillSubmitting,self=this;while(this._storedIds.length){idToUpload=this._storedIds.shift();this._uploadFile(idToUpload);}stillSubmitting=this.getUploads({status:qq.status.SUBMITTING}).length;if(stillSubmitting){qq.log(\"Still waiting for \"+stillSubmitting+\" files to clear submit queue. Will re-parse stored IDs array shortly.\");setTimeout(function(){self._uploadStoredFiles();},1e3);}},_validateFileOrBlobData:function _validateFileOrBlobData(fileWrapper,validationDescriptor){var self=this,file=function(){if(fileWrapper.file instanceof qq.BlobProxy){return fileWrapper.file.referenceBlob;}return fileWrapper.file;}(),name=validationDescriptor.name,size=validationDescriptor.size,buttonId=this._getButtonId(fileWrapper.file),validationBase=this._getValidationBase(buttonId),validityChecker=new qq.Promise();validityChecker.then(function(){},function(){self._fileOrBlobRejected(fileWrapper.id,name);});if(qq.isFileOrInput(file)&&!this._isAllowedExtension(validationBase.allowedExtensions,name)){this._itemError(\"typeError\",name,file);return validityChecker.failure();}if(!this._options.validation.allowEmpty&&size===0){this._itemError(\"emptyError\",name,file);return validityChecker.failure();}if(size>0&&validationBase.sizeLimit&&size>validationBase.sizeLimit){this._itemError(\"sizeError\",name,file);return validityChecker.failure();}if(size>0&&size<validationBase.minSizeLimit){this._itemError(\"minSizeError\",name,file);return validityChecker.failure();}if(qq.ImageValidation&&qq.supportedFeatures.imagePreviews&&qq.isFile(file)){new qq.ImageValidation(file,qq.bind(self.log,self)).validate(validationBase.image).then(validityChecker.success,function(errorCode){self._itemError(errorCode+\"ImageError\",name,file);validityChecker.failure();});}else{validityChecker.success();}return validityChecker;},_wrapCallbacks:function _wrapCallbacks(){var self,safeCallback,prop;self=this;safeCallback=function safeCallback(name,callback,args){var errorMsg;try{return callback.apply(self,args);}catch(exception){errorMsg=exception.message||exception.toString();self.log(\"Caught exception in '\"+name+\"' callback - \"+errorMsg,\"error\");}};for(prop in this._options.callbacks){(function(){var callbackName,callbackFunc;callbackName=prop;callbackFunc=self._options.callbacks[callbackName];self._options.callbacks[callbackName]=function(){return safeCallback(callbackName,callbackFunc,arguments);};})();}}};})();(function(){\"use strict\";qq.FineUploaderBasic=function(o){var self=this;this._options={debug:false,button:null,multiple:true,maxConnections:3,disableCancelForFormUploads:false,autoUpload:true,warnBeforeUnload:true,request:{customHeaders:{},endpoint:\"/server/upload\",filenameParam:\"qqfilename\",forceMultipart:true,inputName:\"qqfile\",method:\"POST\",omitDefaultParams:false,params:{},paramsInBody:true,requireSuccessJson:true,totalFileSizeName:\"qqtotalfilesize\",uuidName:\"qquuid\"},validation:{allowedExtensions:[],sizeLimit:0,minSizeLimit:0,itemLimit:0,stopOnFirstInvalidFile:true,acceptFiles:null,image:{maxHeight:0,maxWidth:0,minHeight:0,minWidth:0},allowEmpty:false},callbacks:{onSubmit:function onSubmit(id,name){},onSubmitted:function onSubmitted(id,name){},onComplete:function onComplete(id,name,responseJSON,maybeXhr){},onAllComplete:function onAllComplete(successful,failed){},onCancel:function onCancel(id,name){},onUpload:function onUpload(id,name){},onUploadChunk:function onUploadChunk(id,name,chunkData){},onUploadChunkSuccess:function onUploadChunkSuccess(id,chunkData,responseJSON,xhr){},onResume:function onResume(id,fileName,chunkData,customResumeData){},onProgress:function onProgress(id,name,loaded,total){},onTotalProgress:function onTotalProgress(loaded,total){},onError:function onError(id,name,reason,maybeXhrOrXdr){},onAutoRetry:function onAutoRetry(id,name,attemptNumber){},onManualRetry:function onManualRetry(id,name){},onValidateBatch:function onValidateBatch(fileOrBlobData){},onValidate:function onValidate(fileOrBlobData){},onSubmitDelete:function onSubmitDelete(id){},onDelete:function onDelete(id){},onDeleteComplete:function onDeleteComplete(id,xhrOrXdr,isError){},onPasteReceived:function onPasteReceived(blob){},onStatusChange:function onStatusChange(id,oldStatus,newStatus){},onSessionRequestComplete:function onSessionRequestComplete(response,success,xhrOrXdr){}},messages:{typeError:\"{file} has an invalid extension. Valid extension(s): {extensions}.\",sizeError:\"{file} is too large, maximum file size is {sizeLimit}.\",minSizeError:\"{file} is too small, minimum file size is {minSizeLimit}.\",emptyError:\"{file} is empty, please select files again without it.\",noFilesError:\"No files to upload.\",tooManyItemsError:\"Too many items ({netItems}) would be uploaded.  Item limit is {itemLimit}.\",maxHeightImageError:\"Image is too tall.\",maxWidthImageError:\"Image is too wide.\",minHeightImageError:\"Image is not tall enough.\",minWidthImageError:\"Image is not wide enough.\",retryFailTooManyItems:\"Retry failed - you have reached your file limit.\",onLeave:\"The files are being uploaded, if you leave now the upload will be canceled.\",unsupportedBrowserIos8Safari:\"Unrecoverable error - this browser does not permit file uploading of any kind due to serious bugs in iOS8 Safari.  Please use iOS8 Chrome until Apple fixes these issues.\"},retry:{enableAuto:false,maxAutoAttempts:3,autoAttemptDelay:5,preventRetryResponseProperty:\"preventRetry\"},classes:{buttonHover:\"qq-upload-button-hover\",buttonFocus:\"qq-upload-button-focus\"},chunking:{enabled:false,concurrent:{enabled:false},mandatory:false,paramNames:{partIndex:\"qqpartindex\",partByteOffset:\"qqpartbyteoffset\",chunkSize:\"qqchunksize\",totalFileSize:\"qqtotalfilesize\",totalParts:\"qqtotalparts\"},partSize:function partSize(id){return 2e6;},success:{endpoint:null,headers:function headers(id){return null;},jsonPayload:false,method:\"POST\",params:function params(id){return null;},resetOnStatus:[]}},resume:{enabled:false,recordsExpireIn:7,paramNames:{resuming:\"qqresume\"},customKeys:function customKeys(fileId){return[];}},formatFileName:function formatFileName(fileOrBlobName){return fileOrBlobName;},text:{defaultResponseError:\"Upload failure reason unknown\",fileInputTitle:\"file input\",sizeSymbols:[\"kB\",\"MB\",\"GB\",\"TB\",\"PB\",\"EB\"]},deleteFile:{enabled:false,method:\"DELETE\",endpoint:\"/server/upload\",customHeaders:{},params:{}},cors:{expected:false,sendCredentials:false,allowXdr:false},blobs:{defaultName:\"misc_data\"},paste:{targetElement:null,defaultName:\"pasted_image\"},camera:{ios:false,button:null},extraButtons:[],session:{endpoint:null,params:{},customHeaders:{},refreshOnReset:true},form:{element:\"qq-form\",autoUpload:false,interceptSubmit:true},scaling:{customResizer:null,sendOriginal:true,orient:true,defaultType:null,defaultQuality:80,failureText:\"Failed to scale\",includeExif:false,sizes:[]},workarounds:{iosEmptyVideos:true,ios8SafariUploads:true,ios8BrowserCrash:false}};qq.extend(this._options,o,true);this._buttons=[];this._extraButtonSpecs={};this._buttonIdsForFileIds=[];this._wrapCallbacks();this._disposeSupport=new qq.DisposeSupport();this._storedIds=[];this._autoRetries=[];this._retryTimeouts=[];this._preventRetries=[];this._thumbnailUrls=[];this._netUploadedOrQueued=0;this._netUploaded=0;this._uploadData=this._createUploadDataTracker();this._initFormSupportAndParams();this._customHeadersStore=this._createStore(this._options.request.customHeaders);this._deleteFileCustomHeadersStore=this._createStore(this._options.deleteFile.customHeaders);this._deleteFileParamsStore=this._createStore(this._options.deleteFile.params);this._endpointStore=this._createStore(this._options.request.endpoint);this._deleteFileEndpointStore=this._createStore(this._options.deleteFile.endpoint);this._handler=this._createUploadHandler();this._deleteHandler=qq.DeleteFileAjaxRequester&&this._createDeleteHandler();if(this._options.button){this._defaultButtonId=this._createUploadButton({element:this._options.button,title:this._options.text.fileInputTitle}).getButtonId();}this._generateExtraButtonSpecs();this._handleCameraAccess();if(this._options.paste.targetElement){if(qq.PasteSupport){this._pasteHandler=this._createPasteHandler();}else{this.log(\"Paste support module not found\",\"error\");}}this._options.warnBeforeUnload&&this._preventLeaveInProgress();this._imageGenerator=qq.ImageGenerator&&new qq.ImageGenerator(qq.bind(this.log,this));this._refreshSessionData();this._succeededSinceLastAllComplete=[];this._failedSinceLastAllComplete=[];this._scaler=qq.Scaler&&new qq.Scaler(this._options.scaling,qq.bind(this.log,this))||{};if(this._scaler.enabled){this._customNewFileHandler=qq.bind(this._scaler.handleNewFile,this._scaler);}if(qq.TotalProgress&&qq.supportedFeatures.progressBar){this._totalProgress=new qq.TotalProgress(qq.bind(this._onTotalProgress,this),function(id){var entry=self._uploadData.retrieve({id:id});return entry&&entry.size||0;});}this._currentItemLimit=this._options.validation.itemLimit;this._customResumeDataStore=this._createStore();};qq.FineUploaderBasic.prototype=qq.basePublicApi;qq.extend(qq.FineUploaderBasic.prototype,qq.basePrivateApi);})();qq.AjaxRequester=function(o){\"use strict\";var log,shouldParamsBeInQueryString,queue=[],requestData={},options={acceptHeader:null,validMethods:[\"PATCH\",\"POST\",\"PUT\"],method:\"POST\",contentType:\"application/x-www-form-urlencoded\",maxConnections:3,customHeaders:{},endpointStore:{},paramsStore:{},mandatedParams:{},allowXRequestedWithAndCacheControl:true,successfulResponseCodes:{DELETE:[200,202,204],PATCH:[200,201,202,203,204],POST:[200,201,202,203,204],PUT:[200,201,202,203,204],GET:[200]},cors:{expected:false,sendCredentials:false},log:function log(str,level){},onSend:function onSend(id){},onComplete:function onComplete(id,xhrOrXdr,isError){},onProgress:null};qq.extend(options,o);log=options.log;if(qq.indexOf(options.validMethods,options.method)<0){throw new Error(\"'\"+options.method+\"' is not a supported method for this type of request!\");}function isSimpleMethod(){return qq.indexOf([\"GET\",\"POST\",\"HEAD\"],options.method)>=0;}function containsNonSimpleHeaders(headers){var containsNonSimple=false;qq.each(containsNonSimple,function(idx,header){if(qq.indexOf([\"Accept\",\"Accept-Language\",\"Content-Language\",\"Content-Type\"],header)<0){containsNonSimple=true;return false;}});return containsNonSimple;}function isXdr(xhr){return options.cors.expected&&xhr.withCredentials===undefined;}function getCorsAjaxTransport(){var xhrOrXdr;if(window.XMLHttpRequest||window.ActiveXObject){xhrOrXdr=qq.createXhrInstance();if(xhrOrXdr.withCredentials===undefined){xhrOrXdr=new XDomainRequest();xhrOrXdr.onload=function(){};xhrOrXdr.onerror=function(){};xhrOrXdr.ontimeout=function(){};xhrOrXdr.onprogress=function(){};}}return xhrOrXdr;}function getXhrOrXdr(id,suppliedXhr){var xhrOrXdr=requestData[id]&&requestData[id].xhr;if(!xhrOrXdr){if(suppliedXhr){xhrOrXdr=suppliedXhr;}else{if(options.cors.expected){xhrOrXdr=getCorsAjaxTransport();}else{xhrOrXdr=qq.createXhrInstance();}}requestData[id].xhr=xhrOrXdr;}return xhrOrXdr;}function dequeue(id){var i=qq.indexOf(queue,id),max=options.maxConnections,nextId;delete requestData[id];queue.splice(i,1);if(queue.length>=max&&i<max){nextId=queue[max-1];sendRequest(nextId);}}function onComplete(id,xdrError){var xhr=getXhrOrXdr(id),method=options.method,isError=xdrError===true;dequeue(id);if(isError){log(method+\" request for \"+id+\" has failed\",\"error\");}else if(!isXdr(xhr)&&!isResponseSuccessful(xhr.status)){isError=true;log(method+\" request for \"+id+\" has failed - response code \"+xhr.status,\"error\");}options.onComplete(id,xhr,isError);}function getParams(id){var onDemandParams=requestData[id].additionalParams,mandatedParams=options.mandatedParams,params;if(options.paramsStore.get){params=options.paramsStore.get(id);}if(onDemandParams){qq.each(onDemandParams,function(name,val){params=params||{};params[name]=val;});}if(mandatedParams){qq.each(mandatedParams,function(name,val){params=params||{};params[name]=val;});}return params;}function sendRequest(id,optXhr){var xhr=getXhrOrXdr(id,optXhr),method=options.method,params=getParams(id),payload=requestData[id].payload,url;options.onSend(id);url=createUrl(id,params,requestData[id].additionalQueryParams);if(isXdr(xhr)){xhr.onload=getXdrLoadHandler(id);xhr.onerror=getXdrErrorHandler(id);}else{xhr.onreadystatechange=getXhrReadyStateChangeHandler(id);}registerForUploadProgress(id);xhr.open(method,url,true);if(options.cors.expected&&options.cors.sendCredentials&&!isXdr(xhr)){xhr.withCredentials=true;}setHeaders(id);log(\"Sending \"+method+\" request for \"+id);if(payload){xhr.send(payload);}else if(shouldParamsBeInQueryString||!params){xhr.send();}else if(params&&options.contentType&&options.contentType.toLowerCase().indexOf(\"application/x-www-form-urlencoded\")>=0){xhr.send(qq.obj2url(params,\"\"));}else if(params&&options.contentType&&options.contentType.toLowerCase().indexOf(\"application/json\")>=0){xhr.send(JSON.stringify(params));}else{xhr.send(params);}return xhr;}function createUrl(id,params,additionalQueryParams){var endpoint=options.endpointStore.get(id),addToPath=requestData[id].addToPath;if(addToPath!=undefined){endpoint+=\"/\"+addToPath;}if(shouldParamsBeInQueryString&&params){endpoint=qq.obj2url(params,endpoint);}if(additionalQueryParams){endpoint=qq.obj2url(additionalQueryParams,endpoint);}return endpoint;}function getXhrReadyStateChangeHandler(id){return function(){if(getXhrOrXdr(id).readyState===4){onComplete(id);}};}function registerForUploadProgress(id){var onProgress=options.onProgress;if(onProgress){getXhrOrXdr(id).upload.onprogress=function(e){if(e.lengthComputable){onProgress(id,e.loaded,e.total);}};}}function getXdrLoadHandler(id){return function(){onComplete(id);};}function getXdrErrorHandler(id){return function(){onComplete(id,true);};}function setHeaders(id){var xhr=getXhrOrXdr(id),customHeaders=options.customHeaders,onDemandHeaders=requestData[id].additionalHeaders||{},method=options.method,allHeaders={};if(!isXdr(xhr)){options.acceptHeader&&xhr.setRequestHeader(\"Accept\",options.acceptHeader);if(options.allowXRequestedWithAndCacheControl){if(!options.cors.expected||!isSimpleMethod()||containsNonSimpleHeaders(customHeaders)){xhr.setRequestHeader(\"X-Requested-With\",\"XMLHttpRequest\");xhr.setRequestHeader(\"Cache-Control\",\"no-cache\");}}if(options.contentType&&(method===\"POST\"||method===\"PUT\")){xhr.setRequestHeader(\"Content-Type\",options.contentType);}qq.extend(allHeaders,qq.isFunction(customHeaders)?customHeaders(id):customHeaders);qq.extend(allHeaders,onDemandHeaders);qq.each(allHeaders,function(name,val){xhr.setRequestHeader(name,val);});}}function isResponseSuccessful(responseCode){return qq.indexOf(options.successfulResponseCodes[options.method],responseCode)>=0;}function prepareToSend(id,optXhr,addToPath,additionalParams,additionalQueryParams,additionalHeaders,payload){requestData[id]={addToPath:addToPath,additionalParams:additionalParams,additionalQueryParams:additionalQueryParams,additionalHeaders:additionalHeaders,payload:payload};var len=queue.push(id);if(len<=options.maxConnections){return sendRequest(id,optXhr);}}shouldParamsBeInQueryString=options.method===\"GET\"||options.method===\"DELETE\";qq.extend(this,{initTransport:function initTransport(id){var path,params,headers,payload,cacheBuster,additionalQueryParams;return{withPath:function withPath(appendToPath){path=appendToPath;return this;},withParams:function withParams(additionalParams){params=additionalParams;return this;},withQueryParams:function withQueryParams(_additionalQueryParams_){additionalQueryParams=_additionalQueryParams_;return this;},withHeaders:function withHeaders(additionalHeaders){headers=additionalHeaders;return this;},withPayload:function withPayload(thePayload){payload=thePayload;return this;},withCacheBuster:function withCacheBuster(){cacheBuster=true;return this;},send:function send(optXhr){if(cacheBuster&&qq.indexOf([\"GET\",\"DELETE\"],options.method)>=0){params.qqtimestamp=new Date().getTime();}return prepareToSend(id,optXhr,path,params,additionalQueryParams,headers,payload);}};},canceled:function canceled(id){dequeue(id);}});};qq.UploadHandler=function(spec){\"use strict\";var proxy=spec.proxy,fileState={},onCancel=proxy.onCancel,getName=proxy.getName;qq.extend(this,{add:function add(id,fileItem){fileState[id]=fileItem;fileState[id].temp={};},cancel:function cancel(id){var self=this,cancelFinalizationEffort=new qq.Promise(),onCancelRetVal=onCancel(id,getName(id),cancelFinalizationEffort);onCancelRetVal.then(function(){if(self.isValid(id)){fileState[id].canceled=true;self.expunge(id);}cancelFinalizationEffort.success();});},expunge:function expunge(id){delete fileState[id];},getThirdPartyFileId:function getThirdPartyFileId(id){return fileState[id].key;},isValid:function isValid(id){return fileState[id]!==undefined;},reset:function reset(){fileState={};},_getFileState:function _getFileState(id){return fileState[id];},_setThirdPartyFileId:function _setThirdPartyFileId(id,thirdPartyFileId){fileState[id].key=thirdPartyFileId;},_wasCanceled:function _wasCanceled(id){return!!fileState[id].canceled;}});};qq.UploadHandlerController=function(o,namespace){\"use strict\";var controller=this,chunkingPossible=false,concurrentChunkingPossible=false,chunking,preventRetryResponse,log,handler,options={paramsStore:{},maxConnections:3,chunking:{enabled:false,multiple:{enabled:false}},log:function log(str,level){},onProgress:function onProgress(id,fileName,loaded,total){},onComplete:function onComplete(id,fileName,response,xhr){},onCancel:function onCancel(id,fileName){},onUploadPrep:function onUploadPrep(id){},onUpload:function onUpload(id,fileName){},onUploadChunk:function onUploadChunk(id,fileName,chunkData){},onUploadChunkSuccess:function onUploadChunkSuccess(id,chunkData,response,xhr){},onAutoRetry:function onAutoRetry(id,fileName,response,xhr){},onResume:function onResume(id,fileName,chunkData,customResumeData){},onUuidChanged:function onUuidChanged(id,newUuid){},getName:function getName(id){},setSize:function setSize(id,newSize){},isQueued:function isQueued(id){},getIdsInProxyGroup:function getIdsInProxyGroup(id){},getIdsInBatch:function getIdsInBatch(id){},isInProgress:function isInProgress(id){}},chunked={done:function done(id,chunkIdx,response,xhr){var chunkData=handler._getChunkData(id,chunkIdx);handler._getFileState(id).attemptingResume=false;delete handler._getFileState(id).temp.chunkProgress[chunkIdx];handler._getFileState(id).loaded+=chunkData.size;options.onUploadChunkSuccess(id,handler._getChunkDataForCallback(chunkData),response,xhr);},finalize:function finalize(id){var size=options.getSize(id),name=options.getName(id);log(\"All chunks have been uploaded for \"+id+\" - finalizing....\");handler.finalizeChunks(id).then(function(response,xhr){log(\"Finalize successful for \"+id);var normaizedResponse=_upload2.normalizeResponse(response,true);options.onProgress(id,name,size,size);handler._maybeDeletePersistedChunkData(id);_upload2.cleanup(id,normaizedResponse,xhr);},function(response,xhr){var normalizedResponse=_upload2.normalizeResponse(response,false);log(\"Problem finalizing chunks for file ID \"+id+\" - \"+normalizedResponse.error,\"error\");if(normalizedResponse.reset||xhr&&options.chunking.success.resetOnStatus.indexOf(xhr.status)>=0){chunked.reset(id);}if(!options.onAutoRetry(id,name,normalizedResponse,xhr)){_upload2.cleanup(id,normalizedResponse,xhr);}});},handleFailure:function handleFailure(chunkIdx,id,response,xhr){var name=options.getName(id);log(\"Chunked upload request failed for \"+id+\", chunk \"+chunkIdx);handler.clearCachedChunk(id,chunkIdx);var responseToReport=_upload2.normalizeResponse(response,false),inProgressIdx;if(responseToReport.reset){chunked.reset(id);}else{var inProgressChunksArray=handler._getFileState(id).chunking.inProgress;inProgressIdx=inProgressChunksArray?qq.indexOf(inProgressChunksArray,chunkIdx):-1;if(inProgressIdx>=0){handler._getFileState(id).chunking.inProgress.splice(inProgressIdx,1);handler._getFileState(id).chunking.remaining.unshift(chunkIdx);}}if(!handler._getFileState(id).temp.ignoreFailure){if(concurrentChunkingPossible){handler._getFileState(id).temp.ignoreFailure=true;log(qq.format(\"Going to attempt to abort these chunks: {}. These are currently in-progress: {}.\",JSON.stringify(Object.keys(handler._getXhrs(id))),JSON.stringify(handler._getFileState(id).chunking.inProgress)));qq.each(handler._getXhrs(id),function(ckid,ckXhr){log(qq.format(\"Attempting to abort file {}.{}. XHR readyState {}. \",id,ckid,ckXhr.readyState));ckXhr.abort();ckXhr._cancelled=true;});handler.moveInProgressToRemaining(id);connectionManager.free(id,true);}if(!options.onAutoRetry(id,name,responseToReport,xhr)){_upload2.cleanup(id,responseToReport,xhr);}}},hasMoreParts:function hasMoreParts(id){return!!handler._getFileState(id).chunking.remaining.length;},nextPart:function nextPart(id){var nextIdx=handler._getFileState(id).chunking.remaining.shift();if(nextIdx>=handler._getTotalChunks(id)){nextIdx=null;}return nextIdx;},reset:function reset(id){log(\"Server or callback has ordered chunking effort to be restarted on next attempt for item ID \"+id,\"error\");handler._maybeDeletePersistedChunkData(id);handler.reevaluateChunking(id);handler._getFileState(id).loaded=0;handler._getFileState(id).attemptingResume=false;},sendNext:function sendNext(id){var size=options.getSize(id),name=options.getName(id),chunkIdx=chunked.nextPart(id),chunkData=handler._getChunkData(id,chunkIdx),fileState=handler._getFileState(id),resuming=fileState.attemptingResume,inProgressChunks=fileState.chunking.inProgress||[];if(fileState.loaded==null){fileState.loaded=0;}if(resuming&&options.onResume(id,name,chunkData,fileState.customResumeData)===false){chunked.reset(id);chunkIdx=chunked.nextPart(id);chunkData=handler._getChunkData(id,chunkIdx);resuming=false;}if(chunkIdx==null&&inProgressChunks.length===0){chunked.finalize(id);}else{inProgressChunks.push(chunkIdx);handler._getFileState(id).chunking.inProgress=inProgressChunks;if(concurrentChunkingPossible){connectionManager.open(id,chunkIdx);}if(concurrentChunkingPossible&&connectionManager.available()&&handler._getFileState(id).chunking.remaining.length){chunked.sendNext(id);}if(chunkData.blob.size===0){log(qq.format(\"Chunk {} for file {} will not be uploaded, zero sized chunk.\",chunkIdx,id),\"error\");chunked.handleFailure(chunkIdx,id,\"File is no longer available\",null);}var onUploadChunkPromise=options.onUploadChunk(id,name,handler._getChunkDataForCallback(chunkData));onUploadChunkPromise.then(function(requestOverrides){if(!options.isInProgress(id)){log(qq.format(\"Not sending chunked upload request for item {}.{} - no longer in progress.\",id,chunkIdx));}else{log(qq.format(\"Sending chunked upload request for item {}.{}, bytes {}-{} of {}.\",id,chunkIdx,chunkData.start+1,chunkData.end,size));var uploadChunkData={chunkIdx:chunkIdx,id:id,overrides:requestOverrides,resuming:resuming};handler.uploadChunk(uploadChunkData).then(function success(response,xhr){log(\"Chunked upload request succeeded for \"+id+\", chunk \"+chunkIdx);handler.clearCachedChunk(id,chunkIdx);var inProgressChunks=handler._getFileState(id).chunking.inProgress||[],responseToReport=_upload2.normalizeResponse(response,true),inProgressChunkIdx=qq.indexOf(inProgressChunks,chunkIdx);log(qq.format(\"Chunk {} for file {} uploaded successfully.\",chunkIdx,id));chunked.done(id,chunkIdx,responseToReport,xhr);if(inProgressChunkIdx>=0){inProgressChunks.splice(inProgressChunkIdx,1);}handler._maybePersistChunkedState(id);if(!chunked.hasMoreParts(id)&&inProgressChunks.length===0){chunked.finalize(id);}else if(chunked.hasMoreParts(id)){chunked.sendNext(id);}else{log(qq.format(\"File ID {} has no more chunks to send and these chunk indexes are still marked as in-progress: {}\",id,JSON.stringify(inProgressChunks)));}},function failure(response,xhr){chunked.handleFailure(chunkIdx,id,response,xhr);}).done(function(){handler.clearXhr(id,chunkIdx);});}},function(error){chunked.handleFailure(chunkIdx,id,error,null);});}}},connectionManager={_open:[],_openChunks:{},_waiting:[],available:function available(){var max=options.maxConnections,openChunkEntriesCount=0,openChunksCount=0;qq.each(connectionManager._openChunks,function(fileId,openChunkIndexes){openChunkEntriesCount++;openChunksCount+=openChunkIndexes.length;});return max-(connectionManager._open.length-openChunkEntriesCount+openChunksCount);},free:function free(id,dontAllowNext){var allowNext=!dontAllowNext,waitingIndex=qq.indexOf(connectionManager._waiting,id),connectionsIndex=qq.indexOf(connectionManager._open,id),nextId;delete connectionManager._openChunks[id];if(_upload2.getProxyOrBlob(id)instanceof qq.BlobProxy){log(\"Generated blob upload has ended for \"+id+\", disposing generated blob.\");delete handler._getFileState(id).file;}if(waitingIndex>=0){connectionManager._waiting.splice(waitingIndex,1);}else if(allowNext&&connectionsIndex>=0){connectionManager._open.splice(connectionsIndex,1);nextId=connectionManager._waiting.shift();if(nextId>=0){connectionManager._open.push(nextId);_upload2.start(nextId);}}},getWaitingOrConnected:function getWaitingOrConnected(){var waitingOrConnected=[];qq.each(connectionManager._openChunks,function(fileId,chunks){if(chunks&&chunks.length){waitingOrConnected.push(parseInt(fileId));}});qq.each(connectionManager._open,function(idx,fileId){if(!connectionManager._openChunks[fileId]){waitingOrConnected.push(parseInt(fileId));}});waitingOrConnected=waitingOrConnected.concat(connectionManager._waiting);return waitingOrConnected;},isUsingConnection:function isUsingConnection(id){return qq.indexOf(connectionManager._open,id)>=0;},open:function open(id,chunkIdx){if(chunkIdx==null){connectionManager._waiting.push(id);}if(connectionManager.available()){if(chunkIdx==null){connectionManager._waiting.pop();connectionManager._open.push(id);}else{(function(){var openChunksEntry=connectionManager._openChunks[id]||[];openChunksEntry.push(chunkIdx);connectionManager._openChunks[id]=openChunksEntry;})();}return true;}return false;},reset:function reset(){connectionManager._waiting=[];connectionManager._open=[];}},simple={send:function send(id,name){var fileState=handler._getFileState(id);if(!fileState){log(\"Ignoring send request as this upload may have been cancelled, File ID \"+id,\"warn\");return;}fileState.loaded=0;log(\"Sending simple upload request for \"+id);handler.uploadFile(id).then(function(response,optXhr){log(\"Simple upload request succeeded for \"+id);var responseToReport=_upload2.normalizeResponse(response,true),size=options.getSize(id);options.onProgress(id,name,size,size);_upload2.maybeNewUuid(id,responseToReport);_upload2.cleanup(id,responseToReport,optXhr);},function(response,optXhr){log(\"Simple upload request failed for \"+id);var responseToReport=_upload2.normalizeResponse(response,false);if(!options.onAutoRetry(id,name,responseToReport,optXhr)){_upload2.cleanup(id,responseToReport,optXhr);}});}},_upload2={cancel:function cancel(id){log(\"Cancelling \"+id);options.paramsStore.remove(id);connectionManager.free(id);},cleanup:function cleanup(id,response,optXhr){var name=options.getName(id);options.onComplete(id,name,response,optXhr);if(handler._getFileState(id)){handler._clearXhrs&&handler._clearXhrs(id);}connectionManager.free(id);},getProxyOrBlob:function getProxyOrBlob(id){return handler.getProxy&&handler.getProxy(id)||handler.getFile&&handler.getFile(id);},initHandler:function initHandler(){var handlerType=namespace?qq[namespace]:qq.traditional,handlerModuleSubtype=qq.supportedFeatures.ajaxUploading?\"Xhr\":\"Form\";handler=new handlerType[handlerModuleSubtype+\"UploadHandler\"](options,{getCustomResumeData:options.getCustomResumeData,getDataByUuid:options.getDataByUuid,getName:options.getName,getSize:options.getSize,getUuid:options.getUuid,log:log,onCancel:options.onCancel,onProgress:options.onProgress,onUuidChanged:options.onUuidChanged,onFinalizing:function onFinalizing(id){options.setStatus(id,qq.status.UPLOAD_FINALIZING);}});if(handler._removeExpiredChunkingRecords){handler._removeExpiredChunkingRecords();}},isDeferredEligibleForUpload:function isDeferredEligibleForUpload(id){return options.isQueued(id);},maybeDefer:function maybeDefer(id,blob){if(blob&&!handler.getFile(id)&&blob instanceof qq.BlobProxy){options.onUploadPrep(id);log(\"Attempting to generate a blob on-demand for \"+id);blob.create().then(function(generatedBlob){log(\"Generated an on-demand blob for \"+id);handler.updateBlob(id,generatedBlob);options.setSize(id,generatedBlob.size);handler.reevaluateChunking(id);_upload2.maybeSendDeferredFiles(id);},function(errorMessage){var errorResponse={};if(errorMessage){errorResponse.error=errorMessage;}log(qq.format(\"Failed to generate blob for ID {}.  Error message: {}.\",id,errorMessage),\"error\");options.onComplete(id,options.getName(id),qq.extend(errorResponse,preventRetryResponse),null);_upload2.maybeSendDeferredFiles(id);connectionManager.free(id);});}else{return _upload2.maybeSendDeferredFiles(id);}return false;},maybeSendDeferredFiles:function maybeSendDeferredFiles(id){var idsInGroup=options.getIdsInProxyGroup(id),uploadedThisId=false;if(idsInGroup&&idsInGroup.length){log(\"Maybe ready to upload proxy group file \"+id);qq.each(idsInGroup,function(idx,idInGroup){if(_upload2.isDeferredEligibleForUpload(idInGroup)&&!!handler.getFile(idInGroup)){uploadedThisId=idInGroup===id;_upload2.now(idInGroup);}else if(_upload2.isDeferredEligibleForUpload(idInGroup)){return false;}});}else{uploadedThisId=true;_upload2.now(id);}return uploadedThisId;},maybeNewUuid:function maybeNewUuid(id,response){if(response.newUuid!==undefined){options.onUuidChanged(id,response.newUuid);}},normalizeResponse:function normalizeResponse(originalResponse,successful){var response=originalResponse;if(!qq.isObject(originalResponse)){response={};if(qq.isString(originalResponse)&&!successful){response.error=originalResponse;}}response.success=successful;return response;},now:function now(id){var name=options.getName(id);if(!controller.isValid(id)){throw new qq.Error(id+\" is not a valid file ID to upload!\");}options.onUpload(id,name).then(function(response){if(response&&response.pause){options.setStatus(id,qq.status.PAUSED);handler.pause(id);connectionManager.free(id);}else{if(chunkingPossible&&handler._shouldChunkThisFile(id)){chunked.sendNext(id);}else{simple.send(id,name);}}},function(error){error=error||{};log(id+\" upload start aborted due to rejected onUpload Promise - details: \"+error,\"error\");if(!options.onAutoRetry(id,name,error.responseJSON||{})){var response=_upload2.normalizeResponse(error.responseJSON,false);_upload2.cleanup(id,response);}});},start:function start(id){var blobToUpload=_upload2.getProxyOrBlob(id);if(blobToUpload){return _upload2.maybeDefer(id,blobToUpload);}else{_upload2.now(id);return true;}}};qq.extend(this,{add:function add(id,file){handler.add.apply(this,arguments);},upload:function upload(id){if(connectionManager.open(id)){return _upload2.start(id);}return false;},retry:function retry(id){if(concurrentChunkingPossible){handler._getFileState(id).temp.ignoreFailure=false;}if(connectionManager.isUsingConnection(id)){return _upload2.start(id);}else{return controller.upload(id);}},cancel:function cancel(id){var cancelRetVal=handler.cancel(id);if(qq.isGenericPromise(cancelRetVal)){cancelRetVal.then(function(){_upload2.cancel(id);});}else if(cancelRetVal!==false){_upload2.cancel(id);}},cancelAll:function cancelAll(){var waitingOrConnected=connectionManager.getWaitingOrConnected(),i;if(waitingOrConnected.length){for(i=waitingOrConnected.length-1;i>=0;i--){controller.cancel(waitingOrConnected[i]);}}connectionManager.reset();},getFile:function getFile(id){if(handler.getProxy&&handler.getProxy(id)){return handler.getProxy(id).referenceBlob;}return handler.getFile&&handler.getFile(id);},isProxied:function isProxied(id){return!!(handler.getProxy&&handler.getProxy(id));},getInput:function getInput(id){if(handler.getInput){return handler.getInput(id);}},reset:function reset(){log(\"Resetting upload handler\");controller.cancelAll();connectionManager.reset();handler.reset();},expunge:function expunge(id){if(controller.isValid(id)){return handler.expunge(id);}},isValid:function isValid(id){return handler.isValid(id);},hasResumeRecord:function hasResumeRecord(id){var key=handler.isValid(id)&&handler._getLocalStorageId&&handler._getLocalStorageId(id);if(key){return!!localStorage.getItem(key);}return false;},getResumableFilesData:function getResumableFilesData(){if(handler.getResumableFilesData){return handler.getResumableFilesData();}return[];},getThirdPartyFileId:function getThirdPartyFileId(id){if(controller.isValid(id)){return handler.getThirdPartyFileId(id);}},pause:function pause(id){if(controller.isResumable(id)&&handler.pause&&controller.isValid(id)&&handler.pause(id)){connectionManager.free(id);handler.moveInProgressToRemaining(id);return true;}return false;},isAttemptingResume:function isAttemptingResume(id){return!!handler.isAttemptingResume&&handler.isAttemptingResume(id);},isResumable:function isResumable(id){return!!handler.isResumable&&handler.isResumable(id);}});qq.extend(options,o);log=options.log;chunkingPossible=options.chunking.enabled&&qq.supportedFeatures.chunking;concurrentChunkingPossible=chunkingPossible&&options.chunking.concurrent.enabled;preventRetryResponse=function(){var response={};response[options.preventRetryParam]=true;return response;}();_upload2.initHandler();};qq.WindowReceiveMessage=function(o){\"use strict\";var options={log:function log(message,level){}},callbackWrapperDetachers={};qq.extend(options,o);qq.extend(this,{receiveMessage:function receiveMessage(id,callback){var onMessageCallbackWrapper=function onMessageCallbackWrapper(event){callback(event.data);};if(window.postMessage){callbackWrapperDetachers[id]=qq(window).attach(\"message\",onMessageCallbackWrapper);}else{log(\"iframe message passing not supported in this browser!\",\"error\");}},stopReceivingMessages:function stopReceivingMessages(id){if(window.postMessage){var detacher=callbackWrapperDetachers[id];if(detacher){detacher();}}}});};qq.FormUploadHandler=function(spec){\"use strict\";var options=spec.options,handler=this,proxy=spec.proxy,formHandlerInstanceId=qq.getUniqueId(),onloadCallbacks={},detachLoadEvents={},postMessageCallbackTimers={},isCors=options.isCors,inputName=options.inputName,getUuid=proxy.getUuid,log=proxy.log,corsMessageReceiver=new qq.WindowReceiveMessage({log:log});function expungeFile(id){delete detachLoadEvents[id];if(isCors){clearTimeout(postMessageCallbackTimers[id]);delete postMessageCallbackTimers[id];corsMessageReceiver.stopReceivingMessages(id);}var iframe=document.getElementById(handler._getIframeName(id));if(iframe){iframe.setAttribute(\"src\",\"javascript:false;\");qq(iframe).remove();}}function getFileIdForIframeName(iframeName){return iframeName.split(\"_\")[0];}function initIframeForUpload(name){var iframe=qq.toElement(\"<iframe src='javascript:false;' name='\"+name+\"' />\");iframe.setAttribute(\"id\",name);iframe.style.display=\"none\";document.body.appendChild(iframe);return iframe;}function registerPostMessageCallback(iframe,callback){var iframeName=iframe.id,fileId=getFileIdForIframeName(iframeName),uuid=getUuid(fileId);onloadCallbacks[uuid]=callback;detachLoadEvents[fileId]=qq(iframe).attach(\"load\",function(){if(handler.getInput(fileId)){log(\"Received iframe load event for CORS upload request (iframe name \"+iframeName+\")\");postMessageCallbackTimers[iframeName]=setTimeout(function(){var errorMessage=\"No valid message received from loaded iframe for iframe name \"+iframeName;log(errorMessage,\"error\");callback({error:errorMessage});},1e3);}});corsMessageReceiver.receiveMessage(iframeName,function(message){log(\"Received the following window message: '\"+message+\"'\");var fileId=getFileIdForIframeName(iframeName),response=handler._parseJsonResponse(message),uuid=response.uuid,onloadCallback;if(uuid&&onloadCallbacks[uuid]){log(\"Handling response for iframe name \"+iframeName);clearTimeout(postMessageCallbackTimers[iframeName]);delete postMessageCallbackTimers[iframeName];handler._detachLoadEvent(iframeName);onloadCallback=onloadCallbacks[uuid];delete onloadCallbacks[uuid];corsMessageReceiver.stopReceivingMessages(iframeName);onloadCallback(response);}else if(!uuid){log(\"'\"+message+\"' does not contain a UUID - ignoring.\");}});}qq.extend(this,new qq.UploadHandler(spec));qq.override(this,function(super_){return{add:function add(id,fileInput){super_.add(id,{input:fileInput});fileInput.setAttribute(\"name\",inputName);if(fileInput.parentNode){qq(fileInput).remove();}},expunge:function expunge(id){expungeFile(id);super_.expunge(id);},isValid:function isValid(id){return super_.isValid(id)&&handler._getFileState(id).input!==undefined;}};});qq.extend(this,{getInput:function getInput(id){return handler._getFileState(id).input;},_attachLoadEvent:function _attachLoadEvent(iframe,callback){var responseDescriptor;if(isCors){registerPostMessageCallback(iframe,callback);}else{detachLoadEvents[iframe.id]=qq(iframe).attach(\"load\",function(){log(\"Received response for \"+iframe.id);if(!iframe.parentNode){return;}try{if(iframe.contentDocument&&iframe.contentDocument.body&&iframe.contentDocument.body.innerHTML==\"false\"){return;}}catch(error){log(\"Error when attempting to access iframe during handling of upload response (\"+error.message+\")\",\"error\");responseDescriptor={success:false};}callback(responseDescriptor);});}},_createIframe:function _createIframe(id){var iframeName=handler._getIframeName(id);return initIframeForUpload(iframeName);},_detachLoadEvent:function _detachLoadEvent(id){if(detachLoadEvents[id]!==undefined){detachLoadEvents[id]();delete detachLoadEvents[id];}},_getIframeName:function _getIframeName(fileId){return fileId+\"_\"+formHandlerInstanceId;},_initFormForUpload:function _initFormForUpload(spec){var method=spec.method,endpoint=spec.endpoint,params=spec.params,paramsInBody=spec.paramsInBody,targetName=spec.targetName,form=qq.toElement(\"<form method='\"+method+\"' enctype='multipart/form-data'></form>\"),url=endpoint;if(paramsInBody){qq.obj2Inputs(params,form);}else{url=qq.obj2url(params,endpoint);}form.setAttribute(\"action\",url);form.setAttribute(\"target\",targetName);form.style.display=\"none\";document.body.appendChild(form);return form;},_parseJsonResponse:function _parseJsonResponse(innerHtmlOrMessage){var response={};try{response=qq.parseJson(innerHtmlOrMessage);}catch(error){log(\"Error when attempting to parse iframe upload response (\"+error.message+\")\",\"error\");}return response;}});};qq.XhrUploadHandler=function(spec){\"use strict\";var handler=this,namespace=spec.options.namespace,proxy=spec.proxy,chunking=spec.options.chunking,getChunkSize=function getChunkSize(id){var fileState=handler._getFileState(id);if(fileState.chunkSize){return fileState.chunkSize;}else{var chunkSize=chunking.partSize;if(qq.isFunction(chunkSize)){chunkSize=chunkSize(id,getSize(id));}fileState.chunkSize=chunkSize;return chunkSize;}},resume=spec.options.resume,chunkFiles=chunking&&spec.options.chunking.enabled&&qq.supportedFeatures.chunking,resumeEnabled=resume&&spec.options.resume.enabled&&chunkFiles&&qq.supportedFeatures.resume,getName=proxy.getName,getSize=proxy.getSize,getUuid=proxy.getUuid,getEndpoint=proxy.getEndpoint,getDataByUuid=proxy.getDataByUuid,onUuidChanged=proxy.onUuidChanged,onProgress=proxy.onProgress,log=proxy.log,getCustomResumeData=proxy.getCustomResumeData;function abort(id){qq.each(handler._getXhrs(id),function(xhrId,xhr){var ajaxRequester=handler._getAjaxRequester(id,xhrId);xhr.onreadystatechange=null;xhr.upload.onprogress=null;xhr.abort();ajaxRequester&&ajaxRequester.canceled&&ajaxRequester.canceled(id);});}qq.extend(this,new qq.UploadHandler(spec));qq.override(this,function(super_){return{add:function add(id,blobOrProxy){if(qq.isFile(blobOrProxy)||qq.isBlob(blobOrProxy)){super_.add(id,{file:blobOrProxy});}else if(blobOrProxy instanceof qq.BlobProxy){super_.add(id,{proxy:blobOrProxy});}else{throw new Error(\"Passed obj is not a File, Blob, or proxy\");}handler._initTempState(id);resumeEnabled&&handler._maybePrepareForResume(id);},expunge:function expunge(id){abort(id);handler._maybeDeletePersistedChunkData(id);handler._clearXhrs(id);super_.expunge(id);}};});qq.extend(this,{clearCachedChunk:function clearCachedChunk(id,chunkIdx){var fileState=handler._getFileState(id);if(fileState){delete fileState.temp.cachedChunks[chunkIdx];}},clearXhr:function clearXhr(id,chunkIdx){var tempState=handler._getFileState(id).temp;if(tempState.xhrs){delete tempState.xhrs[chunkIdx];}if(tempState.ajaxRequesters){delete tempState.ajaxRequesters[chunkIdx];}},finalizeChunks:function finalizeChunks(id,responseParser){var lastChunkIdx=handler._getTotalChunks(id)-1,xhr=handler._getXhr(id,lastChunkIdx);if(responseParser){return new qq.Promise().success(responseParser(xhr),xhr);}return new qq.Promise().success({},xhr);},getFile:function getFile(id){return handler.isValid(id)&&handler._getFileState(id).file;},getProxy:function getProxy(id){return handler.isValid(id)&&handler._getFileState(id).proxy;},getResumableFilesData:function getResumableFilesData(){var resumableFilesData=[];handler._iterateResumeRecords(function(key,uploadData){handler.moveInProgressToRemaining(null,uploadData.chunking.inProgress,uploadData.chunking.remaining);var data={name:uploadData.name,remaining:uploadData.chunking.remaining,size:uploadData.size,uuid:uploadData.uuid};if(uploadData.key){data.key=uploadData.key;}if(uploadData.customResumeData){data.customResumeData=uploadData.customResumeData;}resumableFilesData.push(data);});return resumableFilesData;},isAttemptingResume:function isAttemptingResume(id){return handler._getFileState(id).attemptingResume;},isResumable:function isResumable(id){return!!chunking&&handler.isValid(id)&&!handler._getFileState(id).notResumable;},moveInProgressToRemaining:function moveInProgressToRemaining(id,optInProgress,optRemaining){var fileState=handler._getFileState(id)||{},chunkingState=fileState.chunking||{},inProgress=optInProgress||chunkingState.inProgress,remaining=optRemaining||chunkingState.remaining;if(inProgress){log(qq.format(\"Moving these chunks from in-progress {}, to remaining.\",JSON.stringify(inProgress)));inProgress.reverse();qq.each(inProgress,function(idx,chunkIdx){remaining.unshift(chunkIdx);});inProgress.length=0;}},pause:function pause(id){if(handler.isValid(id)){log(qq.format(\"Aborting XHR upload for {} '{}' due to pause instruction.\",id,getName(id)));handler._getFileState(id).paused=true;abort(id);return true;}},reevaluateChunking:function reevaluateChunking(id){if(chunking&&handler.isValid(id)){var state=handler._getFileState(id),totalChunks,i;delete state.chunking;state.chunking={};totalChunks=handler._getTotalChunks(id);if(totalChunks>1||chunking.mandatory){state.chunking.enabled=true;state.chunking.parts=totalChunks;state.chunking.remaining=[];for(i=0;i<totalChunks;i++){state.chunking.remaining.push(i);}handler._initTempState(id);}else{state.chunking.enabled=false;}}},updateBlob:function updateBlob(id,newBlob){if(handler.isValid(id)){handler._getFileState(id).file=newBlob;}},_clearXhrs:function _clearXhrs(id){var tempState=handler._getFileState(id).temp;qq.each(tempState.ajaxRequesters,function(chunkId){delete tempState.ajaxRequesters[chunkId];});qq.each(tempState.xhrs,function(chunkId){delete tempState.xhrs[chunkId];});},_createXhr:function _createXhr(id,optChunkIdx){return handler._registerXhr(id,optChunkIdx,qq.createXhrInstance());},_getAjaxRequester:function _getAjaxRequester(id,optChunkIdx){var chunkIdx=optChunkIdx==null?-1:optChunkIdx;return handler._getFileState(id).temp.ajaxRequesters[chunkIdx];},_getChunkData:function _getChunkData(id,chunkIndex){var chunkSize=getChunkSize(id),fileSize=getSize(id),fileOrBlob=handler.getFile(id),startBytes=chunkSize*chunkIndex,endBytes=startBytes+chunkSize>=fileSize?fileSize:startBytes+chunkSize,totalChunks=handler._getTotalChunks(id),cachedChunks=this._getFileState(id).temp.cachedChunks,blob=cachedChunks[chunkIndex]||qq.sliceBlob(fileOrBlob,startBytes,endBytes);cachedChunks[chunkIndex]=blob;return{part:chunkIndex,start:startBytes,end:endBytes,count:totalChunks,blob:blob,size:endBytes-startBytes};},_getChunkDataForCallback:function _getChunkDataForCallback(chunkData){return{partIndex:chunkData.part,startByte:chunkData.start+1,endByte:chunkData.end,totalParts:chunkData.count};},_getLocalStorageId:function _getLocalStorageId(id){var formatVersion=\"5.0\",name=getName(id),size=getSize(id),chunkSize=getChunkSize(id),endpoint=getEndpoint(id),customKeys=resume.customKeys(id),localStorageId=qq.format(\"qq{}resume{}-{}-{}-{}-{}\",namespace,formatVersion,name,size,chunkSize,endpoint);customKeys.forEach(function(key){localStorageId+=\"-\"+key;});return localStorageId;},_getMimeType:function _getMimeType(id){return handler.getFile(id).type;},_getPersistableData:function _getPersistableData(id){return handler._getFileState(id).chunking;},_getTotalChunks:function _getTotalChunks(id){if(chunking){var fileSize=getSize(id),chunkSize=getChunkSize(id);return Math.ceil(fileSize/chunkSize);}},_getXhr:function _getXhr(id,optChunkIdx){var chunkIdx=optChunkIdx==null?-1:optChunkIdx;return handler._getFileState(id).temp.xhrs[chunkIdx];},_getXhrs:function _getXhrs(id){return handler._getFileState(id).temp.xhrs;},_iterateResumeRecords:function _iterateResumeRecords(callback){if(resumeEnabled){qq.each(localStorage,function(key,item){if(key.indexOf(qq.format(\"qq{}resume\",namespace))===0){var uploadData=JSON.parse(item);callback(key,uploadData);}});}},_initTempState:function _initTempState(id){handler._getFileState(id).temp={ajaxRequesters:{},chunkProgress:{},xhrs:{},cachedChunks:{}};},_markNotResumable:function _markNotResumable(id){handler._getFileState(id).notResumable=true;},_maybeDeletePersistedChunkData:function _maybeDeletePersistedChunkData(id){var localStorageId;if(resumeEnabled&&handler.isResumable(id)){localStorageId=handler._getLocalStorageId(id);if(localStorageId&&localStorage.getItem(localStorageId)){localStorage.removeItem(localStorageId);return true;}}return false;},_maybePrepareForResume:function _maybePrepareForResume(id){var state=handler._getFileState(id),localStorageId,persistedData;if(resumeEnabled&&state.key===undefined){localStorageId=handler._getLocalStorageId(id);persistedData=localStorage.getItem(localStorageId);if(persistedData){persistedData=JSON.parse(persistedData);if(getDataByUuid(persistedData.uuid)){handler._markNotResumable(id);}else{log(qq.format(\"Identified file with ID {} and name of {} as resumable.\",id,getName(id)));onUuidChanged(id,persistedData.uuid);state.key=persistedData.key;state.chunking=persistedData.chunking;state.loaded=persistedData.loaded;state.customResumeData=persistedData.customResumeData;state.attemptingResume=true;handler.moveInProgressToRemaining(id);}}}},_maybePersistChunkedState:function _maybePersistChunkedState(id){var state=handler._getFileState(id),localStorageId,persistedData;if(resumeEnabled&&handler.isResumable(id)){var customResumeData=getCustomResumeData(id);localStorageId=handler._getLocalStorageId(id);persistedData={name:getName(id),size:getSize(id),uuid:getUuid(id),key:state.key,chunking:state.chunking,loaded:state.loaded,lastUpdated:Date.now()};if(customResumeData){persistedData.customResumeData=customResumeData;}try{localStorage.setItem(localStorageId,JSON.stringify(persistedData));}catch(error){log(qq.format(\"Unable to save resume data for '{}' due to error: '{}'.\",id,error.toString()),\"warn\");}}},_registerProgressHandler:function _registerProgressHandler(id,chunkIdx,chunkSize){var xhr=handler._getXhr(id,chunkIdx),name=getName(id),progressCalculator={simple:function simple(loaded,total){var fileSize=getSize(id);if(loaded===total){onProgress(id,name,fileSize,fileSize);}else{onProgress(id,name,loaded>=fileSize?fileSize-1:loaded,fileSize);}},chunked:function chunked(loaded,total){var chunkProgress=handler._getFileState(id).temp.chunkProgress,totalSuccessfullyLoadedForFile=handler._getFileState(id).loaded,loadedForRequest=loaded,totalForRequest=total,totalFileSize=getSize(id),estActualChunkLoaded=loadedForRequest-(totalForRequest-chunkSize),totalLoadedForFile=totalSuccessfullyLoadedForFile;chunkProgress[chunkIdx]=estActualChunkLoaded;qq.each(chunkProgress,function(chunkIdx,chunkLoaded){totalLoadedForFile+=chunkLoaded;});onProgress(id,name,totalLoadedForFile,totalFileSize);}};xhr.upload.onprogress=function(e){if(e.lengthComputable){var type=chunkSize==null?\"simple\":\"chunked\";progressCalculator[type](e.loaded,e.total);}};},_registerXhr:function _registerXhr(id,optChunkIdx,xhr,optAjaxRequester){var xhrsId=optChunkIdx==null?-1:optChunkIdx,tempState=handler._getFileState(id).temp;tempState.xhrs=tempState.xhrs||{};tempState.ajaxRequesters=tempState.ajaxRequesters||{};tempState.xhrs[xhrsId]=xhr;if(optAjaxRequester){tempState.ajaxRequesters[xhrsId]=optAjaxRequester;}return xhr;},_removeExpiredChunkingRecords:function _removeExpiredChunkingRecords(){var expirationDays=resume.recordsExpireIn;handler._iterateResumeRecords(function(key,uploadData){var expirationDate=new Date(uploadData.lastUpdated);expirationDate.setDate(expirationDate.getDate()+expirationDays);if(expirationDate.getTime()<=Date.now()){log(\"Removing expired resume record with key \"+key);localStorage.removeItem(key);}});},_shouldChunkThisFile:function _shouldChunkThisFile(id){var state=handler._getFileState(id);if(state){if(!state.chunking){handler.reevaluateChunking(id);}return state.chunking.enabled;}}});};qq.DeleteFileAjaxRequester=function(o){\"use strict\";var requester,options={method:\"DELETE\",uuidParamName:\"qquuid\",endpointStore:{},maxConnections:3,customHeaders:function customHeaders(id){return{};},paramsStore:{},cors:{expected:false,sendCredentials:false},log:function log(str,level){},onDelete:function onDelete(id){},onDeleteComplete:function onDeleteComplete(id,xhrOrXdr,isError){}};qq.extend(options,o);function getMandatedParams(){if(options.method.toUpperCase()===\"POST\"){return{_method:\"DELETE\"};}return{};}requester=qq.extend(this,new qq.AjaxRequester({acceptHeader:\"application/json\",validMethods:[\"POST\",\"DELETE\"],method:options.method,endpointStore:options.endpointStore,paramsStore:options.paramsStore,mandatedParams:getMandatedParams(),maxConnections:options.maxConnections,customHeaders:function customHeaders(id){return options.customHeaders.get(id);},log:options.log,onSend:options.onDelete,onComplete:options.onDeleteComplete,cors:options.cors}));qq.extend(this,{sendDelete:function sendDelete(id,uuid,additionalMandatedParams){var additionalOptions=additionalMandatedParams||{};options.log(\"Submitting delete file request for \"+id);if(options.method===\"DELETE\"){requester.initTransport(id).withPath(uuid).withParams(additionalOptions).send();}else{additionalOptions[options.uuidParamName]=uuid;requester.initTransport(id).withParams(additionalOptions).send();}}});};(function(){function detectSubsampling(img){var iw=img.naturalWidth,ih=img.naturalHeight,canvas=document.createElement(\"canvas\"),ctx;if(iw*ih>1024*1024){canvas.width=canvas.height=1;ctx=canvas.getContext(\"2d\");ctx.drawImage(img,-iw+1,0);return ctx.getImageData(0,0,1,1).data[3]===0;}else{return false;}}function detectVerticalSquash(img,iw,ih){var canvas=document.createElement(\"canvas\"),sy=0,ey=ih,py=ih,ctx,data,alpha,ratio;canvas.width=1;canvas.height=ih;ctx=canvas.getContext(\"2d\");ctx.drawImage(img,0,0);data=ctx.getImageData(0,0,1,ih).data;while(py>sy){alpha=data[(py-1)*4+3];if(alpha===0){ey=py;}else{sy=py;}py=ey+sy>>1;}ratio=py/ih;return ratio===0?1:ratio;}function renderImageToDataURL(img,blob,options,doSquash){var canvas=document.createElement(\"canvas\"),mime=options.mime||\"image/jpeg\",promise=new qq.Promise();renderImageToCanvas(img,blob,canvas,options,doSquash).then(function(){promise.success(canvas.toDataURL(mime,options.quality||.8));});return promise;}function maybeCalculateDownsampledDimensions(spec){var maxPixels=5241e3;if(!qq.ios()){throw new qq.Error(\"Downsampled dimensions can only be reliably calculated for iOS!\");}if(spec.origHeight*spec.origWidth>maxPixels){return{newHeight:Math.round(Math.sqrt(maxPixels*(spec.origHeight/spec.origWidth))),newWidth:Math.round(Math.sqrt(maxPixels*(spec.origWidth/spec.origHeight)))};}}function renderImageToCanvas(img,blob,canvas,options,doSquash){var iw=img.naturalWidth,ih=img.naturalHeight,width=options.width,height=options.height,ctx=canvas.getContext(\"2d\"),promise=new qq.Promise(),modifiedDimensions;ctx.save();if(options.resize){return renderImageToCanvasWithCustomResizer({blob:blob,canvas:canvas,image:img,imageHeight:ih,imageWidth:iw,orientation:options.orientation,resize:options.resize,targetHeight:height,targetWidth:width});}if(!qq.supportedFeatures.unlimitedScaledImageSize){modifiedDimensions=maybeCalculateDownsampledDimensions({origWidth:width,origHeight:height});if(modifiedDimensions){qq.log(qq.format(\"Had to reduce dimensions due to device limitations from {}w / {}h to {}w / {}h\",width,height,modifiedDimensions.newWidth,modifiedDimensions.newHeight),\"warn\");width=modifiedDimensions.newWidth;height=modifiedDimensions.newHeight;}}transformCoordinate(canvas,width,height,options.orientation);if(qq.ios()){(function(){if(detectSubsampling(img)){iw/=2;ih/=2;}var d=1024,tmpCanvas=document.createElement(\"canvas\"),vertSquashRatio=doSquash?detectVerticalSquash(img,iw,ih):1,dw=Math.ceil(d*width/iw),dh=Math.ceil(d*height/ih/vertSquashRatio),sy=0,dy=0,tmpCtx,sx,dx;tmpCanvas.width=tmpCanvas.height=d;tmpCtx=tmpCanvas.getContext(\"2d\");while(sy<ih){sx=0;dx=0;while(sx<iw){tmpCtx.clearRect(0,0,d,d);tmpCtx.drawImage(img,-sx,-sy);ctx.drawImage(tmpCanvas,0,0,d,d,dx,dy,dw,dh);sx+=d;dx+=dw;}sy+=d;dy+=dh;}ctx.restore();tmpCanvas=tmpCtx=null;})();}else{ctx.drawImage(img,0,0,width,height);}canvas.qqImageRendered&&canvas.qqImageRendered();promise.success();return promise;}function renderImageToCanvasWithCustomResizer(resizeInfo){var blob=resizeInfo.blob,image=resizeInfo.image,imageHeight=resizeInfo.imageHeight,imageWidth=resizeInfo.imageWidth,orientation=resizeInfo.orientation,promise=new qq.Promise(),resize=resizeInfo.resize,sourceCanvas=document.createElement(\"canvas\"),sourceCanvasContext=sourceCanvas.getContext(\"2d\"),targetCanvas=resizeInfo.canvas,targetHeight=resizeInfo.targetHeight,targetWidth=resizeInfo.targetWidth;transformCoordinate(sourceCanvas,imageWidth,imageHeight,orientation);targetCanvas.height=targetHeight;targetCanvas.width=targetWidth;sourceCanvasContext.drawImage(image,0,0);resize({blob:blob,height:targetHeight,image:image,sourceCanvas:sourceCanvas,targetCanvas:targetCanvas,width:targetWidth}).then(function success(){targetCanvas.qqImageRendered&&targetCanvas.qqImageRendered();promise.success();},promise.failure);return promise;}function transformCoordinate(canvas,width,height,orientation){switch(orientation){case 5:case 6:case 7:case 8:canvas.width=height;canvas.height=width;break;default:canvas.width=width;canvas.height=height;}var ctx=canvas.getContext(\"2d\");switch(orientation){case 2:ctx.translate(width,0);ctx.scale(-1,1);break;case 3:ctx.translate(width,height);ctx.rotate(Math.PI);break;case 4:ctx.translate(0,height);ctx.scale(1,-1);break;case 5:ctx.rotate(.5*Math.PI);ctx.scale(1,-1);break;case 6:ctx.rotate(.5*Math.PI);ctx.translate(0,-height);break;case 7:ctx.rotate(.5*Math.PI);ctx.translate(width,-height);ctx.scale(-1,1);break;case 8:ctx.rotate(-.5*Math.PI);ctx.translate(-width,0);break;default:break;}}function MegaPixImage(srcImage,errorCallback){var self=this;if(window.Blob&&srcImage instanceof Blob){(function(){var img=new Image(),URL=window.URL&&window.URL.createObjectURL?window.URL:window.webkitURL&&window.webkitURL.createObjectURL?window.webkitURL:null;if(!URL){throw Error(\"No createObjectURL function found to create blob url\");}img.src=URL.createObjectURL(srcImage);self.blob=srcImage;srcImage=img;})();}if(!srcImage.naturalWidth&&!srcImage.naturalHeight){srcImage.onload=function(){var listeners=self.imageLoadListeners;if(listeners){self.imageLoadListeners=null;setTimeout(function(){for(var i=0,len=listeners.length;i<len;i++){listeners[i]();}},0);}};srcImage.onerror=errorCallback;this.imageLoadListeners=[];}this.srcImage=srcImage;}MegaPixImage.prototype.render=function(target,options){options=options||{};var self=this,imgWidth=this.srcImage.naturalWidth,imgHeight=this.srcImage.naturalHeight,width=options.width,height=options.height,maxWidth=options.maxWidth,maxHeight=options.maxHeight,doSquash=!this.blob||this.blob.type===\"image/jpeg\",tagName=target.tagName.toLowerCase(),opt;if(this.imageLoadListeners){this.imageLoadListeners.push(function(){self.render(target,options);});return;}if(width&&!height){height=imgHeight*width/imgWidth<<0;}else if(height&&!width){width=imgWidth*height/imgHeight<<0;}else{width=imgWidth;height=imgHeight;}if(maxWidth&&width>maxWidth){width=maxWidth;height=imgHeight*width/imgWidth<<0;}if(maxHeight&&height>maxHeight){height=maxHeight;width=imgWidth*height/imgHeight<<0;}opt={width:width,height:height},qq.each(options,function(optionsKey,optionsValue){opt[optionsKey]=optionsValue;});if(tagName===\"img\"){(function(){var oldTargetSrc=target.src;renderImageToDataURL(self.srcImage,self.blob,opt,doSquash).then(function(dataUri){target.src=dataUri;oldTargetSrc===target.src&&target.onload();});})();}else if(tagName===\"canvas\"){renderImageToCanvas(this.srcImage,this.blob,target,opt,doSquash);}if(typeof this.onrender===\"function\"){this.onrender(target);}};qq.MegaPixImage=MegaPixImage;})();qq.ImageGenerator=function(log){\"use strict\";function isImg(el){return el.tagName.toLowerCase()===\"img\";}function isCanvas(el){return el.tagName.toLowerCase()===\"canvas\";}function isImgCorsSupported(){return new Image().crossOrigin!==undefined;}function isCanvasSupported(){var canvas=document.createElement(\"canvas\");return canvas.getContext&&canvas.getContext(\"2d\");}function determineMimeOfFileName(nameWithPath){var pathSegments=nameWithPath.split(\"/\"),name=pathSegments[pathSegments.length-1].split(\"?\")[0],extension=qq.getExtension(name);extension=extension&&extension.toLowerCase();switch(extension){case\"jpeg\":case\"jpg\":return\"image/jpeg\";case\"png\":return\"image/png\";case\"bmp\":return\"image/bmp\";case\"gif\":return\"image/gif\";case\"tiff\":case\"tif\":return\"image/tiff\";}}function isCrossOrigin(url){var targetAnchor=document.createElement(\"a\"),targetProtocol,targetHostname,targetPort;targetAnchor.href=url;targetProtocol=targetAnchor.protocol;targetPort=targetAnchor.port;targetHostname=targetAnchor.hostname;if(targetProtocol.toLowerCase()!==window.location.protocol.toLowerCase()){return true;}if(targetHostname.toLowerCase()!==window.location.hostname.toLowerCase()){return true;}if(targetPort!==window.location.port&&!qq.ie()){return true;}return false;}function registerImgLoadListeners(img,promise){img.onload=function(){img.onload=null;img.onerror=null;promise.success(img);};img.onerror=function(){img.onload=null;img.onerror=null;log(\"Problem drawing thumbnail!\",\"error\");promise.failure(img,\"Problem drawing thumbnail!\");};}function registerCanvasDrawImageListener(canvas,promise){canvas.qqImageRendered=function(){promise.success(canvas);};}function registerThumbnailRenderedListener(imgOrCanvas,promise){var registered=isImg(imgOrCanvas)||isCanvas(imgOrCanvas);if(isImg(imgOrCanvas)){registerImgLoadListeners(imgOrCanvas,promise);}else if(isCanvas(imgOrCanvas)){registerCanvasDrawImageListener(imgOrCanvas,promise);}else{promise.failure(imgOrCanvas);log(qq.format(\"Element container of type {} is not supported!\",imgOrCanvas.tagName),\"error\");}return registered;}function draw(fileOrBlob,container,options){var drawPreview=new qq.Promise(),identifier=new qq.Identify(fileOrBlob,log),maxSize=options.maxSize,orient=options.orient==null?true:options.orient,megapixErrorHandler=function megapixErrorHandler(){container.onerror=null;container.onload=null;log(\"Could not render preview, file may be too large!\",\"error\");drawPreview.failure(container,\"Browser cannot render image!\");};identifier.isPreviewable().then(function(mime){var dummyExif={parse:function parse(){return new qq.Promise().success();}},exif=orient?new qq.Exif(fileOrBlob,log):dummyExif,mpImg=new qq.MegaPixImage(fileOrBlob,megapixErrorHandler);if(registerThumbnailRenderedListener(container,drawPreview)){exif.parse().then(function(exif){var orientation=exif&&exif.Orientation;mpImg.render(container,{maxWidth:maxSize,maxHeight:maxSize,orientation:orientation,mime:mime,resize:options.customResizeFunction});},function(failureMsg){log(qq.format(\"EXIF data could not be parsed ({}).  Assuming orientation = 1.\",failureMsg));mpImg.render(container,{maxWidth:maxSize,maxHeight:maxSize,mime:mime,resize:options.customResizeFunction});});}},function(){log(\"Not previewable\");drawPreview.failure(container,\"Not previewable\");});return drawPreview;}function drawOnCanvasOrImgFromUrl(url,canvasOrImg,draw,maxSize,customResizeFunction){var tempImg=new Image(),tempImgRender=new qq.Promise();registerThumbnailRenderedListener(tempImg,tempImgRender);if(isCrossOrigin(url)){tempImg.crossOrigin=\"anonymous\";}tempImg.src=url;tempImgRender.then(function rendered(){registerThumbnailRenderedListener(canvasOrImg,draw);var mpImg=new qq.MegaPixImage(tempImg);mpImg.render(canvasOrImg,{maxWidth:maxSize,maxHeight:maxSize,mime:determineMimeOfFileName(url),resize:customResizeFunction});},draw.failure);}function drawOnImgFromUrlWithCssScaling(url,img,draw,maxSize){registerThumbnailRenderedListener(img,draw);qq(img).css({maxWidth:maxSize+\"px\",maxHeight:maxSize+\"px\"});img.src=url;}function drawFromUrl(url,container,options){var draw=new qq.Promise(),scale=options.scale,maxSize=scale?options.maxSize:null;if(scale&&isImg(container)){if(isCanvasSupported()){if(isCrossOrigin(url)&&!isImgCorsSupported()){drawOnImgFromUrlWithCssScaling(url,container,draw,maxSize);}else{drawOnCanvasOrImgFromUrl(url,container,draw,maxSize);}}else{drawOnImgFromUrlWithCssScaling(url,container,draw,maxSize);}}else if(isCanvas(container)){drawOnCanvasOrImgFromUrl(url,container,draw,maxSize);}else if(registerThumbnailRenderedListener(container,draw)){container.src=url;}return draw;}qq.extend(this,{generate:function generate(fileBlobOrUrl,container,options){if(qq.isString(fileBlobOrUrl)){log(\"Attempting to update thumbnail based on server response.\");return drawFromUrl(fileBlobOrUrl,container,options||{});}else{log(\"Attempting to draw client-side image preview.\");return draw(fileBlobOrUrl,container,options||{});}}});this._testing={};this._testing.isImg=isImg;this._testing.isCanvas=isCanvas;this._testing.isCrossOrigin=isCrossOrigin;this._testing.determineMimeOfFileName=determineMimeOfFileName;};qq.Exif=function(fileOrBlob,log){\"use strict\";var TAG_IDS=[274],TAG_INFO={274:{name:\"Orientation\",bytes:2}};function parseLittleEndian(hex){var result=0,pow=0;while(hex.length>0){result+=parseInt(hex.substring(0,2),16)*Math.pow(2,pow);hex=hex.substring(2,hex.length);pow+=8;}return result;}function seekToApp1(offset,promise){var theOffset=offset,thePromise=promise;if(theOffset===undefined){theOffset=2;thePromise=new qq.Promise();}qq.readBlobToHex(fileOrBlob,theOffset,4).then(function(hex){var match=/^ffe([0-9])/.exec(hex),segmentLength;if(match){if(match[1]!==\"1\"){segmentLength=parseInt(hex.slice(4,8),16);seekToApp1(theOffset+segmentLength+2,thePromise);}else{thePromise.success(theOffset);}}else{thePromise.failure(\"No EXIF header to be found!\");}});return thePromise;}function getApp1Offset(){var promise=new qq.Promise();qq.readBlobToHex(fileOrBlob,0,6).then(function(hex){if(hex.indexOf(\"ffd8\")!==0){promise.failure(\"Not a valid JPEG!\");}else{seekToApp1().then(function(offset){promise.success(offset);},function(error){promise.failure(error);});}});return promise;}function isLittleEndian(app1Start){var promise=new qq.Promise();qq.readBlobToHex(fileOrBlob,app1Start+10,2).then(function(hex){promise.success(hex===\"4949\");});return promise;}function getDirEntryCount(app1Start,littleEndian){var promise=new qq.Promise();qq.readBlobToHex(fileOrBlob,app1Start+18,2).then(function(hex){if(littleEndian){return promise.success(parseLittleEndian(hex));}else{promise.success(parseInt(hex,16));}});return promise;}function getIfd(app1Start,dirEntries){var offset=app1Start+20,bytes=dirEntries*12;return qq.readBlobToHex(fileOrBlob,offset,bytes);}function getDirEntries(ifdHex){var entries=[],offset=0;while(offset+24<=ifdHex.length){entries.push(ifdHex.slice(offset,offset+24));offset+=24;}return entries;}function getTagValues(littleEndian,dirEntries){var TAG_VAL_OFFSET=16,tagsToFind=qq.extend([],TAG_IDS),vals={};qq.each(dirEntries,function(idx,entry){var idHex=entry.slice(0,4),id=littleEndian?parseLittleEndian(idHex):parseInt(idHex,16),tagsToFindIdx=tagsToFind.indexOf(id),tagValHex,tagName,tagValLength;if(tagsToFindIdx>=0){tagName=TAG_INFO[id].name;tagValLength=TAG_INFO[id].bytes;tagValHex=entry.slice(TAG_VAL_OFFSET,TAG_VAL_OFFSET+tagValLength*2);vals[tagName]=littleEndian?parseLittleEndian(tagValHex):parseInt(tagValHex,16);tagsToFind.splice(tagsToFindIdx,1);}if(tagsToFind.length===0){return false;}});return vals;}qq.extend(this,{parse:function parse(){var parser=new qq.Promise(),onParseFailure=function onParseFailure(message){log(qq.format(\"EXIF header parse failed: '{}' \",message));parser.failure(message);};getApp1Offset().then(function(app1Offset){log(qq.format(\"Moving forward with EXIF header parsing for '{}'\",fileOrBlob.name===undefined?\"blob\":fileOrBlob.name));isLittleEndian(app1Offset).then(function(littleEndian){log(qq.format(\"EXIF Byte order is {} endian\",littleEndian?\"little\":\"big\"));getDirEntryCount(app1Offset,littleEndian).then(function(dirEntryCount){log(qq.format(\"Found {} APP1 directory entries\",dirEntryCount));getIfd(app1Offset,dirEntryCount).then(function(ifdHex){var dirEntries=getDirEntries(ifdHex),tagValues=getTagValues(littleEndian,dirEntries);log(\"Successfully parsed some EXIF tags\");parser.success(tagValues);},onParseFailure);},onParseFailure);},onParseFailure);},onParseFailure);return parser;}});this._testing={};this._testing.parseLittleEndian=parseLittleEndian;};qq.Identify=function(fileOrBlob,log){\"use strict\";function isIdentifiable(magicBytes,questionableBytes){var identifiable=false,magicBytesEntries=[].concat(magicBytes);qq.each(magicBytesEntries,function(idx,magicBytesArrayEntry){if(questionableBytes.indexOf(magicBytesArrayEntry)===0){identifiable=true;return false;}});return identifiable;}qq.extend(this,{isPreviewable:function isPreviewable(){var self=this,identifier=new qq.Promise(),previewable=false,name=fileOrBlob.name===undefined?\"blob\":fileOrBlob.name;log(qq.format(\"Attempting to determine if {} can be rendered in this browser\",name));log(\"First pass: check type attribute of blob object.\");if(this.isPreviewableSync()){log(\"Second pass: check for magic bytes in file header.\");qq.readBlobToHex(fileOrBlob,0,4).then(function(hex){qq.each(self.PREVIEWABLE_MIME_TYPES,function(mime,bytes){if(isIdentifiable(bytes,hex)){if(mime!==\"image/tiff\"||qq.supportedFeatures.tiffPreviews){previewable=true;identifier.success(mime);}return false;}});log(qq.format(\"'{}' is {} able to be rendered in this browser\",name,previewable?\"\":\"NOT\"));if(!previewable){identifier.failure();}},function(){log(\"Error reading file w/ name '\"+name+\"'.  Not able to be rendered in this browser.\");identifier.failure();});}else{identifier.failure();}return identifier;},isPreviewableSync:function isPreviewableSync(){var fileMime=fileOrBlob.type,isRecognizedImage=qq.indexOf(Object.keys(this.PREVIEWABLE_MIME_TYPES),fileMime)>=0,previewable=false,name=fileOrBlob.name===undefined?\"blob\":fileOrBlob.name;if(isRecognizedImage){if(fileMime===\"image/tiff\"){previewable=qq.supportedFeatures.tiffPreviews;}else{previewable=true;}}!previewable&&log(name+\" is not previewable in this browser per the blob's type attr\");return previewable;}});};qq.Identify.prototype.PREVIEWABLE_MIME_TYPES={\"image/jpeg\":\"ffd8ff\",\"image/gif\":\"474946\",\"image/png\":\"89504e\",\"image/bmp\":\"424d\",\"image/tiff\":[\"49492a00\",\"4d4d002a\"]};qq.ImageValidation=function(blob,log){\"use strict\";function hasNonZeroLimits(limits){var atLeastOne=false;qq.each(limits,function(limit,value){if(value>0){atLeastOne=true;return false;}});return atLeastOne;}function getWidthHeight(){var sizeDetermination=new qq.Promise();new qq.Identify(blob,log).isPreviewable().then(function(){var image=new Image(),url=window.URL&&window.URL.createObjectURL?window.URL:window.webkitURL&&window.webkitURL.createObjectURL?window.webkitURL:null;if(url){image.onerror=function(){log(\"Cannot determine dimensions for image.  May be too large.\",\"error\");sizeDetermination.failure();};image.onload=function(){sizeDetermination.success({width:this.width,height:this.height});};image.src=url.createObjectURL(blob);}else{log(\"No createObjectURL function available to generate image URL!\",\"error\");sizeDetermination.failure();}},sizeDetermination.failure);return sizeDetermination;}function getFailingLimit(limits,dimensions){var failingLimit;qq.each(limits,function(limitName,limitValue){if(limitValue>0){var limitMatcher=/(max|min)(Width|Height)/.exec(limitName),dimensionPropName=limitMatcher[2].charAt(0).toLowerCase()+limitMatcher[2].slice(1),actualValue=dimensions[dimensionPropName];switch(limitMatcher[1]){case\"min\":if(actualValue<limitValue){failingLimit=limitName;return false;}break;case\"max\":if(actualValue>limitValue){failingLimit=limitName;return false;}break;}}});return failingLimit;}this.validate=function(limits){var validationEffort=new qq.Promise();log(\"Attempting to validate image.\");if(hasNonZeroLimits(limits)){getWidthHeight().then(function(dimensions){var failingLimit=getFailingLimit(limits,dimensions);if(failingLimit){validationEffort.failure(failingLimit);}else{validationEffort.success();}},validationEffort.success);}else{validationEffort.success();}return validationEffort;};};qq.Session=function(spec){\"use strict\";var options={endpoint:null,params:{},customHeaders:{},cors:{},addFileRecord:function addFileRecord(sessionData){},log:function log(message,level){}};qq.extend(options,spec,true);function isJsonResponseValid(response){if(qq.isArray(response)){return true;}options.log(\"Session response is not an array.\",\"error\");}function handleFileItems(fileItems,success,xhrOrXdr,promise){var someItemsIgnored=false;success=success&&isJsonResponseValid(fileItems);if(success){qq.each(fileItems,function(idx,fileItem){if(fileItem.uuid==null){someItemsIgnored=true;options.log(qq.format(\"Session response item {} did not include a valid UUID - ignoring.\",idx),\"error\");}else if(fileItem.name==null){someItemsIgnored=true;options.log(qq.format(\"Session response item {} did not include a valid name - ignoring.\",idx),\"error\");}else{try{options.addFileRecord(fileItem);return true;}catch(err){someItemsIgnored=true;options.log(err.message,\"error\");}}return false;});}promise[success&&!someItemsIgnored?\"success\":\"failure\"](fileItems,xhrOrXdr);}this.refresh=function(){var refreshEffort=new qq.Promise(),refreshCompleteCallback=function refreshCompleteCallback(response,success,xhrOrXdr){handleFileItems(response,success,xhrOrXdr,refreshEffort);},requesterOptions=qq.extend({},options),requester=new qq.SessionAjaxRequester(qq.extend(requesterOptions,{onComplete:refreshCompleteCallback}));requester.queryServer();return refreshEffort;};};qq.SessionAjaxRequester=function(spec){\"use strict\";var requester,options={endpoint:null,customHeaders:{},params:{},cors:{expected:false,sendCredentials:false},onComplete:function onComplete(response,success,xhrOrXdr){},log:function log(str,level){}};qq.extend(options,spec);function onComplete(id,xhrOrXdr,isError){var response=null;if(xhrOrXdr.responseText!=null){try{response=qq.parseJson(xhrOrXdr.responseText);}catch(err){options.log(\"Problem parsing session response: \"+err.message,\"error\");isError=true;}}options.onComplete(response,!isError,xhrOrXdr);}requester=qq.extend(this,new qq.AjaxRequester({acceptHeader:\"application/json\",validMethods:[\"GET\"],method:\"GET\",endpointStore:{get:function get(){return options.endpoint;}},customHeaders:options.customHeaders,log:options.log,onComplete:onComplete,cors:options.cors}));qq.extend(this,{queryServer:function queryServer(){var params=qq.extend({},options.params);options.log(\"Session query request.\");requester.initTransport(\"sessionRefresh\").withParams(params).withCacheBuster().send();}});};qq.Scaler=function(spec,log){\"use strict\";var self=this,customResizeFunction=spec.customResizer,includeOriginal=spec.sendOriginal,orient=spec.orient,defaultType=spec.defaultType,defaultQuality=spec.defaultQuality/100,failedToScaleText=spec.failureText,includeExif=spec.includeExif,sizes=this._getSortedSizes(spec.sizes);qq.extend(this,{enabled:qq.supportedFeatures.scaling&&sizes.length>0,getFileRecords:function getFileRecords(originalFileUuid,originalFileName,originalBlobOrBlobData){var self=this,records=[],originalBlob=originalBlobOrBlobData.blob?originalBlobOrBlobData.blob:originalBlobOrBlobData,identifier=new qq.Identify(originalBlob,log);if(identifier.isPreviewableSync()){qq.each(sizes,function(idx,sizeRecord){var outputType=self._determineOutputType({defaultType:defaultType,requestedType:sizeRecord.type,refType:originalBlob.type});records.push({uuid:qq.getUniqueId(),name:self._getName(originalFileName,{name:sizeRecord.name,type:outputType,refType:originalBlob.type}),blob:new qq.BlobProxy(originalBlob,qq.bind(self._generateScaledImage,self,{customResizeFunction:customResizeFunction,maxSize:sizeRecord.maxSize,orient:orient,type:outputType,quality:defaultQuality,failedText:failedToScaleText,includeExif:includeExif,log:log}))});});records.push({uuid:originalFileUuid,name:originalFileName,size:originalBlob.size,blob:includeOriginal?originalBlob:null});}else{records.push({uuid:originalFileUuid,name:originalFileName,size:originalBlob.size,blob:originalBlob});}return records;},handleNewFile:function handleNewFile(file,name,uuid,size,fileList,batchId,uuidParamName,api){var self=this,buttonId=file.qqButtonId||file.blob&&file.blob.qqButtonId,scaledIds=[],originalId=null,addFileToHandler=api.addFileToHandler,uploadData=api.uploadData,paramsStore=api.paramsStore,proxyGroupId=qq.getUniqueId();qq.each(self.getFileRecords(uuid,name,file),function(idx,record){var blobSize=record.size,id;if(record.blob instanceof qq.BlobProxy){blobSize=-1;}id=uploadData.addFile({uuid:record.uuid,name:record.name,size:blobSize,batchId:batchId,proxyGroupId:proxyGroupId});if(record.blob instanceof qq.BlobProxy){scaledIds.push(id);}else{originalId=id;}if(record.blob){addFileToHandler(id,record.blob);fileList.push({id:id,file:record.blob});}else{uploadData.setStatus(id,qq.status.REJECTED);}});if(originalId!==null){qq.each(scaledIds,function(idx,scaledId){var params={qqparentuuid:uploadData.retrieve({id:originalId}).uuid,qqparentsize:uploadData.retrieve({id:originalId}).size};params[uuidParamName]=uploadData.retrieve({id:scaledId}).uuid;uploadData.setParentId(scaledId,originalId);paramsStore.addReadOnly(scaledId,params);});if(scaledIds.length){(function(){var param={};param[uuidParamName]=uploadData.retrieve({id:originalId}).uuid;paramsStore.addReadOnly(originalId,param);})();}}}});};qq.extend(qq.Scaler.prototype,{scaleImage:function scaleImage(id,specs,api){\"use strict\";if(!qq.supportedFeatures.scaling){throw new qq.Error(\"Scaling is not supported in this browser!\");}var scalingEffort=new qq.Promise(),log=api.log,file=api.getFile(id),uploadData=api.uploadData.retrieve({id:id}),name=uploadData&&uploadData.name,uuid=uploadData&&uploadData.uuid,scalingOptions={customResizer:specs.customResizer,sendOriginal:false,orient:specs.orient,defaultType:specs.type||null,defaultQuality:specs.quality,failedToScaleText:\"Unable to scale\",sizes:[{name:\"\",maxSize:specs.maxSize}]},scaler=new qq.Scaler(scalingOptions,log);if(!qq.Scaler||!qq.supportedFeatures.imagePreviews||!file){scalingEffort.failure();log(\"Could not generate requested scaled image for \"+id+\".  \"+\"Scaling is either not possible in this browser, or the file could not be located.\",\"error\");}else{qq.bind(function(){var record=scaler.getFileRecords(uuid,name,file)[0];if(record&&record.blob instanceof qq.BlobProxy){record.blob.create().then(scalingEffort.success,scalingEffort.failure);}else{log(id+\" is not a scalable image!\",\"error\");scalingEffort.failure();}},this)();}return scalingEffort;},_determineOutputType:function _determineOutputType(spec){\"use strict\";var requestedType=spec.requestedType,defaultType=spec.defaultType,referenceType=spec.refType;if(!defaultType&&!requestedType){if(referenceType!==\"image/jpeg\"){return\"image/png\";}return referenceType;}if(!requestedType){return defaultType;}if(qq.indexOf(Object.keys(qq.Identify.prototype.PREVIEWABLE_MIME_TYPES),requestedType)>=0){if(requestedType===\"image/tiff\"){return qq.supportedFeatures.tiffPreviews?requestedType:defaultType;}return requestedType;}return defaultType;},_getName:function _getName(originalName,scaledVersionProperties){\"use strict\";var startOfExt=originalName.lastIndexOf(\".\"),versionType=scaledVersionProperties.type||\"image/png\",referenceType=scaledVersionProperties.refType,scaledName=\"\",scaledExt=qq.getExtension(originalName),nameAppendage=\"\";if(scaledVersionProperties.name&&scaledVersionProperties.name.trim().length){nameAppendage=\" (\"+scaledVersionProperties.name+\")\";}if(startOfExt>=0){scaledName=originalName.substr(0,startOfExt);if(referenceType!==versionType){scaledExt=versionType.split(\"/\")[1];}scaledName+=nameAppendage+\".\"+scaledExt;}else{scaledName=originalName+nameAppendage;}return scaledName;},_getSortedSizes:function _getSortedSizes(sizes){\"use strict\";sizes=qq.extend([],sizes);return sizes.sort(function(a,b){if(a.maxSize>b.maxSize){return 1;}if(a.maxSize<b.maxSize){return-1;}return 0;});},_generateScaledImage:function _generateScaledImage(spec,sourceFile){\"use strict\";var self=this,customResizeFunction=spec.customResizeFunction,log=spec.log,maxSize=spec.maxSize,orient=spec.orient,type=spec.type,quality=spec.quality,failedText=spec.failedText,includeExif=spec.includeExif&&sourceFile.type===\"image/jpeg\"&&type===\"image/jpeg\",scalingEffort=new qq.Promise(),imageGenerator=new qq.ImageGenerator(log),canvas=document.createElement(\"canvas\");log(\"Attempting to generate scaled version for \"+sourceFile.name);imageGenerator.generate(sourceFile,canvas,{maxSize:maxSize,orient:orient,customResizeFunction:customResizeFunction}).then(function(){var scaledImageDataUri=canvas.toDataURL(type,quality),signalSuccess=function signalSuccess(){log(\"Success generating scaled version for \"+sourceFile.name);var blob=qq.dataUriToBlob(scaledImageDataUri);scalingEffort.success(blob);};if(includeExif){self._insertExifHeader(sourceFile,scaledImageDataUri,log).then(function(scaledImageDataUriWithExif){scaledImageDataUri=scaledImageDataUriWithExif;signalSuccess();},function(){log(\"Problem inserting EXIF header into scaled image.  Using scaled image w/out EXIF data.\",\"error\");signalSuccess();});}else{signalSuccess();}},function(){log(\"Failed attempt to generate scaled version for \"+sourceFile.name,\"error\");scalingEffort.failure(failedText);});return scalingEffort;},_insertExifHeader:function _insertExifHeader(originalImage,scaledImageDataUri,log){\"use strict\";var reader=new FileReader(),insertionEffort=new qq.Promise(),originalImageDataUri=\"\";reader.onload=function(){originalImageDataUri=reader.result;insertionEffort.success(qq.ExifRestorer.restore(originalImageDataUri,scaledImageDataUri));};reader.onerror=function(){log(\"Problem reading \"+originalImage.name+\" during attempt to transfer EXIF data to scaled version.\",\"error\");insertionEffort.failure();};reader.readAsDataURL(originalImage);return insertionEffort;},_dataUriToBlob:function _dataUriToBlob(dataUri){\"use strict\";var byteString,mimeString,arrayBuffer,intArray;if(dataUri.split(\",\")[0].indexOf(\"base64\")>=0){byteString=atob(dataUri.split(\",\")[1]);}else{byteString=decodeURI(dataUri.split(\",\")[1]);}mimeString=dataUri.split(\",\")[0].split(\":\")[1].split(\";\")[0];arrayBuffer=new ArrayBuffer(byteString.length);intArray=new Uint8Array(arrayBuffer);qq.each(byteString,function(idx,character){intArray[idx]=character.charCodeAt(0);});return this._createBlob(arrayBuffer,mimeString);},_createBlob:function _createBlob(data,mime){\"use strict\";var BlobBuilder=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,blobBuilder=BlobBuilder&&new BlobBuilder();if(blobBuilder){blobBuilder.append(data);return blobBuilder.getBlob(mime);}else{return new Blob([data],{type:mime});}}});qq.ExifRestorer=function(){var ExifRestorer={};ExifRestorer.KEY_STR=\"ABCDEFGHIJKLMNOP\"+\"QRSTUVWXYZabcdef\"+\"ghijklmnopqrstuv\"+\"wxyz0123456789+/\"+\"=\";ExifRestorer.encode64=function(input){var output=\"\",chr1,chr2,chr3=\"\",enc1,enc2,enc3,enc4=\"\",i=0;do{chr1=input[i++];chr2=input[i++];chr3=input[i++];enc1=chr1>>2;enc2=(chr1&3)<<4|chr2>>4;enc3=(chr2&15)<<2|chr3>>6;enc4=chr3&63;if(isNaN(chr2)){enc3=enc4=64;}else if(isNaN(chr3)){enc4=64;}output=output+this.KEY_STR.charAt(enc1)+this.KEY_STR.charAt(enc2)+this.KEY_STR.charAt(enc3)+this.KEY_STR.charAt(enc4);chr1=chr2=chr3=\"\";enc1=enc2=enc3=enc4=\"\";}while(i<input.length);return output;};ExifRestorer.restore=function(origFileBase64,resizedFileBase64){var expectedBase64Header=\"data:image/jpeg;base64,\";if(!origFileBase64.match(expectedBase64Header)){return resizedFileBase64;}var rawImage=this.decode64(origFileBase64.replace(expectedBase64Header,\"\"));var segments=this.slice2Segments(rawImage);var image=this.exifManipulation(resizedFileBase64,segments);return expectedBase64Header+this.encode64(image);};ExifRestorer.exifManipulation=function(resizedFileBase64,segments){var exifArray=this.getExifArray(segments),newImageArray=this.insertExif(resizedFileBase64,exifArray),aBuffer=new Uint8Array(newImageArray);return aBuffer;};ExifRestorer.getExifArray=function(segments){var seg;for(var x=0;x<segments.length;x++){seg=segments[x];if(seg[0]==255&seg[1]==225){return seg;}}return[];};ExifRestorer.insertExif=function(resizedFileBase64,exifArray){var imageData=resizedFileBase64.replace(\"data:image/jpeg;base64,\",\"\"),buf=this.decode64(imageData),separatePoint=buf.indexOf(255,3),mae=buf.slice(0,separatePoint),ato=buf.slice(separatePoint),array=mae;array=array.concat(exifArray);array=array.concat(ato);return array;};ExifRestorer.slice2Segments=function(rawImageArray){var head=0,segments=[];while(1){if(rawImageArray[head]==255&rawImageArray[head+1]==218){break;}if(rawImageArray[head]==255&rawImageArray[head+1]==216){head+=2;}else{var length=rawImageArray[head+2]*256+rawImageArray[head+3],endPoint=head+length+2,seg=rawImageArray.slice(head,endPoint);segments.push(seg);head=endPoint;}if(head>rawImageArray.length){break;}}return segments;};ExifRestorer.decode64=function(input){var output=\"\",chr1,chr2,chr3=\"\",enc1,enc2,enc3,enc4=\"\",i=0,buf=[];var base64test=/[^A-Za-z0-9\\+\\/\\=]/g;if(base64test.exec(input)){throw new Error(\"There were invalid base64 characters in the input text.  \"+\"Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\");}input=input.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");do{enc1=this.KEY_STR.indexOf(input.charAt(i++));enc2=this.KEY_STR.indexOf(input.charAt(i++));enc3=this.KEY_STR.indexOf(input.charAt(i++));enc4=this.KEY_STR.indexOf(input.charAt(i++));chr1=enc1<<2|enc2>>4;chr2=(enc2&15)<<4|enc3>>2;chr3=(enc3&3)<<6|enc4;buf.push(chr1);if(enc3!=64){buf.push(chr2);}if(enc4!=64){buf.push(chr3);}chr1=chr2=chr3=\"\";enc1=enc2=enc3=enc4=\"\";}while(i<input.length);return buf;};return ExifRestorer;}();qq.TotalProgress=function(callback,getSize){\"use strict\";var perFileProgress={},totalLoaded=0,totalSize=0,lastLoadedSent=-1,lastTotalSent=-1,callbackProxy=function callbackProxy(loaded,total){if(loaded!==lastLoadedSent||total!==lastTotalSent){callback(loaded,total);}lastLoadedSent=loaded;lastTotalSent=total;},noRetryableFiles=function noRetryableFiles(failed,retryable){var none=true;qq.each(failed,function(idx,failedId){if(qq.indexOf(retryable,failedId)>=0){none=false;return false;}});return none;},onCancel=function onCancel(id){updateTotalProgress(id,-1,-1);delete perFileProgress[id];},onAllComplete=function onAllComplete(successful,failed,retryable){if(failed.length===0||noRetryableFiles(failed,retryable)){callbackProxy(totalSize,totalSize);this.reset();}},onNew=function onNew(id){var size=getSize(id);if(size>0){updateTotalProgress(id,0,size);perFileProgress[id]={loaded:0,total:size};}},updateTotalProgress=function updateTotalProgress(id,newLoaded,newTotal){var oldLoaded=perFileProgress[id]?perFileProgress[id].loaded:0,oldTotal=perFileProgress[id]?perFileProgress[id].total:0;if(newLoaded===-1&&newTotal===-1){totalLoaded-=oldLoaded;totalSize-=oldTotal;}else{if(newLoaded){totalLoaded+=newLoaded-oldLoaded;}if(newTotal){totalSize+=newTotal-oldTotal;}}callbackProxy(totalLoaded,totalSize);};qq.extend(this,{onAllComplete:onAllComplete,onStatusChange:function onStatusChange(id,oldStatus,newStatus){if(newStatus===qq.status.CANCELED||newStatus===qq.status.REJECTED){onCancel(id);}else if(newStatus===qq.status.SUBMITTING){onNew(id);}},onIndividualProgress:function onIndividualProgress(id,loaded,total){updateTotalProgress(id,loaded,total);perFileProgress[id]={loaded:loaded,total:total};},onNewSize:function onNewSize(id){onNew(id);},reset:function reset(){perFileProgress={};totalLoaded=0;totalSize=0;}});};qq.PasteSupport=function(o){\"use strict\";var options,detachPasteHandler;options={targetElement:null,callbacks:{log:function log(message,level){},pasteReceived:function pasteReceived(blob){}}};function isImage(item){return item.type&&item.type.indexOf(\"image/\")===0;}function registerPasteHandler(){detachPasteHandler=qq(options.targetElement).attach(\"paste\",function(event){var clipboardData=event.clipboardData;if(clipboardData){qq.each(clipboardData.items,function(idx,item){if(isImage(item)){var blob=item.getAsFile();options.callbacks.pasteReceived(blob);}});}});}function unregisterPasteHandler(){if(detachPasteHandler){detachPasteHandler();}}qq.extend(options,o);registerPasteHandler();qq.extend(this,{reset:function reset(){unregisterPasteHandler();}});};qq.FormSupport=function(options,startUpload,log){\"use strict\";var self=this,interceptSubmit=options.interceptSubmit,formEl=options.element,autoUpload=options.autoUpload;qq.extend(this,{newEndpoint:null,newAutoUpload:autoUpload,attachedToForm:false,getFormInputsAsObject:function getFormInputsAsObject(){if(formEl==null){return null;}return self._form2Obj(formEl);}});function determineNewEndpoint(formEl){if(formEl.getAttribute(\"action\")){self.newEndpoint=formEl.getAttribute(\"action\");}}function validateForm(formEl,nativeSubmit){if(formEl.checkValidity&&!formEl.checkValidity()){log(\"Form did not pass validation checks - will not upload.\",\"error\");nativeSubmit();}else{return true;}}function maybeUploadOnSubmit(formEl){var nativeSubmit=formEl.submit;qq(formEl).attach(\"submit\",function(event){event=event||window.event;if(event.preventDefault){event.preventDefault();}else{event.returnValue=false;}validateForm(formEl,nativeSubmit)&&startUpload();});formEl.submit=function(){validateForm(formEl,nativeSubmit)&&startUpload();};}function determineFormEl(formEl){if(formEl){if(qq.isString(formEl)){formEl=document.getElementById(formEl);}if(formEl){log(\"Attaching to form element.\");determineNewEndpoint(formEl);interceptSubmit&&maybeUploadOnSubmit(formEl);}}return formEl;}formEl=determineFormEl(formEl);this.attachedToForm=!!formEl;};qq.extend(qq.FormSupport.prototype,{_form2Obj:function _form2Obj(form){\"use strict\";var obj={},notIrrelevantType=function notIrrelevantType(type){var irrelevantTypes=[\"button\",\"image\",\"reset\",\"submit\"];return qq.indexOf(irrelevantTypes,type.toLowerCase())<0;},radioOrCheckbox=function radioOrCheckbox(type){return qq.indexOf([\"checkbox\",\"radio\"],type.toLowerCase())>=0;},ignoreValue=function ignoreValue(el){if(radioOrCheckbox(el.type)&&!el.checked){return true;}return el.disabled&&el.type.toLowerCase()!==\"hidden\";},selectValue=function selectValue(select){var value=null;qq.each(qq(select).children(),function(idx,child){if(child.tagName.toLowerCase()===\"option\"&&child.selected){value=child.value;return false;}});return value;};qq.each(form.elements,function(idx,el){if((qq.isInput(el,true)||el.tagName.toLowerCase()===\"textarea\")&&notIrrelevantType(el.type)&&!ignoreValue(el)){obj[el.name]=el.value;}else if(el.tagName.toLowerCase()===\"select\"&&!ignoreValue(el)){var value=selectValue(el);if(value!==null){obj[el.name]=value;}}});return obj;}});qq.traditional=qq.traditional||{};qq.traditional.FormUploadHandler=function(options,proxy){\"use strict\";var handler=this,getName=proxy.getName,getUuid=proxy.getUuid,log=proxy.log;function getIframeContentJson(id,iframe){var response,doc,innerHtml;try{doc=iframe.contentDocument||iframe.contentWindow.document;innerHtml=doc.body.innerHTML;log(\"converting iframe's innerHTML to JSON\");log(\"innerHTML = \"+innerHtml);if(innerHtml&&innerHtml.match(/^<pre/i)){innerHtml=doc.body.firstChild.firstChild.nodeValue;}response=handler._parseJsonResponse(innerHtml);}catch(error){log(\"Error when attempting to parse form upload response (\"+error.message+\")\",\"error\");response={success:false};}return response;}function createForm(id,iframe){var params=options.paramsStore.get(id),method=options.method.toLowerCase()===\"get\"?\"GET\":\"POST\",endpoint=options.endpointStore.get(id),name=getName(id);params[options.uuidName]=getUuid(id);params[options.filenameParam]=name;return handler._initFormForUpload({method:method,endpoint:endpoint,params:params,paramsInBody:options.paramsInBody,targetName:iframe.name});}this.uploadFile=function(id){var input=handler.getInput(id),iframe=handler._createIframe(id),promise=new qq.Promise(),form;form=createForm(id,iframe);form.appendChild(input);handler._attachLoadEvent(iframe,function(responseFromMessage){log(\"iframe loaded\");var response=responseFromMessage?responseFromMessage:getIframeContentJson(id,iframe);handler._detachLoadEvent(id);if(!options.cors.expected){qq(iframe).remove();}if(response.success){promise.success(response);}else{promise.failure(response);}});log(\"Sending upload request for \"+id);form.submit();qq(form).remove();return promise;};qq.extend(this,new qq.FormUploadHandler({options:{isCors:options.cors.expected,inputName:options.inputName},proxy:{onCancel:options.onCancel,getName:getName,getUuid:getUuid,log:log}}));};qq.traditional=qq.traditional||{};qq.traditional.XhrUploadHandler=function(spec,proxy){\"use strict\";var handler=this,getName=proxy.getName,getSize=proxy.getSize,getUuid=proxy.getUuid,log=proxy.log,multipart=spec.forceMultipart||spec.paramsInBody,addChunkingSpecificParams=function addChunkingSpecificParams(id,params,chunkData){var size=getSize(id),name=getName(id);if(!spec.omitDefaultParams){params[spec.chunking.paramNames.partIndex]=chunkData.part;params[spec.chunking.paramNames.partByteOffset]=chunkData.start;params[spec.chunking.paramNames.chunkSize]=chunkData.size;params[spec.chunking.paramNames.totalParts]=chunkData.count;params[spec.totalFileSizeName]=size;}if(multipart&&!spec.omitDefaultParams){params[spec.filenameParam]=name;}},allChunksDoneRequester=new qq.traditional.AllChunksDoneAjaxRequester({cors:spec.cors,endpoint:spec.chunking.success.endpoint,headers:spec.chunking.success.headers,jsonPayload:spec.chunking.success.jsonPayload,log:log,method:spec.chunking.success.method,params:spec.chunking.success.params}),createReadyStateChangedHandler=function createReadyStateChangedHandler(id,xhr){var promise=new qq.Promise();xhr.onreadystatechange=function(){if(xhr.readyState===4){var result=onUploadOrChunkComplete(id,xhr);if(result.success){promise.success(result.response,xhr);}else{promise.failure(result.response,xhr);}}};return promise;},getChunksCompleteParams=function getChunksCompleteParams(id){var params=spec.paramsStore.get(id),name=getName(id),size=getSize(id);params[spec.uuidName]=getUuid(id);params[spec.filenameParam]=name;params[spec.totalFileSizeName]=size;params[spec.chunking.paramNames.totalParts]=handler._getTotalChunks(id);return params;},isErrorUploadResponse=function isErrorUploadResponse(xhr,response){return qq.indexOf([200,201,202,203,204],xhr.status)<0||spec.requireSuccessJson&&!response.success||response.reset;},onUploadOrChunkComplete=function onUploadOrChunkComplete(id,xhr){var response;log(\"xhr - server response received for \"+id);log(\"responseText = \"+xhr.responseText);response=parseResponse(true,xhr);return{success:!isErrorUploadResponse(xhr,response),response:response};},parseResponse=function parseResponse(upload,xhr){var response={};try{log(qq.format(\"Received response status {} with body: {}\",xhr.status,xhr.responseText));response=qq.parseJson(xhr.responseText);}catch(error){upload&&spec.requireSuccessJson&&log(\"Error when attempting to parse xhr response text (\"+error.message+\")\",\"error\");}return response;},sendChunksCompleteRequest=function sendChunksCompleteRequest(id){var promise=new qq.Promise();allChunksDoneRequester.complete(id,handler._createXhr(id),getChunksCompleteParams(id),spec.customHeaders.get(id)).then(function(xhr){promise.success(parseResponse(false,xhr),xhr);},function(xhr){promise.failure(parseResponse(false,xhr),xhr);});return promise;},setParamsAndGetEntityToSend=function setParamsAndGetEntityToSend(entityToSendParams){var fileOrBlob=entityToSendParams.fileOrBlob;var id=entityToSendParams.id;var xhr=entityToSendParams.xhr;var xhrOverrides=entityToSendParams.xhrOverrides||{};var customParams=entityToSendParams.customParams||{};var defaultParams=entityToSendParams.params||{};var xhrOverrideParams=xhrOverrides.params||{};var params;var formData=multipart?new FormData():null,method=xhrOverrides.method||spec.method,endpoint=xhrOverrides.endpoint||spec.endpointStore.get(id),name=getName(id),size=getSize(id);if(spec.omitDefaultParams){params=qq.extend({},customParams);qq.extend(params,xhrOverrideParams);}else{params=qq.extend({},customParams);qq.extend(params,xhrOverrideParams);qq.extend(params,defaultParams);params[spec.uuidName]=getUuid(id);params[spec.filenameParam]=name;if(multipart){params[spec.totalFileSizeName]=size;}else if(!spec.paramsInBody){params[spec.inputName]=name;}}if(!spec.paramsInBody){endpoint=qq.obj2url(params,endpoint);}xhr.open(method,endpoint,true);if(spec.cors.expected&&spec.cors.sendCredentials){xhr.withCredentials=true;}if(multipart){if(spec.paramsInBody){qq.obj2FormData(params,formData);}formData.append(spec.inputName,fileOrBlob);return formData;}return fileOrBlob;},setUploadHeaders=function setUploadHeaders(headersOptions){var headerOverrides=headersOptions.headerOverrides;var id=headersOptions.id;var xhr=headersOptions.xhr;if(headerOverrides){qq.each(headerOverrides,function(headerName,headerValue){xhr.setRequestHeader(headerName,headerValue);});}else{var extraHeaders=spec.customHeaders.get(id),fileOrBlob=handler.getFile(id);xhr.setRequestHeader(\"Accept\",\"application/json\");xhr.setRequestHeader(\"X-Requested-With\",\"XMLHttpRequest\");xhr.setRequestHeader(\"Cache-Control\",\"no-cache\");if(!multipart){xhr.setRequestHeader(\"Content-Type\",\"application/octet-stream\");xhr.setRequestHeader(\"X-Mime-Type\",fileOrBlob.type);}qq.each(extraHeaders,function(name,val){xhr.setRequestHeader(name,val);});}};qq.extend(this,{uploadChunk:function uploadChunk(uploadChunkParams){var id=uploadChunkParams.id;var chunkIdx=uploadChunkParams.chunkIdx;var overrides=uploadChunkParams.overrides||{};var resuming=uploadChunkParams.resuming;var chunkData=handler._getChunkData(id,chunkIdx),xhr=handler._createXhr(id,chunkIdx),promise,toSend,customParams,params={};promise=createReadyStateChangedHandler(id,xhr);handler._registerProgressHandler(id,chunkIdx,chunkData.size);customParams=spec.paramsStore.get(id);addChunkingSpecificParams(id,params,chunkData);if(resuming){params[spec.resume.paramNames.resuming]=true;}toSend=setParamsAndGetEntityToSend({fileOrBlob:chunkData.blob,id:id,customParams:customParams,params:params,xhr:xhr,xhrOverrides:overrides});setUploadHeaders({headerOverrides:overrides.headers,id:id,xhr:xhr});xhr.send(toSend);return promise;},uploadFile:function uploadFile(id){var fileOrBlob=handler.getFile(id),promise,xhr,customParams,toSend;xhr=handler._createXhr(id);handler._registerProgressHandler(id);promise=createReadyStateChangedHandler(id,xhr);customParams=spec.paramsStore.get(id);toSend=setParamsAndGetEntityToSend({fileOrBlob:fileOrBlob,id:id,customParams:customParams,xhr:xhr});setUploadHeaders({id:id,xhr:xhr});xhr.send(toSend);return promise;}});qq.extend(this,new qq.XhrUploadHandler({options:qq.extend({namespace:\"traditional\"},spec),proxy:qq.extend({getEndpoint:spec.endpointStore.get},proxy)}));qq.override(this,function(super_){return{finalizeChunks:function finalizeChunks(id){proxy.onFinalizing(id);if(spec.chunking.success.endpoint){return sendChunksCompleteRequest(id);}else{return super_.finalizeChunks(id,qq.bind(parseResponse,this,true));}}};});};qq.traditional.AllChunksDoneAjaxRequester=function(o){\"use strict\";var requester,options={cors:{allowXdr:false,expected:false,sendCredentials:false},endpoint:null,log:function log(str,level){},method:\"POST\"},promises={},endpointHandler={get:function get(id){if(qq.isFunction(options.endpoint)){return options.endpoint(id);}return options.endpoint;}};qq.extend(options,o);requester=qq.extend(this,new qq.AjaxRequester({acceptHeader:\"application/json\",contentType:options.jsonPayload?\"application/json\":\"application/x-www-form-urlencoded\",validMethods:[options.method],method:options.method,endpointStore:endpointHandler,allowXRequestedWithAndCacheControl:false,cors:options.cors,log:options.log,onComplete:function onComplete(id,xhr,isError){var promise=promises[id];delete promises[id];if(isError){promise.failure(xhr);}else{promise.success(xhr);}}}));qq.extend(this,{complete:function complete(id,xhr,params,headers){var promise=new qq.Promise();options.log(\"Submitting All Chunks Done request for \"+id);promises[id]=promise;requester.initTransport(id).withParams(options.params(id)||params).withHeaders(options.headers(id)||headers).send(xhr);return promise;}});};})(window);//# sourceMappingURL=fine-uploader.core.js.map\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// vendor/fine-uploader-wrappers.chunk.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _baseWrapper = require('./base-wrapper');\n\nvar _baseWrapper2 = _interopRequireDefault(_baseWrapper);\n\nvar _core = require('fine-uploader/lib/core');\n\nvar _core2 = _interopRequireDefault(_core);\n\nvar _callbackNames = require('./callback-names');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar FineUploaderTraditional = function (_BaseWrapper) {\n    _inherits(FineUploaderTraditional, _BaseWrapper);\n\n    function FineUploaderTraditional(_ref) {\n        var options = _ref.options;\n\n        _classCallCheck(this, FineUploaderTraditional);\n\n        return _possibleConstructorReturn(this, (FineUploaderTraditional.__proto__ || Object.getPrototypeOf(FineUploaderTraditional)).call(this, {\n            callbackNames: _callbackNames.traditional,\n            options: options,\n            qq: _core2.default,\n            type: 'traditional'\n        }));\n    }\n\n    return FineUploaderTraditional;\n}(_baseWrapper2.default);\n\nexports.default = FineUploaderTraditional;\n\n\n// WEBPACK FOOTER //\n// /Users/dmp/Code/panneau/js/fields/core/node_modules/fine-uploader-wrappers/traditional.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.s3 = exports.traditional = exports.thenable = undefined;\n\nvar _objectAssign = require('object-assign');\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar thenable = exports.thenable = ['onCancel', 'onPasteReceived', 'onSubmit', 'onSubmitDelete', 'onUpload', 'onUploadChunk', 'onValidate', 'onValidateBatch'];\n\nvar traditional = exports.traditional = ['onAutoRetry', 'onCancel', 'onComplete', 'onAllComplete', 'onDelete', 'onDeleteComplete', 'onError', 'onManualRetry', 'onPasteReceived', 'onProgress', 'onResume', 'onSessionRequestComplete', 'onStatusChange', 'onSubmit', 'onSubmitDelete', 'onSubmitted', 'onTotalProgress', 'onUpload', 'onUploadChunk', 'onUploadChunkSuccess', 'onValidate', 'onValidateBatch'];\n\nvar s3 = exports.s3 = (0, _objectAssign2.default)([], traditional, ['onCredentialsExpired']);\n\n\n// WEBPACK FOOTER //\n// /Users/dmp/Code/panneau/js/fields/core/node_modules/fine-uploader-wrappers/callback-names.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _objectAssign = require('object-assign');\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nvar _callbackProxy = require('./callback-proxy');\n\nvar _callbackProxy2 = _interopRequireDefault(_callbackProxy);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar callbackProxies = new WeakMap();\n\nvar BaseWrapper = function () {\n    function BaseWrapper(_ref) {\n        var callbackNames = _ref.callbackNames,\n            options = _ref.options,\n            qq = _ref.qq,\n            type = _ref.type;\n\n        _classCallCheck(this, BaseWrapper);\n\n        var callbacks = options.callbacks || {};\n\n        var optionsSansCallbacks = (0, _objectAssign2.default)({}, options);\n        delete optionsSansCallbacks.callbacks;\n        this.options = optionsSansCallbacks;\n\n        callbackProxies.set(this, createCallbackProxies(callbackNames));\n\n        registerOptionsCallbacks({ callbacks: callbacks, callbackProxies: callbackProxies.get(this) });\n\n        this.methods = createFineUploader({\n            callbackProxies: callbackProxies.get(this),\n            options: optionsSansCallbacks,\n            qq: qq,\n            type: type\n        });\n\n        this.qq = qq;\n    }\n\n    _createClass(BaseWrapper, [{\n        key: 'off',\n        value: function off(name, callback) {\n            var normalizedName = normalizeCallbackName(name);\n            var proxy = callbackProxies.get(this)[normalizedName];\n\n            proxy.remove(callback);\n        }\n    }, {\n        key: 'on',\n        value: function on(name, callback) {\n            var normalizedName = normalizeCallbackName(name);\n            var proxy = callbackProxies.get(this)[normalizedName];\n\n            proxy.add(callback);\n        }\n    }]);\n\n    return BaseWrapper;\n}();\n\nexports.default = BaseWrapper;\n\n\nvar createCallbackProxies = function createCallbackProxies(names) {\n    var proxyMap = {};\n\n    names.forEach(function (callbackName) {\n        proxyMap[callbackName] = new _callbackProxy2.default(callbackName);\n    });\n\n    return proxyMap;\n};\n\nvar createFineUploader = function createFineUploader(_ref2) {\n    var callbackProxies = _ref2.callbackProxies,\n        options = _ref2.options,\n        qq = _ref2.qq,\n        type = _ref2.type;\n\n    var optionsCopy = (0, _objectAssign2.default)({ callbacks: {} }, options);\n\n    Object.keys(callbackProxies).forEach(function (callbackName) {\n        var proxy = callbackProxies[callbackName];\n\n        optionsCopy.callbacks[callbackName] = proxy.proxyFunction;\n    });\n\n    if (type === 'traditional') {\n        return new qq.FineUploaderBasic(optionsCopy);\n    } else {\n        return new qq[type].FineUploaderBasic(optionsCopy);\n    }\n};\n\nvar normalizeCallbackName = function normalizeCallbackName(name) {\n    if (!name.match(/^on[A-Z]/)) {\n        return 'on' + name[0].toUpperCase() + name.slice(1);\n    }\n\n    return name;\n};\n\nvar registerOptionsCallbacks = function registerOptionsCallbacks(_ref3) {\n    var callbacks = _ref3.callbacks,\n        callbackProxies = _ref3.callbackProxies;\n\n    Object.keys(callbacks).forEach(function (callbackName) {\n        var callbackProxy = callbackProxies[callbackName];\n\n        callbackProxy.add(callbacks[callbackName]);\n    });\n};\n\n\n// WEBPACK FOOTER //\n// /Users/dmp/Code/panneau/js/fields/core/node_modules/fine-uploader-wrappers/base-wrapper.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _objectAssign = require('object-assign');\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nvar _callbackNames = require('./callback-names');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar privateData = new WeakMap();\nvar callbacks = new WeakMap();\n\nvar CallbackProxy = function () {\n    function CallbackProxy(name) {\n        _classCallCheck(this, CallbackProxy);\n\n        callbacks.set(this, []);\n\n        privateData.set(this, {\n            name: name,\n            proxyFunction: getProxyFunction.call(this, { name: name })\n        });\n    }\n\n    _createClass(CallbackProxy, [{\n        key: 'add',\n        value: function add(callback) {\n            callbacks.get(this).push(callback);\n        }\n    }, {\n        key: 'remove',\n        value: function remove(callback) {\n            var index = callbacks.get(this).indexOf(callback);\n            if (index >= 0) {\n                callbacks.get(this).splice(index, 1);\n            }\n        }\n    }, {\n        key: 'name',\n        get: function get() {\n            return privateData.get(this).name;\n        }\n    }, {\n        key: 'proxyFunction',\n        get: function get() {\n            return privateData.get(this).proxyFunction;\n        }\n    }]);\n\n    return CallbackProxy;\n}();\n\nexports.default = CallbackProxy;\n\n\nvar getProxyFunction = function getProxyFunction(_ref) {\n    var name = _ref.name;\n\n    var proxyClassContext = this;\n\n    return function () {\n        for (var _len = arguments.length, originalCallbackArguments = Array(_len), _key = 0; _key < _len; _key++) {\n            originalCallbackArguments[_key] = arguments[_key];\n        }\n\n        var isThenable = _callbackNames.thenable.indexOf(name) >= 0;\n        var registeredCallbacks = callbacks.get(proxyClassContext);\n        var callbackReturnValue = void 0;\n\n        if (isThenable) {\n            callbackReturnValue = executeThenableCallbacks({ registeredCallbacks: registeredCallbacks, originalCallbackArguments: originalCallbackArguments });\n        } else {\n            (0, _objectAssign2.default)([], registeredCallbacks).every(function (callback) {\n                var returnValue = callback.apply(null, originalCallbackArguments);\n\n                callbackReturnValue = returnValue;\n\n                return returnValue !== false;\n            });\n        }\n\n        return callbackReturnValue;\n    };\n};\n\nvar executeThenableCallbacks = function executeThenableCallbacks(_ref2) {\n    var registeredCallbacks = _ref2.registeredCallbacks,\n        originalCallbackArguments = _ref2.originalCallbackArguments;\n\n    if (registeredCallbacks.length) {\n        return executeThenableCallback({\n            registeredCallbacks: (0, _objectAssign2.default)([], registeredCallbacks).reverse(),\n            originalCallbackArguments: originalCallbackArguments\n        });\n    }\n\n    return Promise.resolve();\n};\n\nvar getResultToPass = function getResultToPass(_ref3) {\n    var newResult = _ref3.newResult,\n        previousResult = _ref3.previousResult;\n\n    if (newResult !== null && (typeof newResult === 'undefined' ? 'undefined' : _typeof(newResult)) === 'object') {\n        return (0, _objectAssign2.default)({}, previousResult || {}, newResult);\n    } else {\n        return newResult || previousResult;\n    }\n};\n\nvar executeThenableCallback = function executeThenableCallback(_ref4) {\n    var registeredCallbacks = _ref4.registeredCallbacks,\n        originalCallbackArguments = _ref4.originalCallbackArguments,\n        previousResult = _ref4.previousResult;\n\n    return new Promise(function (resolve, reject) {\n        var callback = registeredCallbacks.pop();\n\n        var returnValue = callback.apply(null, originalCallbackArguments);\n\n        if (returnValue && returnValue.then) {\n            returnValue.then(function (result) {\n                var resultToPass = getResultToPass({ newResult: result, previousResult: previousResult });\n\n                if (registeredCallbacks.length) {\n                    executeThenableCallback({ registeredCallbacks: registeredCallbacks, originalCallbackArguments: originalCallbackArguments, previousResult: resultToPass }).then(resolve, reject);\n                } else {\n                    resolve(resultToPass);\n                }\n            }).catch(function (error) {\n                return reject(error);\n            });\n        } else if (returnValue === false) {\n            reject();\n        } else {\n            var resultToPass = getResultToPass({ newResult: returnValue, previousResult: previousResult });\n\n            if (registeredCallbacks.length) {\n                executeThenableCallback({ registeredCallbacks: registeredCallbacks, originalCallbackArguments: originalCallbackArguments, previousResult: resultToPass }).then(resolve, reject);\n            } else {\n                resolve(resultToPass);\n            }\n        }\n    });\n};\n\n\n// WEBPACK FOOTER //\n// /Users/dmp/Code/panneau/js/fields/core/node_modules/fine-uploader-wrappers/callback-proxy.js","\"use strict\";\n\nmodule.exports = require(\"../../fine-uploader/fine-uploader.core\");\n\n\n\n// WEBPACK FOOTER //\n// /Users/dmp/Code/panneau/js/fields/core/node_modules/fine-uploader/lib/core/index.js","// Fine Uploader 5.16.2 - MIT licensed. http://fineuploader.com\n(function(global) {\n    var qq = function(element) {\n        \"use strict\";\n        return {\n            hide: function() {\n                element.style.display = \"none\";\n                return this;\n            },\n            attach: function(type, fn) {\n                if (element.addEventListener) {\n                    element.addEventListener(type, fn, false);\n                } else if (element.attachEvent) {\n                    element.attachEvent(\"on\" + type, fn);\n                }\n                return function() {\n                    qq(element).detach(type, fn);\n                };\n            },\n            detach: function(type, fn) {\n                if (element.removeEventListener) {\n                    element.removeEventListener(type, fn, false);\n                } else if (element.attachEvent) {\n                    element.detachEvent(\"on\" + type, fn);\n                }\n                return this;\n            },\n            contains: function(descendant) {\n                if (!descendant) {\n                    return false;\n                }\n                if (element === descendant) {\n                    return true;\n                }\n                if (element.contains) {\n                    return element.contains(descendant);\n                } else {\n                    return !!(descendant.compareDocumentPosition(element) & 8);\n                }\n            },\n            insertBefore: function(elementB) {\n                elementB.parentNode.insertBefore(element, elementB);\n                return this;\n            },\n            remove: function() {\n                element.parentNode.removeChild(element);\n                return this;\n            },\n            css: function(styles) {\n                if (element.style == null) {\n                    throw new qq.Error(\"Can't apply style to node as it is not on the HTMLElement prototype chain!\");\n                }\n                if (styles.opacity != null) {\n                    if (typeof element.style.opacity !== \"string\" && typeof element.filters !== \"undefined\") {\n                        styles.filter = \"alpha(opacity=\" + Math.round(100 * styles.opacity) + \")\";\n                    }\n                }\n                qq.extend(element.style, styles);\n                return this;\n            },\n            hasClass: function(name, considerParent) {\n                var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n                return re.test(element.className) || !!(considerParent && re.test(element.parentNode.className));\n            },\n            addClass: function(name) {\n                if (!qq(element).hasClass(name)) {\n                    element.className += \" \" + name;\n                }\n                return this;\n            },\n            removeClass: function(name) {\n                var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n                element.className = element.className.replace(re, \" \").replace(/^\\s+|\\s+$/g, \"\");\n                return this;\n            },\n            getByClass: function(className, first) {\n                var candidates, result = [];\n                if (first && element.querySelector) {\n                    return element.querySelector(\".\" + className);\n                } else if (element.querySelectorAll) {\n                    return element.querySelectorAll(\".\" + className);\n                }\n                candidates = element.getElementsByTagName(\"*\");\n                qq.each(candidates, function(idx, val) {\n                    if (qq(val).hasClass(className)) {\n                        result.push(val);\n                    }\n                });\n                return first ? result[0] : result;\n            },\n            getFirstByClass: function(className) {\n                return qq(element).getByClass(className, true);\n            },\n            children: function() {\n                var children = [], child = element.firstChild;\n                while (child) {\n                    if (child.nodeType === 1) {\n                        children.push(child);\n                    }\n                    child = child.nextSibling;\n                }\n                return children;\n            },\n            setText: function(text) {\n                element.innerText = text;\n                element.textContent = text;\n                return this;\n            },\n            clearText: function() {\n                return qq(element).setText(\"\");\n            },\n            hasAttribute: function(attrName) {\n                var attrVal;\n                if (element.hasAttribute) {\n                    if (!element.hasAttribute(attrName)) {\n                        return false;\n                    }\n                    return /^false$/i.exec(element.getAttribute(attrName)) == null;\n                } else {\n                    attrVal = element[attrName];\n                    if (attrVal === undefined) {\n                        return false;\n                    }\n                    return /^false$/i.exec(attrVal) == null;\n                }\n            }\n        };\n    };\n    (function() {\n        \"use strict\";\n        qq.canvasToBlob = function(canvas, mime, quality) {\n            return qq.dataUriToBlob(canvas.toDataURL(mime, quality));\n        };\n        qq.dataUriToBlob = function(dataUri) {\n            var arrayBuffer, byteString, createBlob = function(data, mime) {\n                var BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder, blobBuilder = BlobBuilder && new BlobBuilder();\n                if (blobBuilder) {\n                    blobBuilder.append(data);\n                    return blobBuilder.getBlob(mime);\n                } else {\n                    return new Blob([ data ], {\n                        type: mime\n                    });\n                }\n            }, intArray, mimeString;\n            if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n                byteString = atob(dataUri.split(\",\")[1]);\n            } else {\n                byteString = decodeURI(dataUri.split(\",\")[1]);\n            }\n            mimeString = dataUri.split(\",\")[0].split(\":\")[1].split(\";\")[0];\n            arrayBuffer = new ArrayBuffer(byteString.length);\n            intArray = new Uint8Array(arrayBuffer);\n            qq.each(byteString, function(idx, character) {\n                intArray[idx] = character.charCodeAt(0);\n            });\n            return createBlob(arrayBuffer, mimeString);\n        };\n        qq.log = function(message, level) {\n            if (window.console) {\n                if (!level || level === \"info\") {\n                    window.console.log(message);\n                } else {\n                    if (window.console[level]) {\n                        window.console[level](message);\n                    } else {\n                        window.console.log(\"<\" + level + \"> \" + message);\n                    }\n                }\n            }\n        };\n        qq.isObject = function(variable) {\n            return variable && !variable.nodeType && Object.prototype.toString.call(variable) === \"[object Object]\";\n        };\n        qq.isFunction = function(variable) {\n            return typeof variable === \"function\";\n        };\n        qq.isArray = function(value) {\n            return Object.prototype.toString.call(value) === \"[object Array]\" || value && window.ArrayBuffer && value.buffer && value.buffer.constructor === ArrayBuffer;\n        };\n        qq.isItemList = function(maybeItemList) {\n            return Object.prototype.toString.call(maybeItemList) === \"[object DataTransferItemList]\";\n        };\n        qq.isNodeList = function(maybeNodeList) {\n            return Object.prototype.toString.call(maybeNodeList) === \"[object NodeList]\" || maybeNodeList.item && maybeNodeList.namedItem;\n        };\n        qq.isString = function(maybeString) {\n            return Object.prototype.toString.call(maybeString) === \"[object String]\";\n        };\n        qq.trimStr = function(string) {\n            if (String.prototype.trim) {\n                return string.trim();\n            }\n            return string.replace(/^\\s+|\\s+$/g, \"\");\n        };\n        qq.format = function(str) {\n            var args = Array.prototype.slice.call(arguments, 1), newStr = str, nextIdxToReplace = newStr.indexOf(\"{}\");\n            qq.each(args, function(idx, val) {\n                var strBefore = newStr.substring(0, nextIdxToReplace), strAfter = newStr.substring(nextIdxToReplace + 2);\n                newStr = strBefore + val + strAfter;\n                nextIdxToReplace = newStr.indexOf(\"{}\", nextIdxToReplace + val.length);\n                if (nextIdxToReplace < 0) {\n                    return false;\n                }\n            });\n            return newStr;\n        };\n        qq.isFile = function(maybeFile) {\n            return window.File && Object.prototype.toString.call(maybeFile) === \"[object File]\";\n        };\n        qq.isFileList = function(maybeFileList) {\n            return window.FileList && Object.prototype.toString.call(maybeFileList) === \"[object FileList]\";\n        };\n        qq.isFileOrInput = function(maybeFileOrInput) {\n            return qq.isFile(maybeFileOrInput) || qq.isInput(maybeFileOrInput);\n        };\n        qq.isInput = function(maybeInput, notFile) {\n            var evaluateType = function(type) {\n                var normalizedType = type.toLowerCase();\n                if (notFile) {\n                    return normalizedType !== \"file\";\n                }\n                return normalizedType === \"file\";\n            };\n            if (window.HTMLInputElement) {\n                if (Object.prototype.toString.call(maybeInput) === \"[object HTMLInputElement]\") {\n                    if (maybeInput.type && evaluateType(maybeInput.type)) {\n                        return true;\n                    }\n                }\n            }\n            if (maybeInput.tagName) {\n                if (maybeInput.tagName.toLowerCase() === \"input\") {\n                    if (maybeInput.type && evaluateType(maybeInput.type)) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        };\n        qq.isBlob = function(maybeBlob) {\n            if (window.Blob && Object.prototype.toString.call(maybeBlob) === \"[object Blob]\") {\n                return true;\n            }\n        };\n        qq.isXhrUploadSupported = function() {\n            var input = document.createElement(\"input\");\n            input.type = \"file\";\n            return input.multiple !== undefined && typeof File !== \"undefined\" && typeof FormData !== \"undefined\" && typeof qq.createXhrInstance().upload !== \"undefined\";\n        };\n        qq.createXhrInstance = function() {\n            if (window.XMLHttpRequest) {\n                return new XMLHttpRequest();\n            }\n            try {\n                return new ActiveXObject(\"MSXML2.XMLHTTP.3.0\");\n            } catch (error) {\n                qq.log(\"Neither XHR or ActiveX are supported!\", \"error\");\n                return null;\n            }\n        };\n        qq.isFolderDropSupported = function(dataTransfer) {\n            return dataTransfer.items && dataTransfer.items.length > 0 && dataTransfer.items[0].webkitGetAsEntry;\n        };\n        qq.isFileChunkingSupported = function() {\n            return !qq.androidStock() && qq.isXhrUploadSupported() && (File.prototype.slice !== undefined || File.prototype.webkitSlice !== undefined || File.prototype.mozSlice !== undefined);\n        };\n        qq.sliceBlob = function(fileOrBlob, start, end) {\n            var slicer = fileOrBlob.slice || fileOrBlob.mozSlice || fileOrBlob.webkitSlice;\n            return slicer.call(fileOrBlob, start, end);\n        };\n        qq.arrayBufferToHex = function(buffer) {\n            var bytesAsHex = \"\", bytes = new Uint8Array(buffer);\n            qq.each(bytes, function(idx, byt) {\n                var byteAsHexStr = byt.toString(16);\n                if (byteAsHexStr.length < 2) {\n                    byteAsHexStr = \"0\" + byteAsHexStr;\n                }\n                bytesAsHex += byteAsHexStr;\n            });\n            return bytesAsHex;\n        };\n        qq.readBlobToHex = function(blob, startOffset, length) {\n            var initialBlob = qq.sliceBlob(blob, startOffset, startOffset + length), fileReader = new FileReader(), promise = new qq.Promise();\n            fileReader.onload = function() {\n                promise.success(qq.arrayBufferToHex(fileReader.result));\n            };\n            fileReader.onerror = promise.failure;\n            fileReader.readAsArrayBuffer(initialBlob);\n            return promise;\n        };\n        qq.extend = function(first, second, extendNested) {\n            qq.each(second, function(prop, val) {\n                if (extendNested && qq.isObject(val)) {\n                    if (first[prop] === undefined) {\n                        first[prop] = {};\n                    }\n                    qq.extend(first[prop], val, true);\n                } else {\n                    first[prop] = val;\n                }\n            });\n            return first;\n        };\n        qq.override = function(target, sourceFn) {\n            var super_ = {}, source = sourceFn(super_);\n            qq.each(source, function(srcPropName, srcPropVal) {\n                if (target[srcPropName] !== undefined) {\n                    super_[srcPropName] = target[srcPropName];\n                }\n                target[srcPropName] = srcPropVal;\n            });\n            return target;\n        };\n        qq.indexOf = function(arr, elt, from) {\n            if (arr.indexOf) {\n                return arr.indexOf(elt, from);\n            }\n            from = from || 0;\n            var len = arr.length;\n            if (from < 0) {\n                from += len;\n            }\n            for (;from < len; from += 1) {\n                if (arr.hasOwnProperty(from) && arr[from] === elt) {\n                    return from;\n                }\n            }\n            return -1;\n        };\n        qq.getUniqueId = function() {\n            return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n                var r = Math.random() * 16 | 0, v = c == \"x\" ? r : r & 3 | 8;\n                return v.toString(16);\n            });\n        };\n        qq.ie = function() {\n            return navigator.userAgent.indexOf(\"MSIE\") !== -1 || navigator.userAgent.indexOf(\"Trident\") !== -1;\n        };\n        qq.ie7 = function() {\n            return navigator.userAgent.indexOf(\"MSIE 7\") !== -1;\n        };\n        qq.ie8 = function() {\n            return navigator.userAgent.indexOf(\"MSIE 8\") !== -1;\n        };\n        qq.ie10 = function() {\n            return navigator.userAgent.indexOf(\"MSIE 10\") !== -1;\n        };\n        qq.ie11 = function() {\n            return qq.ie() && navigator.userAgent.indexOf(\"rv:11\") !== -1;\n        };\n        qq.edge = function() {\n            return navigator.userAgent.indexOf(\"Edge\") >= 0;\n        };\n        qq.safari = function() {\n            return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Apple\") !== -1;\n        };\n        qq.chrome = function() {\n            return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Google\") !== -1;\n        };\n        qq.opera = function() {\n            return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Opera\") !== -1;\n        };\n        qq.firefox = function() {\n            return !qq.edge() && !qq.ie11() && navigator.userAgent.indexOf(\"Mozilla\") !== -1 && navigator.vendor !== undefined && navigator.vendor === \"\";\n        };\n        qq.windows = function() {\n            return navigator.platform === \"Win32\";\n        };\n        qq.android = function() {\n            return navigator.userAgent.toLowerCase().indexOf(\"android\") !== -1;\n        };\n        qq.androidStock = function() {\n            return qq.android() && navigator.userAgent.toLowerCase().indexOf(\"chrome\") < 0;\n        };\n        qq.ios6 = function() {\n            return qq.ios() && navigator.userAgent.indexOf(\" OS 6_\") !== -1;\n        };\n        qq.ios7 = function() {\n            return qq.ios() && navigator.userAgent.indexOf(\" OS 7_\") !== -1;\n        };\n        qq.ios8 = function() {\n            return qq.ios() && navigator.userAgent.indexOf(\" OS 8_\") !== -1;\n        };\n        qq.ios800 = function() {\n            return qq.ios() && navigator.userAgent.indexOf(\" OS 8_0 \") !== -1;\n        };\n        qq.ios = function() {\n            return navigator.userAgent.indexOf(\"iPad\") !== -1 || navigator.userAgent.indexOf(\"iPod\") !== -1 || navigator.userAgent.indexOf(\"iPhone\") !== -1;\n        };\n        qq.iosChrome = function() {\n            return qq.ios() && navigator.userAgent.indexOf(\"CriOS\") !== -1;\n        };\n        qq.iosSafari = function() {\n            return qq.ios() && !qq.iosChrome() && navigator.userAgent.indexOf(\"Safari\") !== -1;\n        };\n        qq.iosSafariWebView = function() {\n            return qq.ios() && !qq.iosChrome() && !qq.iosSafari();\n        };\n        qq.preventDefault = function(e) {\n            if (e.preventDefault) {\n                e.preventDefault();\n            } else {\n                e.returnValue = false;\n            }\n        };\n        qq.toElement = function() {\n            var div = document.createElement(\"div\");\n            return function(html) {\n                div.innerHTML = html;\n                var element = div.firstChild;\n                div.removeChild(element);\n                return element;\n            };\n        }();\n        qq.each = function(iterableItem, callback) {\n            var keyOrIndex, retVal;\n            if (iterableItem) {\n                if (window.Storage && iterableItem.constructor === window.Storage) {\n                    for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                        retVal = callback(iterableItem.key(keyOrIndex), iterableItem.getItem(iterableItem.key(keyOrIndex)));\n                        if (retVal === false) {\n                            break;\n                        }\n                    }\n                } else if (qq.isArray(iterableItem) || qq.isItemList(iterableItem) || qq.isNodeList(iterableItem)) {\n                    for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                        retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                        if (retVal === false) {\n                            break;\n                        }\n                    }\n                } else if (qq.isString(iterableItem)) {\n                    for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                        retVal = callback(keyOrIndex, iterableItem.charAt(keyOrIndex));\n                        if (retVal === false) {\n                            break;\n                        }\n                    }\n                } else {\n                    for (keyOrIndex in iterableItem) {\n                        if (Object.prototype.hasOwnProperty.call(iterableItem, keyOrIndex)) {\n                            retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                            if (retVal === false) {\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        };\n        qq.bind = function(oldFunc, context) {\n            if (qq.isFunction(oldFunc)) {\n                var args = Array.prototype.slice.call(arguments, 2);\n                return function() {\n                    var newArgs = qq.extend([], args);\n                    if (arguments.length) {\n                        newArgs = newArgs.concat(Array.prototype.slice.call(arguments));\n                    }\n                    return oldFunc.apply(context, newArgs);\n                };\n            }\n            throw new Error(\"first parameter must be a function!\");\n        };\n        qq.obj2url = function(obj, temp, prefixDone) {\n            var uristrings = [], prefix = \"&\", add = function(nextObj, i) {\n                var nextTemp = temp ? /\\[\\]$/.test(temp) ? temp : temp + \"[\" + i + \"]\" : i;\n                if (nextTemp !== \"undefined\" && i !== \"undefined\") {\n                    uristrings.push(typeof nextObj === \"object\" ? qq.obj2url(nextObj, nextTemp, true) : Object.prototype.toString.call(nextObj) === \"[object Function]\" ? encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj()) : encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj));\n                }\n            };\n            if (!prefixDone && temp) {\n                prefix = /\\?/.test(temp) ? /\\?$/.test(temp) ? \"\" : \"&\" : \"?\";\n                uristrings.push(temp);\n                uristrings.push(qq.obj2url(obj));\n            } else if (Object.prototype.toString.call(obj) === \"[object Array]\" && typeof obj !== \"undefined\") {\n                qq.each(obj, function(idx, val) {\n                    add(val, idx);\n                });\n            } else if (typeof obj !== \"undefined\" && obj !== null && typeof obj === \"object\") {\n                qq.each(obj, function(prop, val) {\n                    add(val, prop);\n                });\n            } else {\n                uristrings.push(encodeURIComponent(temp) + \"=\" + encodeURIComponent(obj));\n            }\n            if (temp) {\n                return uristrings.join(prefix);\n            } else {\n                return uristrings.join(prefix).replace(/^&/, \"\").replace(/%20/g, \"+\");\n            }\n        };\n        qq.obj2FormData = function(obj, formData, arrayKeyName) {\n            if (!formData) {\n                formData = new FormData();\n            }\n            qq.each(obj, function(key, val) {\n                key = arrayKeyName ? arrayKeyName + \"[\" + key + \"]\" : key;\n                if (qq.isObject(val)) {\n                    qq.obj2FormData(val, formData, key);\n                } else if (qq.isFunction(val)) {\n                    formData.append(key, val());\n                } else {\n                    formData.append(key, val);\n                }\n            });\n            return formData;\n        };\n        qq.obj2Inputs = function(obj, form) {\n            var input;\n            if (!form) {\n                form = document.createElement(\"form\");\n            }\n            qq.obj2FormData(obj, {\n                append: function(key, val) {\n                    input = document.createElement(\"input\");\n                    input.setAttribute(\"name\", key);\n                    input.setAttribute(\"value\", val);\n                    form.appendChild(input);\n                }\n            });\n            return form;\n        };\n        qq.parseJson = function(json) {\n            if (window.JSON && qq.isFunction(JSON.parse)) {\n                return JSON.parse(json);\n            } else {\n                return eval(\"(\" + json + \")\");\n            }\n        };\n        qq.getExtension = function(filename) {\n            var extIdx = filename.lastIndexOf(\".\") + 1;\n            if (extIdx > 0) {\n                return filename.substr(extIdx, filename.length - extIdx);\n            }\n        };\n        qq.getFilename = function(blobOrFileInput) {\n            if (qq.isInput(blobOrFileInput)) {\n                return blobOrFileInput.value.replace(/.*(\\/|\\\\)/, \"\");\n            } else if (qq.isFile(blobOrFileInput)) {\n                if (blobOrFileInput.fileName !== null && blobOrFileInput.fileName !== undefined) {\n                    return blobOrFileInput.fileName;\n                }\n            }\n            return blobOrFileInput.name;\n        };\n        qq.DisposeSupport = function() {\n            var disposers = [];\n            return {\n                dispose: function() {\n                    var disposer;\n                    do {\n                        disposer = disposers.shift();\n                        if (disposer) {\n                            disposer();\n                        }\n                    } while (disposer);\n                },\n                attach: function() {\n                    var args = arguments;\n                    this.addDisposer(qq(args[0]).attach.apply(this, Array.prototype.slice.call(arguments, 1)));\n                },\n                addDisposer: function(disposeFunction) {\n                    disposers.push(disposeFunction);\n                }\n            };\n        };\n    })();\n    (function() {\n        \"use strict\";\n        if (typeof define === \"function\" && define.amd) {\n            define(function() {\n                return qq;\n            });\n        } else if (typeof module !== \"undefined\" && module.exports) {\n            module.exports = qq;\n        } else {\n            global.qq = qq;\n        }\n    })();\n    (function() {\n        \"use strict\";\n        qq.Error = function(message) {\n            this.message = \"[Fine Uploader \" + qq.version + \"] \" + message;\n        };\n        qq.Error.prototype = new Error();\n    })();\n    qq.version = \"5.16.2\";\n    qq.supportedFeatures = function() {\n        \"use strict\";\n        var supportsUploading, supportsUploadingBlobs, supportsFileDrop, supportsAjaxFileUploading, supportsFolderDrop, supportsChunking, supportsResume, supportsUploadViaPaste, supportsUploadCors, supportsDeleteFileXdr, supportsDeleteFileCorsXhr, supportsDeleteFileCors, supportsFolderSelection, supportsImagePreviews, supportsUploadProgress;\n        function testSupportsFileInputElement() {\n            var supported = true, tempInput;\n            try {\n                tempInput = document.createElement(\"input\");\n                tempInput.type = \"file\";\n                qq(tempInput).hide();\n                if (tempInput.disabled) {\n                    supported = false;\n                }\n            } catch (ex) {\n                supported = false;\n            }\n            return supported;\n        }\n        function isChrome14OrHigher() {\n            return (qq.chrome() || qq.opera()) && navigator.userAgent.match(/Chrome\\/[1][4-9]|Chrome\\/[2-9][0-9]/) !== undefined;\n        }\n        function isCrossOriginXhrSupported() {\n            if (window.XMLHttpRequest) {\n                var xhr = qq.createXhrInstance();\n                return xhr.withCredentials !== undefined;\n            }\n            return false;\n        }\n        function isXdrSupported() {\n            return window.XDomainRequest !== undefined;\n        }\n        function isCrossOriginAjaxSupported() {\n            if (isCrossOriginXhrSupported()) {\n                return true;\n            }\n            return isXdrSupported();\n        }\n        function isFolderSelectionSupported() {\n            return document.createElement(\"input\").webkitdirectory !== undefined;\n        }\n        function isLocalStorageSupported() {\n            try {\n                return !!window.localStorage && qq.isFunction(window.localStorage.setItem);\n            } catch (error) {\n                return false;\n            }\n        }\n        function isDragAndDropSupported() {\n            var span = document.createElement(\"span\");\n            return (\"draggable\" in span || \"ondragstart\" in span && \"ondrop\" in span) && !qq.android() && !qq.ios();\n        }\n        supportsUploading = testSupportsFileInputElement();\n        supportsAjaxFileUploading = supportsUploading && qq.isXhrUploadSupported();\n        supportsUploadingBlobs = supportsAjaxFileUploading && !qq.androidStock();\n        supportsFileDrop = supportsAjaxFileUploading && isDragAndDropSupported();\n        supportsFolderDrop = supportsFileDrop && function() {\n            var input = document.createElement(\"input\");\n            input.type = \"file\";\n            return !!(\"webkitdirectory\" in (input || document.querySelectorAll(\"input[type=file]\")[0]));\n        }();\n        supportsChunking = supportsAjaxFileUploading && qq.isFileChunkingSupported();\n        supportsResume = supportsAjaxFileUploading && supportsChunking && isLocalStorageSupported();\n        supportsUploadViaPaste = supportsAjaxFileUploading && isChrome14OrHigher();\n        supportsUploadCors = supportsUploading && (window.postMessage !== undefined || supportsAjaxFileUploading);\n        supportsDeleteFileCorsXhr = isCrossOriginXhrSupported();\n        supportsDeleteFileXdr = isXdrSupported();\n        supportsDeleteFileCors = isCrossOriginAjaxSupported();\n        supportsFolderSelection = isFolderSelectionSupported();\n        supportsImagePreviews = supportsAjaxFileUploading && window.FileReader !== undefined;\n        supportsUploadProgress = function() {\n            if (supportsAjaxFileUploading) {\n                return !qq.androidStock() && !qq.iosChrome();\n            }\n            return false;\n        }();\n        return {\n            ajaxUploading: supportsAjaxFileUploading,\n            blobUploading: supportsUploadingBlobs,\n            canDetermineSize: supportsAjaxFileUploading,\n            chunking: supportsChunking,\n            deleteFileCors: supportsDeleteFileCors,\n            deleteFileCorsXdr: supportsDeleteFileXdr,\n            deleteFileCorsXhr: supportsDeleteFileCorsXhr,\n            dialogElement: !!window.HTMLDialogElement,\n            fileDrop: supportsFileDrop,\n            folderDrop: supportsFolderDrop,\n            folderSelection: supportsFolderSelection,\n            imagePreviews: supportsImagePreviews,\n            imageValidation: supportsImagePreviews,\n            itemSizeValidation: supportsAjaxFileUploading,\n            pause: supportsChunking,\n            progressBar: supportsUploadProgress,\n            resume: supportsResume,\n            scaling: supportsImagePreviews && supportsUploadingBlobs,\n            tiffPreviews: qq.safari(),\n            unlimitedScaledImageSize: !qq.ios(),\n            uploading: supportsUploading,\n            uploadCors: supportsUploadCors,\n            uploadCustomHeaders: supportsAjaxFileUploading,\n            uploadNonMultipart: supportsAjaxFileUploading,\n            uploadViaPaste: supportsUploadViaPaste\n        };\n    }();\n    qq.isGenericPromise = function(maybePromise) {\n        \"use strict\";\n        return !!(maybePromise && maybePromise.then && qq.isFunction(maybePromise.then));\n    };\n    qq.Promise = function() {\n        \"use strict\";\n        var successArgs, failureArgs, successCallbacks = [], failureCallbacks = [], doneCallbacks = [], state = 0;\n        qq.extend(this, {\n            then: function(onSuccess, onFailure) {\n                if (state === 0) {\n                    if (onSuccess) {\n                        successCallbacks.push(onSuccess);\n                    }\n                    if (onFailure) {\n                        failureCallbacks.push(onFailure);\n                    }\n                } else if (state === -1) {\n                    onFailure && onFailure.apply(null, failureArgs);\n                } else if (onSuccess) {\n                    onSuccess.apply(null, successArgs);\n                }\n                return this;\n            },\n            done: function(callback) {\n                if (state === 0) {\n                    doneCallbacks.push(callback);\n                } else {\n                    callback.apply(null, failureArgs === undefined ? successArgs : failureArgs);\n                }\n                return this;\n            },\n            success: function() {\n                state = 1;\n                successArgs = arguments;\n                if (successCallbacks.length) {\n                    qq.each(successCallbacks, function(idx, callback) {\n                        callback.apply(null, successArgs);\n                    });\n                }\n                if (doneCallbacks.length) {\n                    qq.each(doneCallbacks, function(idx, callback) {\n                        callback.apply(null, successArgs);\n                    });\n                }\n                return this;\n            },\n            failure: function() {\n                state = -1;\n                failureArgs = arguments;\n                if (failureCallbacks.length) {\n                    qq.each(failureCallbacks, function(idx, callback) {\n                        callback.apply(null, failureArgs);\n                    });\n                }\n                if (doneCallbacks.length) {\n                    qq.each(doneCallbacks, function(idx, callback) {\n                        callback.apply(null, failureArgs);\n                    });\n                }\n                return this;\n            }\n        });\n    };\n    qq.BlobProxy = function(referenceBlob, onCreate) {\n        \"use strict\";\n        qq.extend(this, {\n            referenceBlob: referenceBlob,\n            create: function() {\n                return onCreate(referenceBlob);\n            }\n        });\n    };\n    qq.UploadButton = function(o) {\n        \"use strict\";\n        var self = this, disposeSupport = new qq.DisposeSupport(), options = {\n            acceptFiles: null,\n            element: null,\n            focusClass: \"qq-upload-button-focus\",\n            folders: false,\n            hoverClass: \"qq-upload-button-hover\",\n            ios8BrowserCrashWorkaround: false,\n            multiple: false,\n            name: \"qqfile\",\n            onChange: function(input) {},\n            title: null\n        }, input, buttonId;\n        qq.extend(options, o);\n        buttonId = qq.getUniqueId();\n        function createInput() {\n            var input = document.createElement(\"input\");\n            input.setAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME, buttonId);\n            input.setAttribute(\"title\", options.title);\n            self.setMultiple(options.multiple, input);\n            if (options.folders && qq.supportedFeatures.folderSelection) {\n                input.setAttribute(\"webkitdirectory\", \"\");\n            }\n            if (options.acceptFiles) {\n                input.setAttribute(\"accept\", options.acceptFiles);\n            }\n            input.setAttribute(\"type\", \"file\");\n            input.setAttribute(\"name\", options.name);\n            qq(input).css({\n                position: \"absolute\",\n                right: 0,\n                top: 0,\n                fontFamily: \"Arial\",\n                fontSize: qq.ie() && !qq.ie8() ? \"3500px\" : \"118px\",\n                margin: 0,\n                padding: 0,\n                cursor: \"pointer\",\n                opacity: 0\n            });\n            !qq.ie7() && qq(input).css({\n                height: \"100%\"\n            });\n            options.element.appendChild(input);\n            disposeSupport.attach(input, \"change\", function() {\n                options.onChange(input);\n            });\n            disposeSupport.attach(input, \"mouseover\", function() {\n                qq(options.element).addClass(options.hoverClass);\n            });\n            disposeSupport.attach(input, \"mouseout\", function() {\n                qq(options.element).removeClass(options.hoverClass);\n            });\n            disposeSupport.attach(input, \"focus\", function() {\n                qq(options.element).addClass(options.focusClass);\n            });\n            disposeSupport.attach(input, \"blur\", function() {\n                qq(options.element).removeClass(options.focusClass);\n            });\n            return input;\n        }\n        qq(options.element).css({\n            position: \"relative\",\n            overflow: \"hidden\",\n            direction: \"ltr\"\n        });\n        qq.extend(this, {\n            getInput: function() {\n                return input;\n            },\n            getButtonId: function() {\n                return buttonId;\n            },\n            setMultiple: function(isMultiple, optInput) {\n                var input = optInput || this.getInput();\n                if (options.ios8BrowserCrashWorkaround && qq.ios8() && (qq.iosChrome() || qq.iosSafariWebView())) {\n                    input.setAttribute(\"multiple\", \"\");\n                } else {\n                    if (isMultiple) {\n                        input.setAttribute(\"multiple\", \"\");\n                    } else {\n                        input.removeAttribute(\"multiple\");\n                    }\n                }\n            },\n            setAcceptFiles: function(acceptFiles) {\n                if (acceptFiles !== options.acceptFiles) {\n                    input.setAttribute(\"accept\", acceptFiles);\n                }\n            },\n            reset: function() {\n                if (input.parentNode) {\n                    qq(input).remove();\n                }\n                qq(options.element).removeClass(options.focusClass);\n                input = null;\n                input = createInput();\n            }\n        });\n        input = createInput();\n    };\n    qq.UploadButton.BUTTON_ID_ATTR_NAME = \"qq-button-id\";\n    qq.UploadData = function(uploaderProxy) {\n        \"use strict\";\n        var data = [], byUuid = {}, byStatus = {}, byProxyGroupId = {}, byBatchId = {};\n        function getDataByIds(idOrIds) {\n            if (qq.isArray(idOrIds)) {\n                var entries = [];\n                qq.each(idOrIds, function(idx, id) {\n                    entries.push(data[id]);\n                });\n                return entries;\n            }\n            return data[idOrIds];\n        }\n        function getDataByUuids(uuids) {\n            if (qq.isArray(uuids)) {\n                var entries = [];\n                qq.each(uuids, function(idx, uuid) {\n                    entries.push(data[byUuid[uuid]]);\n                });\n                return entries;\n            }\n            return data[byUuid[uuids]];\n        }\n        function getDataByStatus(status) {\n            var statusResults = [], statuses = [].concat(status);\n            qq.each(statuses, function(index, statusEnum) {\n                var statusResultIndexes = byStatus[statusEnum];\n                if (statusResultIndexes !== undefined) {\n                    qq.each(statusResultIndexes, function(i, dataIndex) {\n                        statusResults.push(data[dataIndex]);\n                    });\n                }\n            });\n            return statusResults;\n        }\n        qq.extend(this, {\n            addFile: function(spec) {\n                var status = spec.status || qq.status.SUBMITTING, id = data.push({\n                    name: spec.name,\n                    originalName: spec.name,\n                    uuid: spec.uuid,\n                    size: spec.size == null ? -1 : spec.size,\n                    status: status,\n                    file: spec.file\n                }) - 1;\n                if (spec.batchId) {\n                    data[id].batchId = spec.batchId;\n                    if (byBatchId[spec.batchId] === undefined) {\n                        byBatchId[spec.batchId] = [];\n                    }\n                    byBatchId[spec.batchId].push(id);\n                }\n                if (spec.proxyGroupId) {\n                    data[id].proxyGroupId = spec.proxyGroupId;\n                    if (byProxyGroupId[spec.proxyGroupId] === undefined) {\n                        byProxyGroupId[spec.proxyGroupId] = [];\n                    }\n                    byProxyGroupId[spec.proxyGroupId].push(id);\n                }\n                data[id].id = id;\n                byUuid[spec.uuid] = id;\n                if (byStatus[status] === undefined) {\n                    byStatus[status] = [];\n                }\n                byStatus[status].push(id);\n                spec.onBeforeStatusChange && spec.onBeforeStatusChange(id);\n                uploaderProxy.onStatusChange(id, null, status);\n                return id;\n            },\n            retrieve: function(optionalFilter) {\n                if (qq.isObject(optionalFilter) && data.length) {\n                    if (optionalFilter.id !== undefined) {\n                        return getDataByIds(optionalFilter.id);\n                    } else if (optionalFilter.uuid !== undefined) {\n                        return getDataByUuids(optionalFilter.uuid);\n                    } else if (optionalFilter.status) {\n                        return getDataByStatus(optionalFilter.status);\n                    }\n                } else {\n                    return qq.extend([], data, true);\n                }\n            },\n            removeFileRef: function(id) {\n                var record = getDataByIds(id);\n                if (record) {\n                    delete record.file;\n                }\n            },\n            reset: function() {\n                data = [];\n                byUuid = {};\n                byStatus = {};\n                byBatchId = {};\n            },\n            setStatus: function(id, newStatus) {\n                var oldStatus = data[id].status, byStatusOldStatusIndex = qq.indexOf(byStatus[oldStatus], id);\n                byStatus[oldStatus].splice(byStatusOldStatusIndex, 1);\n                data[id].status = newStatus;\n                if (byStatus[newStatus] === undefined) {\n                    byStatus[newStatus] = [];\n                }\n                byStatus[newStatus].push(id);\n                uploaderProxy.onStatusChange(id, oldStatus, newStatus);\n            },\n            uuidChanged: function(id, newUuid) {\n                var oldUuid = data[id].uuid;\n                data[id].uuid = newUuid;\n                byUuid[newUuid] = id;\n                delete byUuid[oldUuid];\n            },\n            updateName: function(id, newName) {\n                data[id].name = newName;\n            },\n            updateSize: function(id, newSize) {\n                data[id].size = newSize;\n            },\n            setParentId: function(targetId, parentId) {\n                data[targetId].parentId = parentId;\n            },\n            getIdsInProxyGroup: function(id) {\n                var proxyGroupId = data[id].proxyGroupId;\n                if (proxyGroupId) {\n                    return byProxyGroupId[proxyGroupId];\n                }\n                return [];\n            },\n            getIdsInBatch: function(id) {\n                var batchId = data[id].batchId;\n                return byBatchId[batchId];\n            }\n        });\n    };\n    qq.status = {\n        SUBMITTING: \"submitting\",\n        SUBMITTED: \"submitted\",\n        REJECTED: \"rejected\",\n        QUEUED: \"queued\",\n        CANCELED: \"canceled\",\n        PAUSED: \"paused\",\n        UPLOADING: \"uploading\",\n        UPLOAD_FINALIZING: \"upload finalizing\",\n        UPLOAD_RETRYING: \"retrying upload\",\n        UPLOAD_SUCCESSFUL: \"upload successful\",\n        UPLOAD_FAILED: \"upload failed\",\n        DELETE_FAILED: \"delete failed\",\n        DELETING: \"deleting\",\n        DELETED: \"deleted\"\n    };\n    (function() {\n        \"use strict\";\n        qq.basePublicApi = {\n            addBlobs: function(blobDataOrArray, params, endpoint) {\n                this.addFiles(blobDataOrArray, params, endpoint);\n            },\n            addInitialFiles: function(cannedFileList) {\n                var self = this;\n                qq.each(cannedFileList, function(index, cannedFile) {\n                    self._addCannedFile(cannedFile);\n                });\n            },\n            addFiles: function(data, params, endpoint) {\n                this._maybeHandleIos8SafariWorkaround();\n                var batchId = this._storedIds.length === 0 ? qq.getUniqueId() : this._currentBatchId, processBlob = qq.bind(function(blob) {\n                    this._handleNewFile({\n                        blob: blob,\n                        name: this._options.blobs.defaultName\n                    }, batchId, verifiedFiles);\n                }, this), processBlobData = qq.bind(function(blobData) {\n                    this._handleNewFile(blobData, batchId, verifiedFiles);\n                }, this), processCanvas = qq.bind(function(canvas) {\n                    var blob = qq.canvasToBlob(canvas);\n                    this._handleNewFile({\n                        blob: blob,\n                        name: this._options.blobs.defaultName + \".png\"\n                    }, batchId, verifiedFiles);\n                }, this), processCanvasData = qq.bind(function(canvasData) {\n                    var normalizedQuality = canvasData.quality && canvasData.quality / 100, blob = qq.canvasToBlob(canvasData.canvas, canvasData.type, normalizedQuality);\n                    this._handleNewFile({\n                        blob: blob,\n                        name: canvasData.name\n                    }, batchId, verifiedFiles);\n                }, this), processFileOrInput = qq.bind(function(fileOrInput) {\n                    if (qq.isInput(fileOrInput) && qq.supportedFeatures.ajaxUploading) {\n                        var files = Array.prototype.slice.call(fileOrInput.files), self = this;\n                        qq.each(files, function(idx, file) {\n                            self._handleNewFile(file, batchId, verifiedFiles);\n                        });\n                    } else {\n                        this._handleNewFile(fileOrInput, batchId, verifiedFiles);\n                    }\n                }, this), normalizeData = function() {\n                    if (qq.isFileList(data)) {\n                        data = Array.prototype.slice.call(data);\n                    }\n                    data = [].concat(data);\n                }, self = this, verifiedFiles = [];\n                this._currentBatchId = batchId;\n                if (data) {\n                    normalizeData();\n                    qq.each(data, function(idx, fileContainer) {\n                        if (qq.isFileOrInput(fileContainer)) {\n                            processFileOrInput(fileContainer);\n                        } else if (qq.isBlob(fileContainer)) {\n                            processBlob(fileContainer);\n                        } else if (qq.isObject(fileContainer)) {\n                            if (fileContainer.blob && fileContainer.name) {\n                                processBlobData(fileContainer);\n                            } else if (fileContainer.canvas && fileContainer.name) {\n                                processCanvasData(fileContainer);\n                            }\n                        } else if (fileContainer.tagName && fileContainer.tagName.toLowerCase() === \"canvas\") {\n                            processCanvas(fileContainer);\n                        } else {\n                            self.log(fileContainer + \" is not a valid file container!  Ignoring!\", \"warn\");\n                        }\n                    });\n                    this.log(\"Received \" + verifiedFiles.length + \" files.\");\n                    this._prepareItemsForUpload(verifiedFiles, params, endpoint);\n                }\n            },\n            cancel: function(id) {\n                var uploadData = this._uploadData.retrieve({\n                    id: id\n                });\n                if (uploadData && uploadData.status === qq.status.UPLOAD_FINALIZING) {\n                    this.log(qq.format(\"Ignoring cancel for file ID {} ({}).  Finalizing upload.\", id, this.getName(id)), \"error\");\n                } else {\n                    this._handler.cancel(id);\n                }\n            },\n            cancelAll: function() {\n                var storedIdsCopy = [], self = this;\n                qq.extend(storedIdsCopy, this._storedIds);\n                qq.each(storedIdsCopy, function(idx, storedFileId) {\n                    self.cancel(storedFileId);\n                });\n                this._handler.cancelAll();\n            },\n            clearStoredFiles: function() {\n                this._storedIds = [];\n            },\n            continueUpload: function(id) {\n                var uploadData = this._uploadData.retrieve({\n                    id: id\n                });\n                if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\n                    return false;\n                }\n                if (uploadData.status === qq.status.PAUSED) {\n                    this.log(qq.format(\"Paused file ID {} ({}) will be continued.  Not paused.\", id, this.getName(id)));\n                    this._uploadFile(id);\n                    return true;\n                } else {\n                    this.log(qq.format(\"Ignoring continue for file ID {} ({}).  Not paused.\", id, this.getName(id)), \"error\");\n                }\n                return false;\n            },\n            deleteFile: function(id) {\n                return this._onSubmitDelete(id);\n            },\n            doesExist: function(fileOrBlobId) {\n                return this._handler.isValid(fileOrBlobId);\n            },\n            drawThumbnail: function(fileId, imgOrCanvas, maxSize, fromServer, customResizeFunction) {\n                var promiseToReturn = new qq.Promise(), fileOrUrl, options;\n                if (this._imageGenerator) {\n                    fileOrUrl = this._thumbnailUrls[fileId];\n                    options = {\n                        customResizeFunction: customResizeFunction,\n                        maxSize: maxSize > 0 ? maxSize : null,\n                        scale: maxSize > 0\n                    };\n                    if (!fromServer && qq.supportedFeatures.imagePreviews) {\n                        fileOrUrl = this.getFile(fileId);\n                    }\n                    if (fileOrUrl == null) {\n                        promiseToReturn.failure({\n                            container: imgOrCanvas,\n                            error: \"File or URL not found.\"\n                        });\n                    } else {\n                        this._imageGenerator.generate(fileOrUrl, imgOrCanvas, options).then(function success(modifiedContainer) {\n                            promiseToReturn.success(modifiedContainer);\n                        }, function failure(container, reason) {\n                            promiseToReturn.failure({\n                                container: container,\n                                error: reason || \"Problem generating thumbnail\"\n                            });\n                        });\n                    }\n                } else {\n                    promiseToReturn.failure({\n                        container: imgOrCanvas,\n                        error: \"Missing image generator module\"\n                    });\n                }\n                return promiseToReturn;\n            },\n            getButton: function(fileId) {\n                return this._getButton(this._buttonIdsForFileIds[fileId]);\n            },\n            getEndpoint: function(fileId) {\n                return this._endpointStore.get(fileId);\n            },\n            getFile: function(fileOrBlobId) {\n                var file = this._handler.getFile(fileOrBlobId);\n                var uploadDataRecord;\n                if (!file) {\n                    uploadDataRecord = this._uploadData.retrieve({\n                        id: fileOrBlobId\n                    });\n                    if (uploadDataRecord) {\n                        file = uploadDataRecord.file;\n                    }\n                }\n                return file || null;\n            },\n            getInProgress: function() {\n                return this._uploadData.retrieve({\n                    status: [ qq.status.UPLOADING, qq.status.UPLOAD_RETRYING, qq.status.QUEUED ]\n                }).length;\n            },\n            getName: function(id) {\n                return this._uploadData.retrieve({\n                    id: id\n                }).name;\n            },\n            getParentId: function(id) {\n                var uploadDataEntry = this.getUploads({\n                    id: id\n                }), parentId = null;\n                if (uploadDataEntry) {\n                    if (uploadDataEntry.parentId !== undefined) {\n                        parentId = uploadDataEntry.parentId;\n                    }\n                }\n                return parentId;\n            },\n            getResumableFilesData: function() {\n                return this._handler.getResumableFilesData();\n            },\n            getSize: function(id) {\n                return this._uploadData.retrieve({\n                    id: id\n                }).size;\n            },\n            getNetUploads: function() {\n                return this._netUploaded;\n            },\n            getRemainingAllowedItems: function() {\n                var allowedItems = this._currentItemLimit;\n                if (allowedItems > 0) {\n                    return allowedItems - this._netUploadedOrQueued;\n                }\n                return null;\n            },\n            getUploads: function(optionalFilter) {\n                return this._uploadData.retrieve(optionalFilter);\n            },\n            getUuid: function(id) {\n                return this._uploadData.retrieve({\n                    id: id\n                }).uuid;\n            },\n            isResumable: function(id) {\n                return this._handler.hasResumeRecord(id);\n            },\n            log: function(str, level) {\n                if (this._options.debug && (!level || level === \"info\")) {\n                    qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str);\n                } else if (level && level !== \"info\") {\n                    qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str, level);\n                }\n            },\n            pauseUpload: function(id) {\n                var uploadData = this._uploadData.retrieve({\n                    id: id\n                });\n                if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\n                    return false;\n                }\n                if (qq.indexOf([ qq.status.UPLOADING, qq.status.UPLOAD_RETRYING ], uploadData.status) >= 0) {\n                    if (this._handler.pause(id)) {\n                        this._uploadData.setStatus(id, qq.status.PAUSED);\n                        return true;\n                    } else {\n                        this.log(qq.format(\"Unable to pause file ID {} ({}).\", id, this.getName(id)), \"error\");\n                    }\n                } else {\n                    this.log(qq.format(\"Ignoring pause for file ID {} ({}).  Not in progress.\", id, this.getName(id)), \"error\");\n                }\n                return false;\n            },\n            removeFileRef: function(id) {\n                this._handler.expunge(id);\n                this._uploadData.removeFileRef(id);\n            },\n            reset: function() {\n                this.log(\"Resetting uploader...\");\n                this._handler.reset();\n                this._storedIds = [];\n                this._autoRetries = [];\n                this._retryTimeouts = [];\n                this._preventRetries = [];\n                this._thumbnailUrls = [];\n                qq.each(this._buttons, function(idx, button) {\n                    button.reset();\n                });\n                this._paramsStore.reset();\n                this._endpointStore.reset();\n                this._netUploadedOrQueued = 0;\n                this._netUploaded = 0;\n                this._uploadData.reset();\n                this._buttonIdsForFileIds = [];\n                this._pasteHandler && this._pasteHandler.reset();\n                this._options.session.refreshOnReset && this._refreshSessionData();\n                this._succeededSinceLastAllComplete = [];\n                this._failedSinceLastAllComplete = [];\n                this._totalProgress && this._totalProgress.reset();\n                this._customResumeDataStore.reset();\n            },\n            retry: function(id) {\n                return this._manualRetry(id);\n            },\n            scaleImage: function(id, specs) {\n                var self = this;\n                return qq.Scaler.prototype.scaleImage(id, specs, {\n                    log: qq.bind(self.log, self),\n                    getFile: qq.bind(self.getFile, self),\n                    uploadData: self._uploadData\n                });\n            },\n            setCustomHeaders: function(headers, id) {\n                this._customHeadersStore.set(headers, id);\n            },\n            setCustomResumeData: function(id, data) {\n                this._customResumeDataStore.set(data, id);\n            },\n            setDeleteFileCustomHeaders: function(headers, id) {\n                this._deleteFileCustomHeadersStore.set(headers, id);\n            },\n            setDeleteFileEndpoint: function(endpoint, id) {\n                this._deleteFileEndpointStore.set(endpoint, id);\n            },\n            setDeleteFileParams: function(params, id) {\n                this._deleteFileParamsStore.set(params, id);\n            },\n            setEndpoint: function(endpoint, id) {\n                this._endpointStore.set(endpoint, id);\n            },\n            setForm: function(elementOrId) {\n                this._updateFormSupportAndParams(elementOrId);\n            },\n            setItemLimit: function(newItemLimit) {\n                this._currentItemLimit = newItemLimit;\n            },\n            setName: function(id, newName) {\n                this._uploadData.updateName(id, newName);\n            },\n            setParams: function(params, id) {\n                this._paramsStore.set(params, id);\n            },\n            setUuid: function(id, newUuid) {\n                return this._uploadData.uuidChanged(id, newUuid);\n            },\n            setStatus: function(id, newStatus) {\n                var fileRecord = this.getUploads({\n                    id: id\n                });\n                if (!fileRecord) {\n                    throw new qq.Error(id + \" is not a valid file ID.\");\n                }\n                switch (newStatus) {\n                  case qq.status.DELETED:\n                    this._onDeleteComplete(id, null, false);\n                    break;\n\n                  case qq.status.DELETE_FAILED:\n                    this._onDeleteComplete(id, null, true);\n                    break;\n\n                  default:\n                    var errorMessage = \"Method setStatus called on '\" + name + \"' not implemented yet for \" + newStatus;\n                    this.log(errorMessage);\n                    throw new qq.Error(errorMessage);\n                }\n            },\n            uploadStoredFiles: function() {\n                if (this._storedIds.length === 0) {\n                    this._itemError(\"noFilesError\");\n                } else {\n                    this._uploadStoredFiles();\n                }\n            }\n        };\n        qq.basePrivateApi = {\n            _addCannedFile: function(sessionData) {\n                var self = this;\n                return this._uploadData.addFile({\n                    uuid: sessionData.uuid,\n                    name: sessionData.name,\n                    size: sessionData.size,\n                    status: qq.status.UPLOAD_SUCCESSFUL,\n                    onBeforeStatusChange: function(id) {\n                        sessionData.deleteFileEndpoint && self.setDeleteFileEndpoint(sessionData.deleteFileEndpoint, id);\n                        sessionData.deleteFileParams && self.setDeleteFileParams(sessionData.deleteFileParams, id);\n                        if (sessionData.thumbnailUrl) {\n                            self._thumbnailUrls[id] = sessionData.thumbnailUrl;\n                        }\n                        self._netUploaded++;\n                        self._netUploadedOrQueued++;\n                    }\n                });\n            },\n            _annotateWithButtonId: function(file, associatedInput) {\n                if (qq.isFile(file)) {\n                    file.qqButtonId = this._getButtonId(associatedInput);\n                }\n            },\n            _batchError: function(message) {\n                this._options.callbacks.onError(null, null, message, undefined);\n            },\n            _createDeleteHandler: function() {\n                var self = this;\n                return new qq.DeleteFileAjaxRequester({\n                    method: this._options.deleteFile.method.toUpperCase(),\n                    maxConnections: this._options.maxConnections,\n                    uuidParamName: this._options.request.uuidName,\n                    customHeaders: this._deleteFileCustomHeadersStore,\n                    paramsStore: this._deleteFileParamsStore,\n                    endpointStore: this._deleteFileEndpointStore,\n                    cors: this._options.cors,\n                    log: qq.bind(self.log, self),\n                    onDelete: function(id) {\n                        self._onDelete(id);\n                        self._options.callbacks.onDelete(id);\n                    },\n                    onDeleteComplete: function(id, xhrOrXdr, isError) {\n                        self._onDeleteComplete(id, xhrOrXdr, isError);\n                        self._options.callbacks.onDeleteComplete(id, xhrOrXdr, isError);\n                    }\n                });\n            },\n            _createPasteHandler: function() {\n                var self = this;\n                return new qq.PasteSupport({\n                    targetElement: this._options.paste.targetElement,\n                    callbacks: {\n                        log: qq.bind(self.log, self),\n                        pasteReceived: function(blob) {\n                            self._handleCheckedCallback({\n                                name: \"onPasteReceived\",\n                                callback: qq.bind(self._options.callbacks.onPasteReceived, self, blob),\n                                onSuccess: qq.bind(self._handlePasteSuccess, self, blob),\n                                identifier: \"pasted image\"\n                            });\n                        }\n                    }\n                });\n            },\n            _createStore: function(initialValue, _readOnlyValues_) {\n                var store = {}, catchall = initialValue, perIdReadOnlyValues = {}, readOnlyValues = _readOnlyValues_, copy = function(orig) {\n                    if (qq.isObject(orig)) {\n                        return qq.extend({}, orig);\n                    }\n                    return orig;\n                }, getReadOnlyValues = function() {\n                    if (qq.isFunction(readOnlyValues)) {\n                        return readOnlyValues();\n                    }\n                    return readOnlyValues;\n                }, includeReadOnlyValues = function(id, existing) {\n                    if (readOnlyValues && qq.isObject(existing)) {\n                        qq.extend(existing, getReadOnlyValues());\n                    }\n                    if (perIdReadOnlyValues[id]) {\n                        qq.extend(existing, perIdReadOnlyValues[id]);\n                    }\n                };\n                return {\n                    set: function(val, id) {\n                        if (id == null) {\n                            store = {};\n                            catchall = copy(val);\n                        } else {\n                            store[id] = copy(val);\n                        }\n                    },\n                    get: function(id) {\n                        var values;\n                        if (id != null && store[id]) {\n                            values = store[id];\n                        } else {\n                            values = copy(catchall);\n                        }\n                        includeReadOnlyValues(id, values);\n                        return copy(values);\n                    },\n                    addReadOnly: function(id, values) {\n                        if (qq.isObject(store)) {\n                            if (id === null) {\n                                if (qq.isFunction(values)) {\n                                    readOnlyValues = values;\n                                } else {\n                                    readOnlyValues = readOnlyValues || {};\n                                    qq.extend(readOnlyValues, values);\n                                }\n                            } else {\n                                perIdReadOnlyValues[id] = perIdReadOnlyValues[id] || {};\n                                qq.extend(perIdReadOnlyValues[id], values);\n                            }\n                        }\n                    },\n                    remove: function(fileId) {\n                        return delete store[fileId];\n                    },\n                    reset: function() {\n                        store = {};\n                        perIdReadOnlyValues = {};\n                        catchall = initialValue;\n                    }\n                };\n            },\n            _createUploadDataTracker: function() {\n                var self = this;\n                return new qq.UploadData({\n                    getName: function(id) {\n                        return self.getName(id);\n                    },\n                    getUuid: function(id) {\n                        return self.getUuid(id);\n                    },\n                    getSize: function(id) {\n                        return self.getSize(id);\n                    },\n                    onStatusChange: function(id, oldStatus, newStatus) {\n                        self._onUploadStatusChange(id, oldStatus, newStatus);\n                        self._options.callbacks.onStatusChange(id, oldStatus, newStatus);\n                        self._maybeAllComplete(id, newStatus);\n                        if (self._totalProgress) {\n                            setTimeout(function() {\n                                self._totalProgress.onStatusChange(id, oldStatus, newStatus);\n                            }, 0);\n                        }\n                    }\n                });\n            },\n            _createUploadButton: function(spec) {\n                var self = this, acceptFiles = spec.accept || this._options.validation.acceptFiles, allowedExtensions = spec.allowedExtensions || this._options.validation.allowedExtensions, button;\n                function allowMultiple() {\n                    if (qq.supportedFeatures.ajaxUploading) {\n                        if (self._options.workarounds.iosEmptyVideos && qq.ios() && !qq.ios6() && self._isAllowedExtension(allowedExtensions, \".mov\")) {\n                            return false;\n                        }\n                        if (spec.multiple === undefined) {\n                            return self._options.multiple;\n                        }\n                        return spec.multiple;\n                    }\n                    return false;\n                }\n                button = new qq.UploadButton({\n                    acceptFiles: acceptFiles,\n                    element: spec.element,\n                    focusClass: this._options.classes.buttonFocus,\n                    folders: spec.folders,\n                    hoverClass: this._options.classes.buttonHover,\n                    ios8BrowserCrashWorkaround: this._options.workarounds.ios8BrowserCrash,\n                    multiple: allowMultiple(),\n                    name: this._options.request.inputName,\n                    onChange: function(input) {\n                        self._onInputChange(input);\n                    },\n                    title: spec.title == null ? this._options.text.fileInputTitle : spec.title\n                });\n                this._disposeSupport.addDisposer(function() {\n                    button.dispose();\n                });\n                self._buttons.push(button);\n                return button;\n            },\n            _createUploadHandler: function(additionalOptions, namespace) {\n                var self = this, lastOnProgress = {}, options = {\n                    debug: this._options.debug,\n                    maxConnections: this._options.maxConnections,\n                    cors: this._options.cors,\n                    paramsStore: this._paramsStore,\n                    endpointStore: this._endpointStore,\n                    chunking: this._options.chunking,\n                    resume: this._options.resume,\n                    blobs: this._options.blobs,\n                    log: qq.bind(self.log, self),\n                    preventRetryParam: this._options.retry.preventRetryResponseProperty,\n                    onProgress: function(id, name, loaded, total) {\n                        if (loaded < 0 || total < 0) {\n                            return;\n                        }\n                        if (lastOnProgress[id]) {\n                            if (lastOnProgress[id].loaded !== loaded || lastOnProgress[id].total !== total) {\n                                self._onProgress(id, name, loaded, total);\n                                self._options.callbacks.onProgress(id, name, loaded, total);\n                            }\n                        } else {\n                            self._onProgress(id, name, loaded, total);\n                            self._options.callbacks.onProgress(id, name, loaded, total);\n                        }\n                        lastOnProgress[id] = {\n                            loaded: loaded,\n                            total: total\n                        };\n                    },\n                    onComplete: function(id, name, result, xhr) {\n                        delete lastOnProgress[id];\n                        var status = self.getUploads({\n                            id: id\n                        }).status, retVal;\n                        if (status === qq.status.UPLOAD_SUCCESSFUL || status === qq.status.UPLOAD_FAILED) {\n                            return;\n                        }\n                        retVal = self._onComplete(id, name, result, xhr);\n                        if (retVal instanceof qq.Promise) {\n                            retVal.done(function() {\n                                self._options.callbacks.onComplete(id, name, result, xhr);\n                            });\n                        } else {\n                            self._options.callbacks.onComplete(id, name, result, xhr);\n                        }\n                    },\n                    onCancel: function(id, name, cancelFinalizationEffort) {\n                        var promise = new qq.Promise();\n                        self._handleCheckedCallback({\n                            name: \"onCancel\",\n                            callback: qq.bind(self._options.callbacks.onCancel, self, id, name),\n                            onFailure: promise.failure,\n                            onSuccess: function() {\n                                cancelFinalizationEffort.then(function() {\n                                    self._onCancel(id, name);\n                                });\n                                promise.success();\n                            },\n                            identifier: id\n                        });\n                        return promise;\n                    },\n                    onUploadPrep: qq.bind(this._onUploadPrep, this),\n                    onUpload: function(id, name) {\n                        self._onUpload(id, name);\n                        var onUploadResult = self._options.callbacks.onUpload(id, name);\n                        if (qq.isGenericPromise(onUploadResult)) {\n                            self.log(qq.format(\"onUpload for {} returned a Promise - waiting for resolution.\", id));\n                            return onUploadResult;\n                        }\n                        return new qq.Promise().success();\n                    },\n                    onUploadChunk: function(id, name, chunkData) {\n                        self._onUploadChunk(id, chunkData);\n                        var onUploadChunkResult = self._options.callbacks.onUploadChunk(id, name, chunkData);\n                        if (qq.isGenericPromise(onUploadChunkResult)) {\n                            self.log(qq.format(\"onUploadChunk for {}.{} returned a Promise - waiting for resolution.\", id, chunkData.partIndex));\n                            return onUploadChunkResult;\n                        }\n                        return new qq.Promise().success();\n                    },\n                    onUploadChunkSuccess: function(id, chunkData, result, xhr) {\n                        self._onUploadChunkSuccess(id, chunkData);\n                        self._options.callbacks.onUploadChunkSuccess.apply(self, arguments);\n                    },\n                    onResume: function(id, name, chunkData, customResumeData) {\n                        return self._options.callbacks.onResume(id, name, chunkData, customResumeData);\n                    },\n                    onAutoRetry: function(id, name, responseJSON, xhr) {\n                        return self._onAutoRetry.apply(self, arguments);\n                    },\n                    onUuidChanged: function(id, newUuid) {\n                        self.log(\"Server requested UUID change from '\" + self.getUuid(id) + \"' to '\" + newUuid + \"'\");\n                        self.setUuid(id, newUuid);\n                    },\n                    getName: qq.bind(self.getName, self),\n                    getUuid: qq.bind(self.getUuid, self),\n                    getSize: qq.bind(self.getSize, self),\n                    setSize: qq.bind(self._setSize, self),\n                    getDataByUuid: function(uuid) {\n                        return self.getUploads({\n                            uuid: uuid\n                        });\n                    },\n                    isQueued: function(id) {\n                        var status = self.getUploads({\n                            id: id\n                        }).status;\n                        return status === qq.status.QUEUED || status === qq.status.SUBMITTED || status === qq.status.UPLOAD_RETRYING || status === qq.status.PAUSED;\n                    },\n                    getIdsInProxyGroup: self._uploadData.getIdsInProxyGroup,\n                    getIdsInBatch: self._uploadData.getIdsInBatch,\n                    isInProgress: function(id) {\n                        return self.getUploads({\n                            id: id\n                        }).status === qq.status.UPLOADING;\n                    },\n                    getCustomResumeData: qq.bind(self._getCustomResumeData, self),\n                    setStatus: function(id, status) {\n                        self._uploadData.setStatus(id, status);\n                    }\n                };\n                qq.each(this._options.request, function(prop, val) {\n                    options[prop] = val;\n                });\n                options.customHeaders = this._customHeadersStore;\n                if (additionalOptions) {\n                    qq.each(additionalOptions, function(key, val) {\n                        options[key] = val;\n                    });\n                }\n                return new qq.UploadHandlerController(options, namespace);\n            },\n            _fileOrBlobRejected: function(id) {\n                this._netUploadedOrQueued--;\n                this._uploadData.setStatus(id, qq.status.REJECTED);\n            },\n            _formatSize: function(bytes) {\n                if (bytes === 0) {\n                    return bytes + this._options.text.sizeSymbols[0];\n                }\n                var i = -1;\n                do {\n                    bytes = bytes / 1e3;\n                    i++;\n                } while (bytes > 999);\n                return Math.max(bytes, .1).toFixed(1) + this._options.text.sizeSymbols[i];\n            },\n            _generateExtraButtonSpecs: function() {\n                var self = this;\n                this._extraButtonSpecs = {};\n                qq.each(this._options.extraButtons, function(idx, extraButtonOptionEntry) {\n                    var multiple = extraButtonOptionEntry.multiple, validation = qq.extend({}, self._options.validation, true), extraButtonSpec = qq.extend({}, extraButtonOptionEntry);\n                    if (multiple === undefined) {\n                        multiple = self._options.multiple;\n                    }\n                    if (extraButtonSpec.validation) {\n                        qq.extend(validation, extraButtonOptionEntry.validation, true);\n                    }\n                    qq.extend(extraButtonSpec, {\n                        multiple: multiple,\n                        validation: validation\n                    }, true);\n                    self._initExtraButton(extraButtonSpec);\n                });\n            },\n            _getButton: function(buttonId) {\n                var extraButtonsSpec = this._extraButtonSpecs[buttonId];\n                if (extraButtonsSpec) {\n                    return extraButtonsSpec.element;\n                } else if (buttonId === this._defaultButtonId) {\n                    return this._options.button;\n                }\n            },\n            _getButtonId: function(buttonOrFileInputOrFile) {\n                var inputs, fileInput, fileBlobOrInput = buttonOrFileInputOrFile;\n                if (fileBlobOrInput instanceof qq.BlobProxy) {\n                    fileBlobOrInput = fileBlobOrInput.referenceBlob;\n                }\n                if (fileBlobOrInput && !qq.isBlob(fileBlobOrInput)) {\n                    if (qq.isFile(fileBlobOrInput)) {\n                        return fileBlobOrInput.qqButtonId;\n                    } else if (fileBlobOrInput.tagName.toLowerCase() === \"input\" && fileBlobOrInput.type.toLowerCase() === \"file\") {\n                        return fileBlobOrInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\n                    }\n                    inputs = fileBlobOrInput.getElementsByTagName(\"input\");\n                    qq.each(inputs, function(idx, input) {\n                        if (input.getAttribute(\"type\") === \"file\") {\n                            fileInput = input;\n                            return false;\n                        }\n                    });\n                    if (fileInput) {\n                        return fileInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\n                    }\n                }\n            },\n            _getCustomResumeData: function(fileId) {\n                return this._customResumeDataStore.get(fileId);\n            },\n            _getNotFinished: function() {\n                return this._uploadData.retrieve({\n                    status: [ qq.status.UPLOADING, qq.status.UPLOAD_RETRYING, qq.status.QUEUED, qq.status.SUBMITTING, qq.status.SUBMITTED, qq.status.PAUSED ]\n                }).length;\n            },\n            _getValidationBase: function(buttonId) {\n                var extraButtonSpec = this._extraButtonSpecs[buttonId];\n                return extraButtonSpec ? extraButtonSpec.validation : this._options.validation;\n            },\n            _getValidationDescriptor: function(fileWrapper) {\n                if (fileWrapper.file instanceof qq.BlobProxy) {\n                    return {\n                        name: qq.getFilename(fileWrapper.file.referenceBlob),\n                        size: fileWrapper.file.referenceBlob.size\n                    };\n                }\n                return {\n                    name: this.getUploads({\n                        id: fileWrapper.id\n                    }).name,\n                    size: this.getUploads({\n                        id: fileWrapper.id\n                    }).size\n                };\n            },\n            _getValidationDescriptors: function(fileWrappers) {\n                var self = this, fileDescriptors = [];\n                qq.each(fileWrappers, function(idx, fileWrapper) {\n                    fileDescriptors.push(self._getValidationDescriptor(fileWrapper));\n                });\n                return fileDescriptors;\n            },\n            _handleCameraAccess: function() {\n                if (this._options.camera.ios && qq.ios()) {\n                    var acceptIosCamera = \"image/*;capture=camera\", button = this._options.camera.button, buttonId = button ? this._getButtonId(button) : this._defaultButtonId, optionRoot = this._options;\n                    if (buttonId && buttonId !== this._defaultButtonId) {\n                        optionRoot = this._extraButtonSpecs[buttonId];\n                    }\n                    optionRoot.multiple = false;\n                    if (optionRoot.validation.acceptFiles === null) {\n                        optionRoot.validation.acceptFiles = acceptIosCamera;\n                    } else {\n                        optionRoot.validation.acceptFiles += \",\" + acceptIosCamera;\n                    }\n                    qq.each(this._buttons, function(idx, button) {\n                        if (button.getButtonId() === buttonId) {\n                            button.setMultiple(optionRoot.multiple);\n                            button.setAcceptFiles(optionRoot.acceptFiles);\n                            return false;\n                        }\n                    });\n                }\n            },\n            _handleCheckedCallback: function(details) {\n                var self = this, callbackRetVal = details.callback();\n                if (qq.isGenericPromise(callbackRetVal)) {\n                    this.log(details.name + \" - waiting for \" + details.name + \" promise to be fulfilled for \" + details.identifier);\n                    return callbackRetVal.then(function(successParam) {\n                        self.log(details.name + \" promise success for \" + details.identifier);\n                        details.onSuccess(successParam);\n                    }, function() {\n                        if (details.onFailure) {\n                            self.log(details.name + \" promise failure for \" + details.identifier);\n                            details.onFailure();\n                        } else {\n                            self.log(details.name + \" promise failure for \" + details.identifier);\n                        }\n                    });\n                }\n                if (callbackRetVal !== false) {\n                    details.onSuccess(callbackRetVal);\n                } else {\n                    if (details.onFailure) {\n                        this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Invoking failure callback.\");\n                        details.onFailure();\n                    } else {\n                        this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Will not proceed.\");\n                    }\n                }\n                return callbackRetVal;\n            },\n            _handleNewFile: function(file, batchId, newFileWrapperList) {\n                var self = this, uuid = qq.getUniqueId(), size = -1, name = qq.getFilename(file), actualFile = file.blob || file, handler = this._customNewFileHandler ? this._customNewFileHandler : qq.bind(self._handleNewFileGeneric, self);\n                if (!qq.isInput(actualFile) && actualFile.size >= 0) {\n                    size = actualFile.size;\n                }\n                handler(actualFile, name, uuid, size, newFileWrapperList, batchId, this._options.request.uuidName, {\n                    uploadData: self._uploadData,\n                    paramsStore: self._paramsStore,\n                    addFileToHandler: function(id, file) {\n                        self._handler.add(id, file);\n                        self._netUploadedOrQueued++;\n                        self._trackButton(id);\n                    }\n                });\n            },\n            _handleNewFileGeneric: function(file, name, uuid, size, fileList, batchId) {\n                var id = this._uploadData.addFile({\n                    uuid: uuid,\n                    name: name,\n                    size: size,\n                    batchId: batchId,\n                    file: file\n                });\n                this._handler.add(id, file);\n                this._trackButton(id);\n                this._netUploadedOrQueued++;\n                fileList.push({\n                    id: id,\n                    file: file\n                });\n            },\n            _handlePasteSuccess: function(blob, extSuppliedName) {\n                var extension = blob.type.split(\"/\")[1], name = extSuppliedName;\n                if (name == null) {\n                    name = this._options.paste.defaultName;\n                }\n                name += \".\" + extension;\n                this.addFiles({\n                    name: name,\n                    blob: blob\n                });\n            },\n            _handleDeleteSuccess: function(id) {\n                if (this.getUploads({\n                    id: id\n                }).status !== qq.status.DELETED) {\n                    var name = this.getName(id);\n                    this._netUploadedOrQueued--;\n                    this._netUploaded--;\n                    this._handler.expunge(id);\n                    this._uploadData.setStatus(id, qq.status.DELETED);\n                    this.log(\"Delete request for '\" + name + \"' has succeeded.\");\n                }\n            },\n            _handleDeleteFailed: function(id, xhrOrXdr) {\n                var name = this.getName(id);\n                this._uploadData.setStatus(id, qq.status.DELETE_FAILED);\n                this.log(\"Delete request for '\" + name + \"' has failed.\", \"error\");\n                if (!xhrOrXdr || xhrOrXdr.withCredentials === undefined) {\n                    this._options.callbacks.onError(id, name, \"Delete request failed\", xhrOrXdr);\n                } else {\n                    this._options.callbacks.onError(id, name, \"Delete request failed with response code \" + xhrOrXdr.status, xhrOrXdr);\n                }\n            },\n            _initExtraButton: function(spec) {\n                var button = this._createUploadButton({\n                    accept: spec.validation.acceptFiles,\n                    allowedExtensions: spec.validation.allowedExtensions,\n                    element: spec.element,\n                    folders: spec.folders,\n                    multiple: spec.multiple,\n                    title: spec.fileInputTitle\n                });\n                this._extraButtonSpecs[button.getButtonId()] = spec;\n            },\n            _initFormSupportAndParams: function() {\n                this._formSupport = qq.FormSupport && new qq.FormSupport(this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this));\n                if (this._formSupport && this._formSupport.attachedToForm) {\n                    this._paramsStore = this._createStore(this._options.request.params, this._formSupport.getFormInputsAsObject);\n                    this._options.autoUpload = this._formSupport.newAutoUpload;\n                    if (this._formSupport.newEndpoint) {\n                        this._options.request.endpoint = this._formSupport.newEndpoint;\n                    }\n                } else {\n                    this._paramsStore = this._createStore(this._options.request.params);\n                }\n            },\n            _isDeletePossible: function() {\n                if (!qq.DeleteFileAjaxRequester || !this._options.deleteFile.enabled) {\n                    return false;\n                }\n                if (this._options.cors.expected) {\n                    if (qq.supportedFeatures.deleteFileCorsXhr) {\n                        return true;\n                    }\n                    if (qq.supportedFeatures.deleteFileCorsXdr && this._options.cors.allowXdr) {\n                        return true;\n                    }\n                    return false;\n                }\n                return true;\n            },\n            _isAllowedExtension: function(allowed, fileName) {\n                var valid = false;\n                if (!allowed.length) {\n                    return true;\n                }\n                qq.each(allowed, function(idx, allowedExt) {\n                    if (qq.isString(allowedExt)) {\n                        var extRegex = new RegExp(\"\\\\.\" + allowedExt + \"$\", \"i\");\n                        if (fileName.match(extRegex) != null) {\n                            valid = true;\n                            return false;\n                        }\n                    }\n                });\n                return valid;\n            },\n            _itemError: function(code, maybeNameOrNames, item) {\n                var message = this._options.messages[code], allowedExtensions = [], names = [].concat(maybeNameOrNames), name = names[0], buttonId = this._getButtonId(item), validationBase = this._getValidationBase(buttonId), extensionsForMessage, placeholderMatch;\n                function r(name, replacement) {\n                    message = message.replace(name, replacement);\n                }\n                qq.each(validationBase.allowedExtensions, function(idx, allowedExtension) {\n                    if (qq.isString(allowedExtension)) {\n                        allowedExtensions.push(allowedExtension);\n                    }\n                });\n                extensionsForMessage = allowedExtensions.join(\", \").toLowerCase();\n                r(\"{file}\", this._options.formatFileName(name));\n                r(\"{extensions}\", extensionsForMessage);\n                r(\"{sizeLimit}\", this._formatSize(validationBase.sizeLimit));\n                r(\"{minSizeLimit}\", this._formatSize(validationBase.minSizeLimit));\n                placeholderMatch = message.match(/(\\{\\w+\\})/g);\n                if (placeholderMatch !== null) {\n                    qq.each(placeholderMatch, function(idx, placeholder) {\n                        r(placeholder, names[idx]);\n                    });\n                }\n                this._options.callbacks.onError(null, name, message, undefined);\n                return message;\n            },\n            _manualRetry: function(id, callback) {\n                if (this._onBeforeManualRetry(id)) {\n                    this._netUploadedOrQueued++;\n                    this._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\n                    if (callback) {\n                        callback(id);\n                    } else {\n                        this._handler.retry(id);\n                    }\n                    return true;\n                }\n            },\n            _maybeAllComplete: function(id, status) {\n                var self = this, notFinished = this._getNotFinished();\n                if (status === qq.status.UPLOAD_SUCCESSFUL) {\n                    this._succeededSinceLastAllComplete.push(id);\n                } else if (status === qq.status.UPLOAD_FAILED) {\n                    this._failedSinceLastAllComplete.push(id);\n                }\n                if (notFinished === 0 && (this._succeededSinceLastAllComplete.length || this._failedSinceLastAllComplete.length)) {\n                    setTimeout(function() {\n                        self._onAllComplete(self._succeededSinceLastAllComplete, self._failedSinceLastAllComplete);\n                    }, 0);\n                }\n            },\n            _maybeHandleIos8SafariWorkaround: function() {\n                var self = this;\n                if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\n                    setTimeout(function() {\n                        window.alert(self._options.messages.unsupportedBrowserIos8Safari);\n                    }, 0);\n                    throw new qq.Error(this._options.messages.unsupportedBrowserIos8Safari);\n                }\n            },\n            _maybeParseAndSendUploadError: function(id, name, response, xhr) {\n                if (!response.success) {\n                    if (xhr && xhr.status !== 200 && !response.error) {\n                        this._options.callbacks.onError(id, name, \"XHR returned response code \" + xhr.status, xhr);\n                    } else {\n                        var errorReason = response.error ? response.error : this._options.text.defaultResponseError;\n                        this._options.callbacks.onError(id, name, errorReason, xhr);\n                    }\n                }\n            },\n            _maybeProcessNextItemAfterOnValidateCallback: function(validItem, items, index, params, endpoint) {\n                var self = this;\n                if (items.length > index) {\n                    if (validItem || !this._options.validation.stopOnFirstInvalidFile) {\n                        setTimeout(function() {\n                            var validationDescriptor = self._getValidationDescriptor(items[index]), buttonId = self._getButtonId(items[index].file), button = self._getButton(buttonId);\n                            self._handleCheckedCallback({\n                                name: \"onValidate\",\n                                callback: qq.bind(self._options.callbacks.onValidate, self, validationDescriptor, button),\n                                onSuccess: qq.bind(self._onValidateCallbackSuccess, self, items, index, params, endpoint),\n                                onFailure: qq.bind(self._onValidateCallbackFailure, self, items, index, params, endpoint),\n                                identifier: \"Item '\" + validationDescriptor.name + \"', size: \" + validationDescriptor.size\n                            });\n                        }, 0);\n                    } else if (!validItem) {\n                        for (;index < items.length; index++) {\n                            self._fileOrBlobRejected(items[index].id);\n                        }\n                    }\n                }\n            },\n            _onAllComplete: function(successful, failed) {\n                this._totalProgress && this._totalProgress.onAllComplete(successful, failed, this._preventRetries);\n                this._options.callbacks.onAllComplete(qq.extend([], successful), qq.extend([], failed));\n                this._succeededSinceLastAllComplete = [];\n                this._failedSinceLastAllComplete = [];\n            },\n            _onAutoRetry: function(id, name, responseJSON, xhr, callback) {\n                var self = this;\n                self._preventRetries[id] = responseJSON[self._options.retry.preventRetryResponseProperty];\n                if (self._shouldAutoRetry(id)) {\n                    var retryWaitPeriod = self._options.retry.autoAttemptDelay * 1e3;\n                    self._maybeParseAndSendUploadError.apply(self, arguments);\n                    self._options.callbacks.onAutoRetry(id, name, self._autoRetries[id]);\n                    self._onBeforeAutoRetry(id, name);\n                    self._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\n                    self._retryTimeouts[id] = setTimeout(function() {\n                        self.log(\"Starting retry for \" + name + \"...\");\n                        if (callback) {\n                            callback(id);\n                        } else {\n                            self._handler.retry(id);\n                        }\n                    }, retryWaitPeriod);\n                    return true;\n                }\n            },\n            _onBeforeAutoRetry: function(id, name) {\n                this.log(\"Waiting \" + this._options.retry.autoAttemptDelay + \" seconds before retrying \" + name + \"...\");\n            },\n            _onBeforeManualRetry: function(id) {\n                var itemLimit = this._currentItemLimit, fileName;\n                if (this._preventRetries[id]) {\n                    this.log(\"Retries are forbidden for id \" + id, \"warn\");\n                    return false;\n                } else if (this._handler.isValid(id)) {\n                    fileName = this.getName(id);\n                    if (this._options.callbacks.onManualRetry(id, fileName) === false) {\n                        return false;\n                    }\n                    if (itemLimit > 0 && this._netUploadedOrQueued + 1 > itemLimit) {\n                        this._itemError(\"retryFailTooManyItems\");\n                        return false;\n                    }\n                    this.log(\"Retrying upload for '\" + fileName + \"' (id: \" + id + \")...\");\n                    return true;\n                } else {\n                    this.log(\"'\" + id + \"' is not a valid file ID\", \"error\");\n                    return false;\n                }\n            },\n            _onCancel: function(id, name) {\n                this._netUploadedOrQueued--;\n                clearTimeout(this._retryTimeouts[id]);\n                var storedItemIndex = qq.indexOf(this._storedIds, id);\n                if (!this._options.autoUpload && storedItemIndex >= 0) {\n                    this._storedIds.splice(storedItemIndex, 1);\n                }\n                this._uploadData.setStatus(id, qq.status.CANCELED);\n            },\n            _onComplete: function(id, name, result, xhr) {\n                if (!result.success) {\n                    this._netUploadedOrQueued--;\n                    this._uploadData.setStatus(id, qq.status.UPLOAD_FAILED);\n                    if (result[this._options.retry.preventRetryResponseProperty] === true) {\n                        this._preventRetries[id] = true;\n                    }\n                } else {\n                    if (result.thumbnailUrl) {\n                        this._thumbnailUrls[id] = result.thumbnailUrl;\n                    }\n                    this._netUploaded++;\n                    this._uploadData.setStatus(id, qq.status.UPLOAD_SUCCESSFUL);\n                }\n                this._maybeParseAndSendUploadError(id, name, result, xhr);\n                return result.success ? true : false;\n            },\n            _onDelete: function(id) {\n                this._uploadData.setStatus(id, qq.status.DELETING);\n            },\n            _onDeleteComplete: function(id, xhrOrXdr, isError) {\n                var name = this.getName(id);\n                if (isError) {\n                    this._handleDeleteFailed(id, xhrOrXdr);\n                } else {\n                    this._handleDeleteSuccess(id);\n                }\n            },\n            _onInputChange: function(input) {\n                var fileIndex;\n                if (qq.supportedFeatures.ajaxUploading) {\n                    for (fileIndex = 0; fileIndex < input.files.length; fileIndex++) {\n                        this._annotateWithButtonId(input.files[fileIndex], input);\n                    }\n                    this.addFiles(input.files);\n                } else if (input.value.length > 0) {\n                    this.addFiles(input);\n                }\n                qq.each(this._buttons, function(idx, button) {\n                    button.reset();\n                });\n            },\n            _onProgress: function(id, name, loaded, total) {\n                this._totalProgress && this._totalProgress.onIndividualProgress(id, loaded, total);\n            },\n            _onSubmit: function(id, name) {},\n            _onSubmitCallbackSuccess: function(id, name) {\n                this._onSubmit.apply(this, arguments);\n                this._uploadData.setStatus(id, qq.status.SUBMITTED);\n                this._onSubmitted.apply(this, arguments);\n                if (this._options.autoUpload) {\n                    this._options.callbacks.onSubmitted.apply(this, arguments);\n                    this._uploadFile(id);\n                } else {\n                    this._storeForLater(id);\n                    this._options.callbacks.onSubmitted.apply(this, arguments);\n                }\n            },\n            _onSubmitDelete: function(id, onSuccessCallback, additionalMandatedParams) {\n                var uuid = this.getUuid(id), adjustedOnSuccessCallback;\n                if (onSuccessCallback) {\n                    adjustedOnSuccessCallback = qq.bind(onSuccessCallback, this, id, uuid, additionalMandatedParams);\n                }\n                if (this._isDeletePossible()) {\n                    this._handleCheckedCallback({\n                        name: \"onSubmitDelete\",\n                        callback: qq.bind(this._options.callbacks.onSubmitDelete, this, id),\n                        onSuccess: adjustedOnSuccessCallback || qq.bind(this._deleteHandler.sendDelete, this, id, uuid, additionalMandatedParams),\n                        identifier: id\n                    });\n                    return true;\n                } else {\n                    this.log(\"Delete request ignored for ID \" + id + \", delete feature is disabled or request not possible \" + \"due to CORS on a user agent that does not support pre-flighting.\", \"warn\");\n                    return false;\n                }\n            },\n            _onSubmitted: function(id) {},\n            _onTotalProgress: function(loaded, total) {\n                this._options.callbacks.onTotalProgress(loaded, total);\n            },\n            _onUploadPrep: function(id) {},\n            _onUpload: function(id, name) {\n                this._uploadData.setStatus(id, qq.status.UPLOADING);\n            },\n            _onUploadChunk: function(id, chunkData) {},\n            _onUploadChunkSuccess: function(id, chunkData) {\n                if (!this._preventRetries[id] && this._options.retry.enableAuto) {\n                    this._autoRetries[id] = 0;\n                }\n            },\n            _onUploadStatusChange: function(id, oldStatus, newStatus) {\n                if (newStatus === qq.status.PAUSED) {\n                    clearTimeout(this._retryTimeouts[id]);\n                }\n            },\n            _onValidateBatchCallbackFailure: function(fileWrappers) {\n                var self = this;\n                qq.each(fileWrappers, function(idx, fileWrapper) {\n                    self._fileOrBlobRejected(fileWrapper.id);\n                });\n            },\n            _onValidateBatchCallbackSuccess: function(validationDescriptors, items, params, endpoint, button) {\n                var errorMessage, itemLimit = this._currentItemLimit, proposedNetFilesUploadedOrQueued = this._netUploadedOrQueued;\n                if (itemLimit === 0 || proposedNetFilesUploadedOrQueued <= itemLimit) {\n                    if (items.length > 0) {\n                        this._handleCheckedCallback({\n                            name: \"onValidate\",\n                            callback: qq.bind(this._options.callbacks.onValidate, this, validationDescriptors[0], button),\n                            onSuccess: qq.bind(this._onValidateCallbackSuccess, this, items, 0, params, endpoint),\n                            onFailure: qq.bind(this._onValidateCallbackFailure, this, items, 0, params, endpoint),\n                            identifier: \"Item '\" + items[0].file.name + \"', size: \" + items[0].file.size\n                        });\n                    } else {\n                        this._itemError(\"noFilesError\");\n                    }\n                } else {\n                    this._onValidateBatchCallbackFailure(items);\n                    errorMessage = this._options.messages.tooManyItemsError.replace(/\\{netItems\\}/g, proposedNetFilesUploadedOrQueued).replace(/\\{itemLimit\\}/g, itemLimit);\n                    this._batchError(errorMessage);\n                }\n            },\n            _onValidateCallbackFailure: function(items, index, params, endpoint) {\n                var nextIndex = index + 1;\n                this._fileOrBlobRejected(items[index].id, items[index].file.name);\n                this._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\n            },\n            _onValidateCallbackSuccess: function(items, index, params, endpoint) {\n                var self = this, nextIndex = index + 1, validationDescriptor = this._getValidationDescriptor(items[index]);\n                this._validateFileOrBlobData(items[index], validationDescriptor).then(function() {\n                    self._upload(items[index].id, params, endpoint);\n                    self._maybeProcessNextItemAfterOnValidateCallback(true, items, nextIndex, params, endpoint);\n                }, function() {\n                    self._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\n                });\n            },\n            _prepareItemsForUpload: function(items, params, endpoint) {\n                if (items.length === 0) {\n                    this._itemError(\"noFilesError\");\n                    return;\n                }\n                var validationDescriptors = this._getValidationDescriptors(items), buttonId = this._getButtonId(items[0].file), button = this._getButton(buttonId);\n                this._handleCheckedCallback({\n                    name: \"onValidateBatch\",\n                    callback: qq.bind(this._options.callbacks.onValidateBatch, this, validationDescriptors, button),\n                    onSuccess: qq.bind(this._onValidateBatchCallbackSuccess, this, validationDescriptors, items, params, endpoint, button),\n                    onFailure: qq.bind(this._onValidateBatchCallbackFailure, this, items),\n                    identifier: \"batch validation\"\n                });\n            },\n            _preventLeaveInProgress: function() {\n                var self = this;\n                this._disposeSupport.attach(window, \"beforeunload\", function(e) {\n                    if (self.getInProgress()) {\n                        e = e || window.event;\n                        e.returnValue = self._options.messages.onLeave;\n                        return self._options.messages.onLeave;\n                    }\n                });\n            },\n            _refreshSessionData: function() {\n                var self = this, options = this._options.session;\n                if (qq.Session && this._options.session.endpoint != null) {\n                    if (!this._session) {\n                        qq.extend(options, {\n                            cors: this._options.cors\n                        });\n                        options.log = qq.bind(this.log, this);\n                        options.addFileRecord = qq.bind(this._addCannedFile, this);\n                        this._session = new qq.Session(options);\n                    }\n                    setTimeout(function() {\n                        self._session.refresh().then(function(response, xhrOrXdr) {\n                            self._sessionRequestComplete();\n                            self._options.callbacks.onSessionRequestComplete(response, true, xhrOrXdr);\n                        }, function(response, xhrOrXdr) {\n                            self._options.callbacks.onSessionRequestComplete(response, false, xhrOrXdr);\n                        });\n                    }, 0);\n                }\n            },\n            _sessionRequestComplete: function() {},\n            _setSize: function(id, newSize) {\n                this._uploadData.updateSize(id, newSize);\n                this._totalProgress && this._totalProgress.onNewSize(id);\n            },\n            _shouldAutoRetry: function(id) {\n                var uploadData = this._uploadData.retrieve({\n                    id: id\n                });\n                if (!this._preventRetries[id] && this._options.retry.enableAuto && uploadData.status !== qq.status.PAUSED) {\n                    if (this._autoRetries[id] === undefined) {\n                        this._autoRetries[id] = 0;\n                    }\n                    if (this._autoRetries[id] < this._options.retry.maxAutoAttempts) {\n                        this._autoRetries[id] += 1;\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _storeForLater: function(id) {\n                this._storedIds.push(id);\n            },\n            _trackButton: function(id) {\n                var buttonId;\n                if (qq.supportedFeatures.ajaxUploading) {\n                    buttonId = this._handler.getFile(id).qqButtonId;\n                } else {\n                    buttonId = this._getButtonId(this._handler.getInput(id));\n                }\n                if (buttonId) {\n                    this._buttonIdsForFileIds[id] = buttonId;\n                }\n            },\n            _updateFormSupportAndParams: function(formElementOrId) {\n                this._options.form.element = formElementOrId;\n                this._formSupport = qq.FormSupport && new qq.FormSupport(this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this));\n                if (this._formSupport && this._formSupport.attachedToForm) {\n                    this._paramsStore.addReadOnly(null, this._formSupport.getFormInputsAsObject);\n                    this._options.autoUpload = this._formSupport.newAutoUpload;\n                    if (this._formSupport.newEndpoint) {\n                        this.setEndpoint(this._formSupport.newEndpoint);\n                    }\n                }\n            },\n            _upload: function(id, params, endpoint) {\n                var name = this.getName(id);\n                if (params) {\n                    this.setParams(params, id);\n                }\n                if (endpoint) {\n                    this.setEndpoint(endpoint, id);\n                }\n                this._handleCheckedCallback({\n                    name: \"onSubmit\",\n                    callback: qq.bind(this._options.callbacks.onSubmit, this, id, name),\n                    onSuccess: qq.bind(this._onSubmitCallbackSuccess, this, id, name),\n                    onFailure: qq.bind(this._fileOrBlobRejected, this, id, name),\n                    identifier: id\n                });\n            },\n            _uploadFile: function(id) {\n                if (!this._handler.upload(id)) {\n                    this._uploadData.setStatus(id, qq.status.QUEUED);\n                }\n            },\n            _uploadStoredFiles: function() {\n                var idToUpload, stillSubmitting, self = this;\n                while (this._storedIds.length) {\n                    idToUpload = this._storedIds.shift();\n                    this._uploadFile(idToUpload);\n                }\n                stillSubmitting = this.getUploads({\n                    status: qq.status.SUBMITTING\n                }).length;\n                if (stillSubmitting) {\n                    qq.log(\"Still waiting for \" + stillSubmitting + \" files to clear submit queue. Will re-parse stored IDs array shortly.\");\n                    setTimeout(function() {\n                        self._uploadStoredFiles();\n                    }, 1e3);\n                }\n            },\n            _validateFileOrBlobData: function(fileWrapper, validationDescriptor) {\n                var self = this, file = function() {\n                    if (fileWrapper.file instanceof qq.BlobProxy) {\n                        return fileWrapper.file.referenceBlob;\n                    }\n                    return fileWrapper.file;\n                }(), name = validationDescriptor.name, size = validationDescriptor.size, buttonId = this._getButtonId(fileWrapper.file), validationBase = this._getValidationBase(buttonId), validityChecker = new qq.Promise();\n                validityChecker.then(function() {}, function() {\n                    self._fileOrBlobRejected(fileWrapper.id, name);\n                });\n                if (qq.isFileOrInput(file) && !this._isAllowedExtension(validationBase.allowedExtensions, name)) {\n                    this._itemError(\"typeError\", name, file);\n                    return validityChecker.failure();\n                }\n                if (!this._options.validation.allowEmpty && size === 0) {\n                    this._itemError(\"emptyError\", name, file);\n                    return validityChecker.failure();\n                }\n                if (size > 0 && validationBase.sizeLimit && size > validationBase.sizeLimit) {\n                    this._itemError(\"sizeError\", name, file);\n                    return validityChecker.failure();\n                }\n                if (size > 0 && size < validationBase.minSizeLimit) {\n                    this._itemError(\"minSizeError\", name, file);\n                    return validityChecker.failure();\n                }\n                if (qq.ImageValidation && qq.supportedFeatures.imagePreviews && qq.isFile(file)) {\n                    new qq.ImageValidation(file, qq.bind(self.log, self)).validate(validationBase.image).then(validityChecker.success, function(errorCode) {\n                        self._itemError(errorCode + \"ImageError\", name, file);\n                        validityChecker.failure();\n                    });\n                } else {\n                    validityChecker.success();\n                }\n                return validityChecker;\n            },\n            _wrapCallbacks: function() {\n                var self, safeCallback, prop;\n                self = this;\n                safeCallback = function(name, callback, args) {\n                    var errorMsg;\n                    try {\n                        return callback.apply(self, args);\n                    } catch (exception) {\n                        errorMsg = exception.message || exception.toString();\n                        self.log(\"Caught exception in '\" + name + \"' callback - \" + errorMsg, \"error\");\n                    }\n                };\n                for (prop in this._options.callbacks) {\n                    (function() {\n                        var callbackName, callbackFunc;\n                        callbackName = prop;\n                        callbackFunc = self._options.callbacks[callbackName];\n                        self._options.callbacks[callbackName] = function() {\n                            return safeCallback(callbackName, callbackFunc, arguments);\n                        };\n                    })();\n                }\n            }\n        };\n    })();\n    (function() {\n        \"use strict\";\n        qq.FineUploaderBasic = function(o) {\n            var self = this;\n            this._options = {\n                debug: false,\n                button: null,\n                multiple: true,\n                maxConnections: 3,\n                disableCancelForFormUploads: false,\n                autoUpload: true,\n                warnBeforeUnload: true,\n                request: {\n                    customHeaders: {},\n                    endpoint: \"/server/upload\",\n                    filenameParam: \"qqfilename\",\n                    forceMultipart: true,\n                    inputName: \"qqfile\",\n                    method: \"POST\",\n                    omitDefaultParams: false,\n                    params: {},\n                    paramsInBody: true,\n                    requireSuccessJson: true,\n                    totalFileSizeName: \"qqtotalfilesize\",\n                    uuidName: \"qquuid\"\n                },\n                validation: {\n                    allowedExtensions: [],\n                    sizeLimit: 0,\n                    minSizeLimit: 0,\n                    itemLimit: 0,\n                    stopOnFirstInvalidFile: true,\n                    acceptFiles: null,\n                    image: {\n                        maxHeight: 0,\n                        maxWidth: 0,\n                        minHeight: 0,\n                        minWidth: 0\n                    },\n                    allowEmpty: false\n                },\n                callbacks: {\n                    onSubmit: function(id, name) {},\n                    onSubmitted: function(id, name) {},\n                    onComplete: function(id, name, responseJSON, maybeXhr) {},\n                    onAllComplete: function(successful, failed) {},\n                    onCancel: function(id, name) {},\n                    onUpload: function(id, name) {},\n                    onUploadChunk: function(id, name, chunkData) {},\n                    onUploadChunkSuccess: function(id, chunkData, responseJSON, xhr) {},\n                    onResume: function(id, fileName, chunkData, customResumeData) {},\n                    onProgress: function(id, name, loaded, total) {},\n                    onTotalProgress: function(loaded, total) {},\n                    onError: function(id, name, reason, maybeXhrOrXdr) {},\n                    onAutoRetry: function(id, name, attemptNumber) {},\n                    onManualRetry: function(id, name) {},\n                    onValidateBatch: function(fileOrBlobData) {},\n                    onValidate: function(fileOrBlobData) {},\n                    onSubmitDelete: function(id) {},\n                    onDelete: function(id) {},\n                    onDeleteComplete: function(id, xhrOrXdr, isError) {},\n                    onPasteReceived: function(blob) {},\n                    onStatusChange: function(id, oldStatus, newStatus) {},\n                    onSessionRequestComplete: function(response, success, xhrOrXdr) {}\n                },\n                messages: {\n                    typeError: \"{file} has an invalid extension. Valid extension(s): {extensions}.\",\n                    sizeError: \"{file} is too large, maximum file size is {sizeLimit}.\",\n                    minSizeError: \"{file} is too small, minimum file size is {minSizeLimit}.\",\n                    emptyError: \"{file} is empty, please select files again without it.\",\n                    noFilesError: \"No files to upload.\",\n                    tooManyItemsError: \"Too many items ({netItems}) would be uploaded.  Item limit is {itemLimit}.\",\n                    maxHeightImageError: \"Image is too tall.\",\n                    maxWidthImageError: \"Image is too wide.\",\n                    minHeightImageError: \"Image is not tall enough.\",\n                    minWidthImageError: \"Image is not wide enough.\",\n                    retryFailTooManyItems: \"Retry failed - you have reached your file limit.\",\n                    onLeave: \"The files are being uploaded, if you leave now the upload will be canceled.\",\n                    unsupportedBrowserIos8Safari: \"Unrecoverable error - this browser does not permit file uploading of any kind due to serious bugs in iOS8 Safari.  Please use iOS8 Chrome until Apple fixes these issues.\"\n                },\n                retry: {\n                    enableAuto: false,\n                    maxAutoAttempts: 3,\n                    autoAttemptDelay: 5,\n                    preventRetryResponseProperty: \"preventRetry\"\n                },\n                classes: {\n                    buttonHover: \"qq-upload-button-hover\",\n                    buttonFocus: \"qq-upload-button-focus\"\n                },\n                chunking: {\n                    enabled: false,\n                    concurrent: {\n                        enabled: false\n                    },\n                    mandatory: false,\n                    paramNames: {\n                        partIndex: \"qqpartindex\",\n                        partByteOffset: \"qqpartbyteoffset\",\n                        chunkSize: \"qqchunksize\",\n                        totalFileSize: \"qqtotalfilesize\",\n                        totalParts: \"qqtotalparts\"\n                    },\n                    partSize: function(id) {\n                        return 2e6;\n                    },\n                    success: {\n                        endpoint: null,\n                        headers: function(id) {\n                            return null;\n                        },\n                        jsonPayload: false,\n                        method: \"POST\",\n                        params: function(id) {\n                            return null;\n                        },\n                        resetOnStatus: []\n                    }\n                },\n                resume: {\n                    enabled: false,\n                    recordsExpireIn: 7,\n                    paramNames: {\n                        resuming: \"qqresume\"\n                    },\n                    customKeys: function(fileId) {\n                        return [];\n                    }\n                },\n                formatFileName: function(fileOrBlobName) {\n                    return fileOrBlobName;\n                },\n                text: {\n                    defaultResponseError: \"Upload failure reason unknown\",\n                    fileInputTitle: \"file input\",\n                    sizeSymbols: [ \"kB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\" ]\n                },\n                deleteFile: {\n                    enabled: false,\n                    method: \"DELETE\",\n                    endpoint: \"/server/upload\",\n                    customHeaders: {},\n                    params: {}\n                },\n                cors: {\n                    expected: false,\n                    sendCredentials: false,\n                    allowXdr: false\n                },\n                blobs: {\n                    defaultName: \"misc_data\"\n                },\n                paste: {\n                    targetElement: null,\n                    defaultName: \"pasted_image\"\n                },\n                camera: {\n                    ios: false,\n                    button: null\n                },\n                extraButtons: [],\n                session: {\n                    endpoint: null,\n                    params: {},\n                    customHeaders: {},\n                    refreshOnReset: true\n                },\n                form: {\n                    element: \"qq-form\",\n                    autoUpload: false,\n                    interceptSubmit: true\n                },\n                scaling: {\n                    customResizer: null,\n                    sendOriginal: true,\n                    orient: true,\n                    defaultType: null,\n                    defaultQuality: 80,\n                    failureText: \"Failed to scale\",\n                    includeExif: false,\n                    sizes: []\n                },\n                workarounds: {\n                    iosEmptyVideos: true,\n                    ios8SafariUploads: true,\n                    ios8BrowserCrash: false\n                }\n            };\n            qq.extend(this._options, o, true);\n            this._buttons = [];\n            this._extraButtonSpecs = {};\n            this._buttonIdsForFileIds = [];\n            this._wrapCallbacks();\n            this._disposeSupport = new qq.DisposeSupport();\n            this._storedIds = [];\n            this._autoRetries = [];\n            this._retryTimeouts = [];\n            this._preventRetries = [];\n            this._thumbnailUrls = [];\n            this._netUploadedOrQueued = 0;\n            this._netUploaded = 0;\n            this._uploadData = this._createUploadDataTracker();\n            this._initFormSupportAndParams();\n            this._customHeadersStore = this._createStore(this._options.request.customHeaders);\n            this._deleteFileCustomHeadersStore = this._createStore(this._options.deleteFile.customHeaders);\n            this._deleteFileParamsStore = this._createStore(this._options.deleteFile.params);\n            this._endpointStore = this._createStore(this._options.request.endpoint);\n            this._deleteFileEndpointStore = this._createStore(this._options.deleteFile.endpoint);\n            this._handler = this._createUploadHandler();\n            this._deleteHandler = qq.DeleteFileAjaxRequester && this._createDeleteHandler();\n            if (this._options.button) {\n                this._defaultButtonId = this._createUploadButton({\n                    element: this._options.button,\n                    title: this._options.text.fileInputTitle\n                }).getButtonId();\n            }\n            this._generateExtraButtonSpecs();\n            this._handleCameraAccess();\n            if (this._options.paste.targetElement) {\n                if (qq.PasteSupport) {\n                    this._pasteHandler = this._createPasteHandler();\n                } else {\n                    this.log(\"Paste support module not found\", \"error\");\n                }\n            }\n            this._options.warnBeforeUnload && this._preventLeaveInProgress();\n            this._imageGenerator = qq.ImageGenerator && new qq.ImageGenerator(qq.bind(this.log, this));\n            this._refreshSessionData();\n            this._succeededSinceLastAllComplete = [];\n            this._failedSinceLastAllComplete = [];\n            this._scaler = qq.Scaler && new qq.Scaler(this._options.scaling, qq.bind(this.log, this)) || {};\n            if (this._scaler.enabled) {\n                this._customNewFileHandler = qq.bind(this._scaler.handleNewFile, this._scaler);\n            }\n            if (qq.TotalProgress && qq.supportedFeatures.progressBar) {\n                this._totalProgress = new qq.TotalProgress(qq.bind(this._onTotalProgress, this), function(id) {\n                    var entry = self._uploadData.retrieve({\n                        id: id\n                    });\n                    return entry && entry.size || 0;\n                });\n            }\n            this._currentItemLimit = this._options.validation.itemLimit;\n            this._customResumeDataStore = this._createStore();\n        };\n        qq.FineUploaderBasic.prototype = qq.basePublicApi;\n        qq.extend(qq.FineUploaderBasic.prototype, qq.basePrivateApi);\n    })();\n    qq.AjaxRequester = function(o) {\n        \"use strict\";\n        var log, shouldParamsBeInQueryString, queue = [], requestData = {}, options = {\n            acceptHeader: null,\n            validMethods: [ \"PATCH\", \"POST\", \"PUT\" ],\n            method: \"POST\",\n            contentType: \"application/x-www-form-urlencoded\",\n            maxConnections: 3,\n            customHeaders: {},\n            endpointStore: {},\n            paramsStore: {},\n            mandatedParams: {},\n            allowXRequestedWithAndCacheControl: true,\n            successfulResponseCodes: {\n                DELETE: [ 200, 202, 204 ],\n                PATCH: [ 200, 201, 202, 203, 204 ],\n                POST: [ 200, 201, 202, 203, 204 ],\n                PUT: [ 200, 201, 202, 203, 204 ],\n                GET: [ 200 ]\n            },\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onSend: function(id) {},\n            onComplete: function(id, xhrOrXdr, isError) {},\n            onProgress: null\n        };\n        qq.extend(options, o);\n        log = options.log;\n        if (qq.indexOf(options.validMethods, options.method) < 0) {\n            throw new Error(\"'\" + options.method + \"' is not a supported method for this type of request!\");\n        }\n        function isSimpleMethod() {\n            return qq.indexOf([ \"GET\", \"POST\", \"HEAD\" ], options.method) >= 0;\n        }\n        function containsNonSimpleHeaders(headers) {\n            var containsNonSimple = false;\n            qq.each(containsNonSimple, function(idx, header) {\n                if (qq.indexOf([ \"Accept\", \"Accept-Language\", \"Content-Language\", \"Content-Type\" ], header) < 0) {\n                    containsNonSimple = true;\n                    return false;\n                }\n            });\n            return containsNonSimple;\n        }\n        function isXdr(xhr) {\n            return options.cors.expected && xhr.withCredentials === undefined;\n        }\n        function getCorsAjaxTransport() {\n            var xhrOrXdr;\n            if (window.XMLHttpRequest || window.ActiveXObject) {\n                xhrOrXdr = qq.createXhrInstance();\n                if (xhrOrXdr.withCredentials === undefined) {\n                    xhrOrXdr = new XDomainRequest();\n                    xhrOrXdr.onload = function() {};\n                    xhrOrXdr.onerror = function() {};\n                    xhrOrXdr.ontimeout = function() {};\n                    xhrOrXdr.onprogress = function() {};\n                }\n            }\n            return xhrOrXdr;\n        }\n        function getXhrOrXdr(id, suppliedXhr) {\n            var xhrOrXdr = requestData[id] && requestData[id].xhr;\n            if (!xhrOrXdr) {\n                if (suppliedXhr) {\n                    xhrOrXdr = suppliedXhr;\n                } else {\n                    if (options.cors.expected) {\n                        xhrOrXdr = getCorsAjaxTransport();\n                    } else {\n                        xhrOrXdr = qq.createXhrInstance();\n                    }\n                }\n                requestData[id].xhr = xhrOrXdr;\n            }\n            return xhrOrXdr;\n        }\n        function dequeue(id) {\n            var i = qq.indexOf(queue, id), max = options.maxConnections, nextId;\n            delete requestData[id];\n            queue.splice(i, 1);\n            if (queue.length >= max && i < max) {\n                nextId = queue[max - 1];\n                sendRequest(nextId);\n            }\n        }\n        function onComplete(id, xdrError) {\n            var xhr = getXhrOrXdr(id), method = options.method, isError = xdrError === true;\n            dequeue(id);\n            if (isError) {\n                log(method + \" request for \" + id + \" has failed\", \"error\");\n            } else if (!isXdr(xhr) && !isResponseSuccessful(xhr.status)) {\n                isError = true;\n                log(method + \" request for \" + id + \" has failed - response code \" + xhr.status, \"error\");\n            }\n            options.onComplete(id, xhr, isError);\n        }\n        function getParams(id) {\n            var onDemandParams = requestData[id].additionalParams, mandatedParams = options.mandatedParams, params;\n            if (options.paramsStore.get) {\n                params = options.paramsStore.get(id);\n            }\n            if (onDemandParams) {\n                qq.each(onDemandParams, function(name, val) {\n                    params = params || {};\n                    params[name] = val;\n                });\n            }\n            if (mandatedParams) {\n                qq.each(mandatedParams, function(name, val) {\n                    params = params || {};\n                    params[name] = val;\n                });\n            }\n            return params;\n        }\n        function sendRequest(id, optXhr) {\n            var xhr = getXhrOrXdr(id, optXhr), method = options.method, params = getParams(id), payload = requestData[id].payload, url;\n            options.onSend(id);\n            url = createUrl(id, params, requestData[id].additionalQueryParams);\n            if (isXdr(xhr)) {\n                xhr.onload = getXdrLoadHandler(id);\n                xhr.onerror = getXdrErrorHandler(id);\n            } else {\n                xhr.onreadystatechange = getXhrReadyStateChangeHandler(id);\n            }\n            registerForUploadProgress(id);\n            xhr.open(method, url, true);\n            if (options.cors.expected && options.cors.sendCredentials && !isXdr(xhr)) {\n                xhr.withCredentials = true;\n            }\n            setHeaders(id);\n            log(\"Sending \" + method + \" request for \" + id);\n            if (payload) {\n                xhr.send(payload);\n            } else if (shouldParamsBeInQueryString || !params) {\n                xhr.send();\n            } else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/x-www-form-urlencoded\") >= 0) {\n                xhr.send(qq.obj2url(params, \"\"));\n            } else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/json\") >= 0) {\n                xhr.send(JSON.stringify(params));\n            } else {\n                xhr.send(params);\n            }\n            return xhr;\n        }\n        function createUrl(id, params, additionalQueryParams) {\n            var endpoint = options.endpointStore.get(id), addToPath = requestData[id].addToPath;\n            if (addToPath != undefined) {\n                endpoint += \"/\" + addToPath;\n            }\n            if (shouldParamsBeInQueryString && params) {\n                endpoint = qq.obj2url(params, endpoint);\n            }\n            if (additionalQueryParams) {\n                endpoint = qq.obj2url(additionalQueryParams, endpoint);\n            }\n            return endpoint;\n        }\n        function getXhrReadyStateChangeHandler(id) {\n            return function() {\n                if (getXhrOrXdr(id).readyState === 4) {\n                    onComplete(id);\n                }\n            };\n        }\n        function registerForUploadProgress(id) {\n            var onProgress = options.onProgress;\n            if (onProgress) {\n                getXhrOrXdr(id).upload.onprogress = function(e) {\n                    if (e.lengthComputable) {\n                        onProgress(id, e.loaded, e.total);\n                    }\n                };\n            }\n        }\n        function getXdrLoadHandler(id) {\n            return function() {\n                onComplete(id);\n            };\n        }\n        function getXdrErrorHandler(id) {\n            return function() {\n                onComplete(id, true);\n            };\n        }\n        function setHeaders(id) {\n            var xhr = getXhrOrXdr(id), customHeaders = options.customHeaders, onDemandHeaders = requestData[id].additionalHeaders || {}, method = options.method, allHeaders = {};\n            if (!isXdr(xhr)) {\n                options.acceptHeader && xhr.setRequestHeader(\"Accept\", options.acceptHeader);\n                if (options.allowXRequestedWithAndCacheControl) {\n                    if (!options.cors.expected || (!isSimpleMethod() || containsNonSimpleHeaders(customHeaders))) {\n                        xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n                        xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n                    }\n                }\n                if (options.contentType && (method === \"POST\" || method === \"PUT\")) {\n                    xhr.setRequestHeader(\"Content-Type\", options.contentType);\n                }\n                qq.extend(allHeaders, qq.isFunction(customHeaders) ? customHeaders(id) : customHeaders);\n                qq.extend(allHeaders, onDemandHeaders);\n                qq.each(allHeaders, function(name, val) {\n                    xhr.setRequestHeader(name, val);\n                });\n            }\n        }\n        function isResponseSuccessful(responseCode) {\n            return qq.indexOf(options.successfulResponseCodes[options.method], responseCode) >= 0;\n        }\n        function prepareToSend(id, optXhr, addToPath, additionalParams, additionalQueryParams, additionalHeaders, payload) {\n            requestData[id] = {\n                addToPath: addToPath,\n                additionalParams: additionalParams,\n                additionalQueryParams: additionalQueryParams,\n                additionalHeaders: additionalHeaders,\n                payload: payload\n            };\n            var len = queue.push(id);\n            if (len <= options.maxConnections) {\n                return sendRequest(id, optXhr);\n            }\n        }\n        shouldParamsBeInQueryString = options.method === \"GET\" || options.method === \"DELETE\";\n        qq.extend(this, {\n            initTransport: function(id) {\n                var path, params, headers, payload, cacheBuster, additionalQueryParams;\n                return {\n                    withPath: function(appendToPath) {\n                        path = appendToPath;\n                        return this;\n                    },\n                    withParams: function(additionalParams) {\n                        params = additionalParams;\n                        return this;\n                    },\n                    withQueryParams: function(_additionalQueryParams_) {\n                        additionalQueryParams = _additionalQueryParams_;\n                        return this;\n                    },\n                    withHeaders: function(additionalHeaders) {\n                        headers = additionalHeaders;\n                        return this;\n                    },\n                    withPayload: function(thePayload) {\n                        payload = thePayload;\n                        return this;\n                    },\n                    withCacheBuster: function() {\n                        cacheBuster = true;\n                        return this;\n                    },\n                    send: function(optXhr) {\n                        if (cacheBuster && qq.indexOf([ \"GET\", \"DELETE\" ], options.method) >= 0) {\n                            params.qqtimestamp = new Date().getTime();\n                        }\n                        return prepareToSend(id, optXhr, path, params, additionalQueryParams, headers, payload);\n                    }\n                };\n            },\n            canceled: function(id) {\n                dequeue(id);\n            }\n        });\n    };\n    qq.UploadHandler = function(spec) {\n        \"use strict\";\n        var proxy = spec.proxy, fileState = {}, onCancel = proxy.onCancel, getName = proxy.getName;\n        qq.extend(this, {\n            add: function(id, fileItem) {\n                fileState[id] = fileItem;\n                fileState[id].temp = {};\n            },\n            cancel: function(id) {\n                var self = this, cancelFinalizationEffort = new qq.Promise(), onCancelRetVal = onCancel(id, getName(id), cancelFinalizationEffort);\n                onCancelRetVal.then(function() {\n                    if (self.isValid(id)) {\n                        fileState[id].canceled = true;\n                        self.expunge(id);\n                    }\n                    cancelFinalizationEffort.success();\n                });\n            },\n            expunge: function(id) {\n                delete fileState[id];\n            },\n            getThirdPartyFileId: function(id) {\n                return fileState[id].key;\n            },\n            isValid: function(id) {\n                return fileState[id] !== undefined;\n            },\n            reset: function() {\n                fileState = {};\n            },\n            _getFileState: function(id) {\n                return fileState[id];\n            },\n            _setThirdPartyFileId: function(id, thirdPartyFileId) {\n                fileState[id].key = thirdPartyFileId;\n            },\n            _wasCanceled: function(id) {\n                return !!fileState[id].canceled;\n            }\n        });\n    };\n    qq.UploadHandlerController = function(o, namespace) {\n        \"use strict\";\n        var controller = this, chunkingPossible = false, concurrentChunkingPossible = false, chunking, preventRetryResponse, log, handler, options = {\n            paramsStore: {},\n            maxConnections: 3,\n            chunking: {\n                enabled: false,\n                multiple: {\n                    enabled: false\n                }\n            },\n            log: function(str, level) {},\n            onProgress: function(id, fileName, loaded, total) {},\n            onComplete: function(id, fileName, response, xhr) {},\n            onCancel: function(id, fileName) {},\n            onUploadPrep: function(id) {},\n            onUpload: function(id, fileName) {},\n            onUploadChunk: function(id, fileName, chunkData) {},\n            onUploadChunkSuccess: function(id, chunkData, response, xhr) {},\n            onAutoRetry: function(id, fileName, response, xhr) {},\n            onResume: function(id, fileName, chunkData, customResumeData) {},\n            onUuidChanged: function(id, newUuid) {},\n            getName: function(id) {},\n            setSize: function(id, newSize) {},\n            isQueued: function(id) {},\n            getIdsInProxyGroup: function(id) {},\n            getIdsInBatch: function(id) {},\n            isInProgress: function(id) {}\n        }, chunked = {\n            done: function(id, chunkIdx, response, xhr) {\n                var chunkData = handler._getChunkData(id, chunkIdx);\n                handler._getFileState(id).attemptingResume = false;\n                delete handler._getFileState(id).temp.chunkProgress[chunkIdx];\n                handler._getFileState(id).loaded += chunkData.size;\n                options.onUploadChunkSuccess(id, handler._getChunkDataForCallback(chunkData), response, xhr);\n            },\n            finalize: function(id) {\n                var size = options.getSize(id), name = options.getName(id);\n                log(\"All chunks have been uploaded for \" + id + \" - finalizing....\");\n                handler.finalizeChunks(id).then(function(response, xhr) {\n                    log(\"Finalize successful for \" + id);\n                    var normaizedResponse = upload.normalizeResponse(response, true);\n                    options.onProgress(id, name, size, size);\n                    handler._maybeDeletePersistedChunkData(id);\n                    upload.cleanup(id, normaizedResponse, xhr);\n                }, function(response, xhr) {\n                    var normalizedResponse = upload.normalizeResponse(response, false);\n                    log(\"Problem finalizing chunks for file ID \" + id + \" - \" + normalizedResponse.error, \"error\");\n                    if (normalizedResponse.reset || xhr && options.chunking.success.resetOnStatus.indexOf(xhr.status) >= 0) {\n                        chunked.reset(id);\n                    }\n                    if (!options.onAutoRetry(id, name, normalizedResponse, xhr)) {\n                        upload.cleanup(id, normalizedResponse, xhr);\n                    }\n                });\n            },\n            handleFailure: function(chunkIdx, id, response, xhr) {\n                var name = options.getName(id);\n                log(\"Chunked upload request failed for \" + id + \", chunk \" + chunkIdx);\n                handler.clearCachedChunk(id, chunkIdx);\n                var responseToReport = upload.normalizeResponse(response, false), inProgressIdx;\n                if (responseToReport.reset) {\n                    chunked.reset(id);\n                } else {\n                    var inProgressChunksArray = handler._getFileState(id).chunking.inProgress;\n                    inProgressIdx = inProgressChunksArray ? qq.indexOf(inProgressChunksArray, chunkIdx) : -1;\n                    if (inProgressIdx >= 0) {\n                        handler._getFileState(id).chunking.inProgress.splice(inProgressIdx, 1);\n                        handler._getFileState(id).chunking.remaining.unshift(chunkIdx);\n                    }\n                }\n                if (!handler._getFileState(id).temp.ignoreFailure) {\n                    if (concurrentChunkingPossible) {\n                        handler._getFileState(id).temp.ignoreFailure = true;\n                        log(qq.format(\"Going to attempt to abort these chunks: {}. These are currently in-progress: {}.\", JSON.stringify(Object.keys(handler._getXhrs(id))), JSON.stringify(handler._getFileState(id).chunking.inProgress)));\n                        qq.each(handler._getXhrs(id), function(ckid, ckXhr) {\n                            log(qq.format(\"Attempting to abort file {}.{}. XHR readyState {}. \", id, ckid, ckXhr.readyState));\n                            ckXhr.abort();\n                            ckXhr._cancelled = true;\n                        });\n                        handler.moveInProgressToRemaining(id);\n                        connectionManager.free(id, true);\n                    }\n                    if (!options.onAutoRetry(id, name, responseToReport, xhr)) {\n                        upload.cleanup(id, responseToReport, xhr);\n                    }\n                }\n            },\n            hasMoreParts: function(id) {\n                return !!handler._getFileState(id).chunking.remaining.length;\n            },\n            nextPart: function(id) {\n                var nextIdx = handler._getFileState(id).chunking.remaining.shift();\n                if (nextIdx >= handler._getTotalChunks(id)) {\n                    nextIdx = null;\n                }\n                return nextIdx;\n            },\n            reset: function(id) {\n                log(\"Server or callback has ordered chunking effort to be restarted on next attempt for item ID \" + id, \"error\");\n                handler._maybeDeletePersistedChunkData(id);\n                handler.reevaluateChunking(id);\n                handler._getFileState(id).loaded = 0;\n                handler._getFileState(id).attemptingResume = false;\n            },\n            sendNext: function(id) {\n                var size = options.getSize(id), name = options.getName(id), chunkIdx = chunked.nextPart(id), chunkData = handler._getChunkData(id, chunkIdx), fileState = handler._getFileState(id), resuming = fileState.attemptingResume, inProgressChunks = fileState.chunking.inProgress || [];\n                if (fileState.loaded == null) {\n                    fileState.loaded = 0;\n                }\n                if (resuming && options.onResume(id, name, chunkData, fileState.customResumeData) === false) {\n                    chunked.reset(id);\n                    chunkIdx = chunked.nextPart(id);\n                    chunkData = handler._getChunkData(id, chunkIdx);\n                    resuming = false;\n                }\n                if (chunkIdx == null && inProgressChunks.length === 0) {\n                    chunked.finalize(id);\n                } else {\n                    inProgressChunks.push(chunkIdx);\n                    handler._getFileState(id).chunking.inProgress = inProgressChunks;\n                    if (concurrentChunkingPossible) {\n                        connectionManager.open(id, chunkIdx);\n                    }\n                    if (concurrentChunkingPossible && connectionManager.available() && handler._getFileState(id).chunking.remaining.length) {\n                        chunked.sendNext(id);\n                    }\n                    if (chunkData.blob.size === 0) {\n                        log(qq.format(\"Chunk {} for file {} will not be uploaded, zero sized chunk.\", chunkIdx, id), \"error\");\n                        chunked.handleFailure(chunkIdx, id, \"File is no longer available\", null);\n                    }\n                    var onUploadChunkPromise = options.onUploadChunk(id, name, handler._getChunkDataForCallback(chunkData));\n                    onUploadChunkPromise.then(function(requestOverrides) {\n                        if (!options.isInProgress(id)) {\n                            log(qq.format(\"Not sending chunked upload request for item {}.{} - no longer in progress.\", id, chunkIdx));\n                        } else {\n                            log(qq.format(\"Sending chunked upload request for item {}.{}, bytes {}-{} of {}.\", id, chunkIdx, chunkData.start + 1, chunkData.end, size));\n                            var uploadChunkData = {\n                                chunkIdx: chunkIdx,\n                                id: id,\n                                overrides: requestOverrides,\n                                resuming: resuming\n                            };\n                            handler.uploadChunk(uploadChunkData).then(function success(response, xhr) {\n                                log(\"Chunked upload request succeeded for \" + id + \", chunk \" + chunkIdx);\n                                handler.clearCachedChunk(id, chunkIdx);\n                                var inProgressChunks = handler._getFileState(id).chunking.inProgress || [], responseToReport = upload.normalizeResponse(response, true), inProgressChunkIdx = qq.indexOf(inProgressChunks, chunkIdx);\n                                log(qq.format(\"Chunk {} for file {} uploaded successfully.\", chunkIdx, id));\n                                chunked.done(id, chunkIdx, responseToReport, xhr);\n                                if (inProgressChunkIdx >= 0) {\n                                    inProgressChunks.splice(inProgressChunkIdx, 1);\n                                }\n                                handler._maybePersistChunkedState(id);\n                                if (!chunked.hasMoreParts(id) && inProgressChunks.length === 0) {\n                                    chunked.finalize(id);\n                                } else if (chunked.hasMoreParts(id)) {\n                                    chunked.sendNext(id);\n                                } else {\n                                    log(qq.format(\"File ID {} has no more chunks to send and these chunk indexes are still marked as in-progress: {}\", id, JSON.stringify(inProgressChunks)));\n                                }\n                            }, function failure(response, xhr) {\n                                chunked.handleFailure(chunkIdx, id, response, xhr);\n                            }).done(function() {\n                                handler.clearXhr(id, chunkIdx);\n                            });\n                        }\n                    }, function(error) {\n                        chunked.handleFailure(chunkIdx, id, error, null);\n                    });\n                }\n            }\n        }, connectionManager = {\n            _open: [],\n            _openChunks: {},\n            _waiting: [],\n            available: function() {\n                var max = options.maxConnections, openChunkEntriesCount = 0, openChunksCount = 0;\n                qq.each(connectionManager._openChunks, function(fileId, openChunkIndexes) {\n                    openChunkEntriesCount++;\n                    openChunksCount += openChunkIndexes.length;\n                });\n                return max - (connectionManager._open.length - openChunkEntriesCount + openChunksCount);\n            },\n            free: function(id, dontAllowNext) {\n                var allowNext = !dontAllowNext, waitingIndex = qq.indexOf(connectionManager._waiting, id), connectionsIndex = qq.indexOf(connectionManager._open, id), nextId;\n                delete connectionManager._openChunks[id];\n                if (upload.getProxyOrBlob(id) instanceof qq.BlobProxy) {\n                    log(\"Generated blob upload has ended for \" + id + \", disposing generated blob.\");\n                    delete handler._getFileState(id).file;\n                }\n                if (waitingIndex >= 0) {\n                    connectionManager._waiting.splice(waitingIndex, 1);\n                } else if (allowNext && connectionsIndex >= 0) {\n                    connectionManager._open.splice(connectionsIndex, 1);\n                    nextId = connectionManager._waiting.shift();\n                    if (nextId >= 0) {\n                        connectionManager._open.push(nextId);\n                        upload.start(nextId);\n                    }\n                }\n            },\n            getWaitingOrConnected: function() {\n                var waitingOrConnected = [];\n                qq.each(connectionManager._openChunks, function(fileId, chunks) {\n                    if (chunks && chunks.length) {\n                        waitingOrConnected.push(parseInt(fileId));\n                    }\n                });\n                qq.each(connectionManager._open, function(idx, fileId) {\n                    if (!connectionManager._openChunks[fileId]) {\n                        waitingOrConnected.push(parseInt(fileId));\n                    }\n                });\n                waitingOrConnected = waitingOrConnected.concat(connectionManager._waiting);\n                return waitingOrConnected;\n            },\n            isUsingConnection: function(id) {\n                return qq.indexOf(connectionManager._open, id) >= 0;\n            },\n            open: function(id, chunkIdx) {\n                if (chunkIdx == null) {\n                    connectionManager._waiting.push(id);\n                }\n                if (connectionManager.available()) {\n                    if (chunkIdx == null) {\n                        connectionManager._waiting.pop();\n                        connectionManager._open.push(id);\n                    } else {\n                        (function() {\n                            var openChunksEntry = connectionManager._openChunks[id] || [];\n                            openChunksEntry.push(chunkIdx);\n                            connectionManager._openChunks[id] = openChunksEntry;\n                        })();\n                    }\n                    return true;\n                }\n                return false;\n            },\n            reset: function() {\n                connectionManager._waiting = [];\n                connectionManager._open = [];\n            }\n        }, simple = {\n            send: function(id, name) {\n                var fileState = handler._getFileState(id);\n                if (!fileState) {\n                    log(\"Ignoring send request as this upload may have been cancelled, File ID \" + id, \"warn\");\n                    return;\n                }\n                fileState.loaded = 0;\n                log(\"Sending simple upload request for \" + id);\n                handler.uploadFile(id).then(function(response, optXhr) {\n                    log(\"Simple upload request succeeded for \" + id);\n                    var responseToReport = upload.normalizeResponse(response, true), size = options.getSize(id);\n                    options.onProgress(id, name, size, size);\n                    upload.maybeNewUuid(id, responseToReport);\n                    upload.cleanup(id, responseToReport, optXhr);\n                }, function(response, optXhr) {\n                    log(\"Simple upload request failed for \" + id);\n                    var responseToReport = upload.normalizeResponse(response, false);\n                    if (!options.onAutoRetry(id, name, responseToReport, optXhr)) {\n                        upload.cleanup(id, responseToReport, optXhr);\n                    }\n                });\n            }\n        }, upload = {\n            cancel: function(id) {\n                log(\"Cancelling \" + id);\n                options.paramsStore.remove(id);\n                connectionManager.free(id);\n            },\n            cleanup: function(id, response, optXhr) {\n                var name = options.getName(id);\n                options.onComplete(id, name, response, optXhr);\n                if (handler._getFileState(id)) {\n                    handler._clearXhrs && handler._clearXhrs(id);\n                }\n                connectionManager.free(id);\n            },\n            getProxyOrBlob: function(id) {\n                return handler.getProxy && handler.getProxy(id) || handler.getFile && handler.getFile(id);\n            },\n            initHandler: function() {\n                var handlerType = namespace ? qq[namespace] : qq.traditional, handlerModuleSubtype = qq.supportedFeatures.ajaxUploading ? \"Xhr\" : \"Form\";\n                handler = new handlerType[handlerModuleSubtype + \"UploadHandler\"](options, {\n                    getCustomResumeData: options.getCustomResumeData,\n                    getDataByUuid: options.getDataByUuid,\n                    getName: options.getName,\n                    getSize: options.getSize,\n                    getUuid: options.getUuid,\n                    log: log,\n                    onCancel: options.onCancel,\n                    onProgress: options.onProgress,\n                    onUuidChanged: options.onUuidChanged,\n                    onFinalizing: function(id) {\n                        options.setStatus(id, qq.status.UPLOAD_FINALIZING);\n                    }\n                });\n                if (handler._removeExpiredChunkingRecords) {\n                    handler._removeExpiredChunkingRecords();\n                }\n            },\n            isDeferredEligibleForUpload: function(id) {\n                return options.isQueued(id);\n            },\n            maybeDefer: function(id, blob) {\n                if (blob && !handler.getFile(id) && blob instanceof qq.BlobProxy) {\n                    options.onUploadPrep(id);\n                    log(\"Attempting to generate a blob on-demand for \" + id);\n                    blob.create().then(function(generatedBlob) {\n                        log(\"Generated an on-demand blob for \" + id);\n                        handler.updateBlob(id, generatedBlob);\n                        options.setSize(id, generatedBlob.size);\n                        handler.reevaluateChunking(id);\n                        upload.maybeSendDeferredFiles(id);\n                    }, function(errorMessage) {\n                        var errorResponse = {};\n                        if (errorMessage) {\n                            errorResponse.error = errorMessage;\n                        }\n                        log(qq.format(\"Failed to generate blob for ID {}.  Error message: {}.\", id, errorMessage), \"error\");\n                        options.onComplete(id, options.getName(id), qq.extend(errorResponse, preventRetryResponse), null);\n                        upload.maybeSendDeferredFiles(id);\n                        connectionManager.free(id);\n                    });\n                } else {\n                    return upload.maybeSendDeferredFiles(id);\n                }\n                return false;\n            },\n            maybeSendDeferredFiles: function(id) {\n                var idsInGroup = options.getIdsInProxyGroup(id), uploadedThisId = false;\n                if (idsInGroup && idsInGroup.length) {\n                    log(\"Maybe ready to upload proxy group file \" + id);\n                    qq.each(idsInGroup, function(idx, idInGroup) {\n                        if (upload.isDeferredEligibleForUpload(idInGroup) && !!handler.getFile(idInGroup)) {\n                            uploadedThisId = idInGroup === id;\n                            upload.now(idInGroup);\n                        } else if (upload.isDeferredEligibleForUpload(idInGroup)) {\n                            return false;\n                        }\n                    });\n                } else {\n                    uploadedThisId = true;\n                    upload.now(id);\n                }\n                return uploadedThisId;\n            },\n            maybeNewUuid: function(id, response) {\n                if (response.newUuid !== undefined) {\n                    options.onUuidChanged(id, response.newUuid);\n                }\n            },\n            normalizeResponse: function(originalResponse, successful) {\n                var response = originalResponse;\n                if (!qq.isObject(originalResponse)) {\n                    response = {};\n                    if (qq.isString(originalResponse) && !successful) {\n                        response.error = originalResponse;\n                    }\n                }\n                response.success = successful;\n                return response;\n            },\n            now: function(id) {\n                var name = options.getName(id);\n                if (!controller.isValid(id)) {\n                    throw new qq.Error(id + \" is not a valid file ID to upload!\");\n                }\n                options.onUpload(id, name).then(function(response) {\n                    if (response && response.pause) {\n                        options.setStatus(id, qq.status.PAUSED);\n                        handler.pause(id);\n                        connectionManager.free(id);\n                    } else {\n                        if (chunkingPossible && handler._shouldChunkThisFile(id)) {\n                            chunked.sendNext(id);\n                        } else {\n                            simple.send(id, name);\n                        }\n                    }\n                }, function(error) {\n                    error = error || {};\n                    log(id + \" upload start aborted due to rejected onUpload Promise - details: \" + error, \"error\");\n                    if (!options.onAutoRetry(id, name, error.responseJSON || {})) {\n                        var response = upload.normalizeResponse(error.responseJSON, false);\n                        upload.cleanup(id, response);\n                    }\n                });\n            },\n            start: function(id) {\n                var blobToUpload = upload.getProxyOrBlob(id);\n                if (blobToUpload) {\n                    return upload.maybeDefer(id, blobToUpload);\n                } else {\n                    upload.now(id);\n                    return true;\n                }\n            }\n        };\n        qq.extend(this, {\n            add: function(id, file) {\n                handler.add.apply(this, arguments);\n            },\n            upload: function(id) {\n                if (connectionManager.open(id)) {\n                    return upload.start(id);\n                }\n                return false;\n            },\n            retry: function(id) {\n                if (concurrentChunkingPossible) {\n                    handler._getFileState(id).temp.ignoreFailure = false;\n                }\n                if (connectionManager.isUsingConnection(id)) {\n                    return upload.start(id);\n                } else {\n                    return controller.upload(id);\n                }\n            },\n            cancel: function(id) {\n                var cancelRetVal = handler.cancel(id);\n                if (qq.isGenericPromise(cancelRetVal)) {\n                    cancelRetVal.then(function() {\n                        upload.cancel(id);\n                    });\n                } else if (cancelRetVal !== false) {\n                    upload.cancel(id);\n                }\n            },\n            cancelAll: function() {\n                var waitingOrConnected = connectionManager.getWaitingOrConnected(), i;\n                if (waitingOrConnected.length) {\n                    for (i = waitingOrConnected.length - 1; i >= 0; i--) {\n                        controller.cancel(waitingOrConnected[i]);\n                    }\n                }\n                connectionManager.reset();\n            },\n            getFile: function(id) {\n                if (handler.getProxy && handler.getProxy(id)) {\n                    return handler.getProxy(id).referenceBlob;\n                }\n                return handler.getFile && handler.getFile(id);\n            },\n            isProxied: function(id) {\n                return !!(handler.getProxy && handler.getProxy(id));\n            },\n            getInput: function(id) {\n                if (handler.getInput) {\n                    return handler.getInput(id);\n                }\n            },\n            reset: function() {\n                log(\"Resetting upload handler\");\n                controller.cancelAll();\n                connectionManager.reset();\n                handler.reset();\n            },\n            expunge: function(id) {\n                if (controller.isValid(id)) {\n                    return handler.expunge(id);\n                }\n            },\n            isValid: function(id) {\n                return handler.isValid(id);\n            },\n            hasResumeRecord: function(id) {\n                var key = handler.isValid(id) && handler._getLocalStorageId && handler._getLocalStorageId(id);\n                if (key) {\n                    return !!localStorage.getItem(key);\n                }\n                return false;\n            },\n            getResumableFilesData: function() {\n                if (handler.getResumableFilesData) {\n                    return handler.getResumableFilesData();\n                }\n                return [];\n            },\n            getThirdPartyFileId: function(id) {\n                if (controller.isValid(id)) {\n                    return handler.getThirdPartyFileId(id);\n                }\n            },\n            pause: function(id) {\n                if (controller.isResumable(id) && handler.pause && controller.isValid(id) && handler.pause(id)) {\n                    connectionManager.free(id);\n                    handler.moveInProgressToRemaining(id);\n                    return true;\n                }\n                return false;\n            },\n            isAttemptingResume: function(id) {\n                return !!handler.isAttemptingResume && handler.isAttemptingResume(id);\n            },\n            isResumable: function(id) {\n                return !!handler.isResumable && handler.isResumable(id);\n            }\n        });\n        qq.extend(options, o);\n        log = options.log;\n        chunkingPossible = options.chunking.enabled && qq.supportedFeatures.chunking;\n        concurrentChunkingPossible = chunkingPossible && options.chunking.concurrent.enabled;\n        preventRetryResponse = function() {\n            var response = {};\n            response[options.preventRetryParam] = true;\n            return response;\n        }();\n        upload.initHandler();\n    };\n    qq.WindowReceiveMessage = function(o) {\n        \"use strict\";\n        var options = {\n            log: function(message, level) {}\n        }, callbackWrapperDetachers = {};\n        qq.extend(options, o);\n        qq.extend(this, {\n            receiveMessage: function(id, callback) {\n                var onMessageCallbackWrapper = function(event) {\n                    callback(event.data);\n                };\n                if (window.postMessage) {\n                    callbackWrapperDetachers[id] = qq(window).attach(\"message\", onMessageCallbackWrapper);\n                } else {\n                    log(\"iframe message passing not supported in this browser!\", \"error\");\n                }\n            },\n            stopReceivingMessages: function(id) {\n                if (window.postMessage) {\n                    var detacher = callbackWrapperDetachers[id];\n                    if (detacher) {\n                        detacher();\n                    }\n                }\n            }\n        });\n    };\n    qq.FormUploadHandler = function(spec) {\n        \"use strict\";\n        var options = spec.options, handler = this, proxy = spec.proxy, formHandlerInstanceId = qq.getUniqueId(), onloadCallbacks = {}, detachLoadEvents = {}, postMessageCallbackTimers = {}, isCors = options.isCors, inputName = options.inputName, getUuid = proxy.getUuid, log = proxy.log, corsMessageReceiver = new qq.WindowReceiveMessage({\n            log: log\n        });\n        function expungeFile(id) {\n            delete detachLoadEvents[id];\n            if (isCors) {\n                clearTimeout(postMessageCallbackTimers[id]);\n                delete postMessageCallbackTimers[id];\n                corsMessageReceiver.stopReceivingMessages(id);\n            }\n            var iframe = document.getElementById(handler._getIframeName(id));\n            if (iframe) {\n                iframe.setAttribute(\"src\", \"javascript:false;\");\n                qq(iframe).remove();\n            }\n        }\n        function getFileIdForIframeName(iframeName) {\n            return iframeName.split(\"_\")[0];\n        }\n        function initIframeForUpload(name) {\n            var iframe = qq.toElement(\"<iframe src='javascript:false;' name='\" + name + \"' />\");\n            iframe.setAttribute(\"id\", name);\n            iframe.style.display = \"none\";\n            document.body.appendChild(iframe);\n            return iframe;\n        }\n        function registerPostMessageCallback(iframe, callback) {\n            var iframeName = iframe.id, fileId = getFileIdForIframeName(iframeName), uuid = getUuid(fileId);\n            onloadCallbacks[uuid] = callback;\n            detachLoadEvents[fileId] = qq(iframe).attach(\"load\", function() {\n                if (handler.getInput(fileId)) {\n                    log(\"Received iframe load event for CORS upload request (iframe name \" + iframeName + \")\");\n                    postMessageCallbackTimers[iframeName] = setTimeout(function() {\n                        var errorMessage = \"No valid message received from loaded iframe for iframe name \" + iframeName;\n                        log(errorMessage, \"error\");\n                        callback({\n                            error: errorMessage\n                        });\n                    }, 1e3);\n                }\n            });\n            corsMessageReceiver.receiveMessage(iframeName, function(message) {\n                log(\"Received the following window message: '\" + message + \"'\");\n                var fileId = getFileIdForIframeName(iframeName), response = handler._parseJsonResponse(message), uuid = response.uuid, onloadCallback;\n                if (uuid && onloadCallbacks[uuid]) {\n                    log(\"Handling response for iframe name \" + iframeName);\n                    clearTimeout(postMessageCallbackTimers[iframeName]);\n                    delete postMessageCallbackTimers[iframeName];\n                    handler._detachLoadEvent(iframeName);\n                    onloadCallback = onloadCallbacks[uuid];\n                    delete onloadCallbacks[uuid];\n                    corsMessageReceiver.stopReceivingMessages(iframeName);\n                    onloadCallback(response);\n                } else if (!uuid) {\n                    log(\"'\" + message + \"' does not contain a UUID - ignoring.\");\n                }\n            });\n        }\n        qq.extend(this, new qq.UploadHandler(spec));\n        qq.override(this, function(super_) {\n            return {\n                add: function(id, fileInput) {\n                    super_.add(id, {\n                        input: fileInput\n                    });\n                    fileInput.setAttribute(\"name\", inputName);\n                    if (fileInput.parentNode) {\n                        qq(fileInput).remove();\n                    }\n                },\n                expunge: function(id) {\n                    expungeFile(id);\n                    super_.expunge(id);\n                },\n                isValid: function(id) {\n                    return super_.isValid(id) && handler._getFileState(id).input !== undefined;\n                }\n            };\n        });\n        qq.extend(this, {\n            getInput: function(id) {\n                return handler._getFileState(id).input;\n            },\n            _attachLoadEvent: function(iframe, callback) {\n                var responseDescriptor;\n                if (isCors) {\n                    registerPostMessageCallback(iframe, callback);\n                } else {\n                    detachLoadEvents[iframe.id] = qq(iframe).attach(\"load\", function() {\n                        log(\"Received response for \" + iframe.id);\n                        if (!iframe.parentNode) {\n                            return;\n                        }\n                        try {\n                            if (iframe.contentDocument && iframe.contentDocument.body && iframe.contentDocument.body.innerHTML == \"false\") {\n                                return;\n                            }\n                        } catch (error) {\n                            log(\"Error when attempting to access iframe during handling of upload response (\" + error.message + \")\", \"error\");\n                            responseDescriptor = {\n                                success: false\n                            };\n                        }\n                        callback(responseDescriptor);\n                    });\n                }\n            },\n            _createIframe: function(id) {\n                var iframeName = handler._getIframeName(id);\n                return initIframeForUpload(iframeName);\n            },\n            _detachLoadEvent: function(id) {\n                if (detachLoadEvents[id] !== undefined) {\n                    detachLoadEvents[id]();\n                    delete detachLoadEvents[id];\n                }\n            },\n            _getIframeName: function(fileId) {\n                return fileId + \"_\" + formHandlerInstanceId;\n            },\n            _initFormForUpload: function(spec) {\n                var method = spec.method, endpoint = spec.endpoint, params = spec.params, paramsInBody = spec.paramsInBody, targetName = spec.targetName, form = qq.toElement(\"<form method='\" + method + \"' enctype='multipart/form-data'></form>\"), url = endpoint;\n                if (paramsInBody) {\n                    qq.obj2Inputs(params, form);\n                } else {\n                    url = qq.obj2url(params, endpoint);\n                }\n                form.setAttribute(\"action\", url);\n                form.setAttribute(\"target\", targetName);\n                form.style.display = \"none\";\n                document.body.appendChild(form);\n                return form;\n            },\n            _parseJsonResponse: function(innerHtmlOrMessage) {\n                var response = {};\n                try {\n                    response = qq.parseJson(innerHtmlOrMessage);\n                } catch (error) {\n                    log(\"Error when attempting to parse iframe upload response (\" + error.message + \")\", \"error\");\n                }\n                return response;\n            }\n        });\n    };\n    qq.XhrUploadHandler = function(spec) {\n        \"use strict\";\n        var handler = this, namespace = spec.options.namespace, proxy = spec.proxy, chunking = spec.options.chunking, getChunkSize = function(id) {\n            var fileState = handler._getFileState(id);\n            if (fileState.chunkSize) {\n                return fileState.chunkSize;\n            } else {\n                var chunkSize = chunking.partSize;\n                if (qq.isFunction(chunkSize)) {\n                    chunkSize = chunkSize(id, getSize(id));\n                }\n                fileState.chunkSize = chunkSize;\n                return chunkSize;\n            }\n        }, resume = spec.options.resume, chunkFiles = chunking && spec.options.chunking.enabled && qq.supportedFeatures.chunking, resumeEnabled = resume && spec.options.resume.enabled && chunkFiles && qq.supportedFeatures.resume, getName = proxy.getName, getSize = proxy.getSize, getUuid = proxy.getUuid, getEndpoint = proxy.getEndpoint, getDataByUuid = proxy.getDataByUuid, onUuidChanged = proxy.onUuidChanged, onProgress = proxy.onProgress, log = proxy.log, getCustomResumeData = proxy.getCustomResumeData;\n        function abort(id) {\n            qq.each(handler._getXhrs(id), function(xhrId, xhr) {\n                var ajaxRequester = handler._getAjaxRequester(id, xhrId);\n                xhr.onreadystatechange = null;\n                xhr.upload.onprogress = null;\n                xhr.abort();\n                ajaxRequester && ajaxRequester.canceled && ajaxRequester.canceled(id);\n            });\n        }\n        qq.extend(this, new qq.UploadHandler(spec));\n        qq.override(this, function(super_) {\n            return {\n                add: function(id, blobOrProxy) {\n                    if (qq.isFile(blobOrProxy) || qq.isBlob(blobOrProxy)) {\n                        super_.add(id, {\n                            file: blobOrProxy\n                        });\n                    } else if (blobOrProxy instanceof qq.BlobProxy) {\n                        super_.add(id, {\n                            proxy: blobOrProxy\n                        });\n                    } else {\n                        throw new Error(\"Passed obj is not a File, Blob, or proxy\");\n                    }\n                    handler._initTempState(id);\n                    resumeEnabled && handler._maybePrepareForResume(id);\n                },\n                expunge: function(id) {\n                    abort(id);\n                    handler._maybeDeletePersistedChunkData(id);\n                    handler._clearXhrs(id);\n                    super_.expunge(id);\n                }\n            };\n        });\n        qq.extend(this, {\n            clearCachedChunk: function(id, chunkIdx) {\n                var fileState = handler._getFileState(id);\n                if (fileState) {\n                    delete fileState.temp.cachedChunks[chunkIdx];\n                }\n            },\n            clearXhr: function(id, chunkIdx) {\n                var tempState = handler._getFileState(id).temp;\n                if (tempState.xhrs) {\n                    delete tempState.xhrs[chunkIdx];\n                }\n                if (tempState.ajaxRequesters) {\n                    delete tempState.ajaxRequesters[chunkIdx];\n                }\n            },\n            finalizeChunks: function(id, responseParser) {\n                var lastChunkIdx = handler._getTotalChunks(id) - 1, xhr = handler._getXhr(id, lastChunkIdx);\n                if (responseParser) {\n                    return new qq.Promise().success(responseParser(xhr), xhr);\n                }\n                return new qq.Promise().success({}, xhr);\n            },\n            getFile: function(id) {\n                return handler.isValid(id) && handler._getFileState(id).file;\n            },\n            getProxy: function(id) {\n                return handler.isValid(id) && handler._getFileState(id).proxy;\n            },\n            getResumableFilesData: function() {\n                var resumableFilesData = [];\n                handler._iterateResumeRecords(function(key, uploadData) {\n                    handler.moveInProgressToRemaining(null, uploadData.chunking.inProgress, uploadData.chunking.remaining);\n                    var data = {\n                        name: uploadData.name,\n                        remaining: uploadData.chunking.remaining,\n                        size: uploadData.size,\n                        uuid: uploadData.uuid\n                    };\n                    if (uploadData.key) {\n                        data.key = uploadData.key;\n                    }\n                    if (uploadData.customResumeData) {\n                        data.customResumeData = uploadData.customResumeData;\n                    }\n                    resumableFilesData.push(data);\n                });\n                return resumableFilesData;\n            },\n            isAttemptingResume: function(id) {\n                return handler._getFileState(id).attemptingResume;\n            },\n            isResumable: function(id) {\n                return !!chunking && handler.isValid(id) && !handler._getFileState(id).notResumable;\n            },\n            moveInProgressToRemaining: function(id, optInProgress, optRemaining) {\n                var fileState = handler._getFileState(id) || {}, chunkingState = fileState.chunking || {}, inProgress = optInProgress || chunkingState.inProgress, remaining = optRemaining || chunkingState.remaining;\n                if (inProgress) {\n                    log(qq.format(\"Moving these chunks from in-progress {}, to remaining.\", JSON.stringify(inProgress)));\n                    inProgress.reverse();\n                    qq.each(inProgress, function(idx, chunkIdx) {\n                        remaining.unshift(chunkIdx);\n                    });\n                    inProgress.length = 0;\n                }\n            },\n            pause: function(id) {\n                if (handler.isValid(id)) {\n                    log(qq.format(\"Aborting XHR upload for {} '{}' due to pause instruction.\", id, getName(id)));\n                    handler._getFileState(id).paused = true;\n                    abort(id);\n                    return true;\n                }\n            },\n            reevaluateChunking: function(id) {\n                if (chunking && handler.isValid(id)) {\n                    var state = handler._getFileState(id), totalChunks, i;\n                    delete state.chunking;\n                    state.chunking = {};\n                    totalChunks = handler._getTotalChunks(id);\n                    if (totalChunks > 1 || chunking.mandatory) {\n                        state.chunking.enabled = true;\n                        state.chunking.parts = totalChunks;\n                        state.chunking.remaining = [];\n                        for (i = 0; i < totalChunks; i++) {\n                            state.chunking.remaining.push(i);\n                        }\n                        handler._initTempState(id);\n                    } else {\n                        state.chunking.enabled = false;\n                    }\n                }\n            },\n            updateBlob: function(id, newBlob) {\n                if (handler.isValid(id)) {\n                    handler._getFileState(id).file = newBlob;\n                }\n            },\n            _clearXhrs: function(id) {\n                var tempState = handler._getFileState(id).temp;\n                qq.each(tempState.ajaxRequesters, function(chunkId) {\n                    delete tempState.ajaxRequesters[chunkId];\n                });\n                qq.each(tempState.xhrs, function(chunkId) {\n                    delete tempState.xhrs[chunkId];\n                });\n            },\n            _createXhr: function(id, optChunkIdx) {\n                return handler._registerXhr(id, optChunkIdx, qq.createXhrInstance());\n            },\n            _getAjaxRequester: function(id, optChunkIdx) {\n                var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n                return handler._getFileState(id).temp.ajaxRequesters[chunkIdx];\n            },\n            _getChunkData: function(id, chunkIndex) {\n                var chunkSize = getChunkSize(id), fileSize = getSize(id), fileOrBlob = handler.getFile(id), startBytes = chunkSize * chunkIndex, endBytes = startBytes + chunkSize >= fileSize ? fileSize : startBytes + chunkSize, totalChunks = handler._getTotalChunks(id), cachedChunks = this._getFileState(id).temp.cachedChunks, blob = cachedChunks[chunkIndex] || qq.sliceBlob(fileOrBlob, startBytes, endBytes);\n                cachedChunks[chunkIndex] = blob;\n                return {\n                    part: chunkIndex,\n                    start: startBytes,\n                    end: endBytes,\n                    count: totalChunks,\n                    blob: blob,\n                    size: endBytes - startBytes\n                };\n            },\n            _getChunkDataForCallback: function(chunkData) {\n                return {\n                    partIndex: chunkData.part,\n                    startByte: chunkData.start + 1,\n                    endByte: chunkData.end,\n                    totalParts: chunkData.count\n                };\n            },\n            _getLocalStorageId: function(id) {\n                var formatVersion = \"5.0\", name = getName(id), size = getSize(id), chunkSize = getChunkSize(id), endpoint = getEndpoint(id), customKeys = resume.customKeys(id), localStorageId = qq.format(\"qq{}resume{}-{}-{}-{}-{}\", namespace, formatVersion, name, size, chunkSize, endpoint);\n                customKeys.forEach(function(key) {\n                    localStorageId += \"-\" + key;\n                });\n                return localStorageId;\n            },\n            _getMimeType: function(id) {\n                return handler.getFile(id).type;\n            },\n            _getPersistableData: function(id) {\n                return handler._getFileState(id).chunking;\n            },\n            _getTotalChunks: function(id) {\n                if (chunking) {\n                    var fileSize = getSize(id), chunkSize = getChunkSize(id);\n                    return Math.ceil(fileSize / chunkSize);\n                }\n            },\n            _getXhr: function(id, optChunkIdx) {\n                var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n                return handler._getFileState(id).temp.xhrs[chunkIdx];\n            },\n            _getXhrs: function(id) {\n                return handler._getFileState(id).temp.xhrs;\n            },\n            _iterateResumeRecords: function(callback) {\n                if (resumeEnabled) {\n                    qq.each(localStorage, function(key, item) {\n                        if (key.indexOf(qq.format(\"qq{}resume\", namespace)) === 0) {\n                            var uploadData = JSON.parse(item);\n                            callback(key, uploadData);\n                        }\n                    });\n                }\n            },\n            _initTempState: function(id) {\n                handler._getFileState(id).temp = {\n                    ajaxRequesters: {},\n                    chunkProgress: {},\n                    xhrs: {},\n                    cachedChunks: {}\n                };\n            },\n            _markNotResumable: function(id) {\n                handler._getFileState(id).notResumable = true;\n            },\n            _maybeDeletePersistedChunkData: function(id) {\n                var localStorageId;\n                if (resumeEnabled && handler.isResumable(id)) {\n                    localStorageId = handler._getLocalStorageId(id);\n                    if (localStorageId && localStorage.getItem(localStorageId)) {\n                        localStorage.removeItem(localStorageId);\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _maybePrepareForResume: function(id) {\n                var state = handler._getFileState(id), localStorageId, persistedData;\n                if (resumeEnabled && state.key === undefined) {\n                    localStorageId = handler._getLocalStorageId(id);\n                    persistedData = localStorage.getItem(localStorageId);\n                    if (persistedData) {\n                        persistedData = JSON.parse(persistedData);\n                        if (getDataByUuid(persistedData.uuid)) {\n                            handler._markNotResumable(id);\n                        } else {\n                            log(qq.format(\"Identified file with ID {} and name of {} as resumable.\", id, getName(id)));\n                            onUuidChanged(id, persistedData.uuid);\n                            state.key = persistedData.key;\n                            state.chunking = persistedData.chunking;\n                            state.loaded = persistedData.loaded;\n                            state.customResumeData = persistedData.customResumeData;\n                            state.attemptingResume = true;\n                            handler.moveInProgressToRemaining(id);\n                        }\n                    }\n                }\n            },\n            _maybePersistChunkedState: function(id) {\n                var state = handler._getFileState(id), localStorageId, persistedData;\n                if (resumeEnabled && handler.isResumable(id)) {\n                    var customResumeData = getCustomResumeData(id);\n                    localStorageId = handler._getLocalStorageId(id);\n                    persistedData = {\n                        name: getName(id),\n                        size: getSize(id),\n                        uuid: getUuid(id),\n                        key: state.key,\n                        chunking: state.chunking,\n                        loaded: state.loaded,\n                        lastUpdated: Date.now()\n                    };\n                    if (customResumeData) {\n                        persistedData.customResumeData = customResumeData;\n                    }\n                    try {\n                        localStorage.setItem(localStorageId, JSON.stringify(persistedData));\n                    } catch (error) {\n                        log(qq.format(\"Unable to save resume data for '{}' due to error: '{}'.\", id, error.toString()), \"warn\");\n                    }\n                }\n            },\n            _registerProgressHandler: function(id, chunkIdx, chunkSize) {\n                var xhr = handler._getXhr(id, chunkIdx), name = getName(id), progressCalculator = {\n                    simple: function(loaded, total) {\n                        var fileSize = getSize(id);\n                        if (loaded === total) {\n                            onProgress(id, name, fileSize, fileSize);\n                        } else {\n                            onProgress(id, name, loaded >= fileSize ? fileSize - 1 : loaded, fileSize);\n                        }\n                    },\n                    chunked: function(loaded, total) {\n                        var chunkProgress = handler._getFileState(id).temp.chunkProgress, totalSuccessfullyLoadedForFile = handler._getFileState(id).loaded, loadedForRequest = loaded, totalForRequest = total, totalFileSize = getSize(id), estActualChunkLoaded = loadedForRequest - (totalForRequest - chunkSize), totalLoadedForFile = totalSuccessfullyLoadedForFile;\n                        chunkProgress[chunkIdx] = estActualChunkLoaded;\n                        qq.each(chunkProgress, function(chunkIdx, chunkLoaded) {\n                            totalLoadedForFile += chunkLoaded;\n                        });\n                        onProgress(id, name, totalLoadedForFile, totalFileSize);\n                    }\n                };\n                xhr.upload.onprogress = function(e) {\n                    if (e.lengthComputable) {\n                        var type = chunkSize == null ? \"simple\" : \"chunked\";\n                        progressCalculator[type](e.loaded, e.total);\n                    }\n                };\n            },\n            _registerXhr: function(id, optChunkIdx, xhr, optAjaxRequester) {\n                var xhrsId = optChunkIdx == null ? -1 : optChunkIdx, tempState = handler._getFileState(id).temp;\n                tempState.xhrs = tempState.xhrs || {};\n                tempState.ajaxRequesters = tempState.ajaxRequesters || {};\n                tempState.xhrs[xhrsId] = xhr;\n                if (optAjaxRequester) {\n                    tempState.ajaxRequesters[xhrsId] = optAjaxRequester;\n                }\n                return xhr;\n            },\n            _removeExpiredChunkingRecords: function() {\n                var expirationDays = resume.recordsExpireIn;\n                handler._iterateResumeRecords(function(key, uploadData) {\n                    var expirationDate = new Date(uploadData.lastUpdated);\n                    expirationDate.setDate(expirationDate.getDate() + expirationDays);\n                    if (expirationDate.getTime() <= Date.now()) {\n                        log(\"Removing expired resume record with key \" + key);\n                        localStorage.removeItem(key);\n                    }\n                });\n            },\n            _shouldChunkThisFile: function(id) {\n                var state = handler._getFileState(id);\n                if (state) {\n                    if (!state.chunking) {\n                        handler.reevaluateChunking(id);\n                    }\n                    return state.chunking.enabled;\n                }\n            }\n        });\n    };\n    qq.DeleteFileAjaxRequester = function(o) {\n        \"use strict\";\n        var requester, options = {\n            method: \"DELETE\",\n            uuidParamName: \"qquuid\",\n            endpointStore: {},\n            maxConnections: 3,\n            customHeaders: function(id) {\n                return {};\n            },\n            paramsStore: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onDelete: function(id) {},\n            onDeleteComplete: function(id, xhrOrXdr, isError) {}\n        };\n        qq.extend(options, o);\n        function getMandatedParams() {\n            if (options.method.toUpperCase() === \"POST\") {\n                return {\n                    _method: \"DELETE\"\n                };\n            }\n            return {};\n        }\n        requester = qq.extend(this, new qq.AjaxRequester({\n            acceptHeader: \"application/json\",\n            validMethods: [ \"POST\", \"DELETE\" ],\n            method: options.method,\n            endpointStore: options.endpointStore,\n            paramsStore: options.paramsStore,\n            mandatedParams: getMandatedParams(),\n            maxConnections: options.maxConnections,\n            customHeaders: function(id) {\n                return options.customHeaders.get(id);\n            },\n            log: options.log,\n            onSend: options.onDelete,\n            onComplete: options.onDeleteComplete,\n            cors: options.cors\n        }));\n        qq.extend(this, {\n            sendDelete: function(id, uuid, additionalMandatedParams) {\n                var additionalOptions = additionalMandatedParams || {};\n                options.log(\"Submitting delete file request for \" + id);\n                if (options.method === \"DELETE\") {\n                    requester.initTransport(id).withPath(uuid).withParams(additionalOptions).send();\n                } else {\n                    additionalOptions[options.uuidParamName] = uuid;\n                    requester.initTransport(id).withParams(additionalOptions).send();\n                }\n            }\n        });\n    };\n    (function() {\n        function detectSubsampling(img) {\n            var iw = img.naturalWidth, ih = img.naturalHeight, canvas = document.createElement(\"canvas\"), ctx;\n            if (iw * ih > 1024 * 1024) {\n                canvas.width = canvas.height = 1;\n                ctx = canvas.getContext(\"2d\");\n                ctx.drawImage(img, -iw + 1, 0);\n                return ctx.getImageData(0, 0, 1, 1).data[3] === 0;\n            } else {\n                return false;\n            }\n        }\n        function detectVerticalSquash(img, iw, ih) {\n            var canvas = document.createElement(\"canvas\"), sy = 0, ey = ih, py = ih, ctx, data, alpha, ratio;\n            canvas.width = 1;\n            canvas.height = ih;\n            ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, 0, 0);\n            data = ctx.getImageData(0, 0, 1, ih).data;\n            while (py > sy) {\n                alpha = data[(py - 1) * 4 + 3];\n                if (alpha === 0) {\n                    ey = py;\n                } else {\n                    sy = py;\n                }\n                py = ey + sy >> 1;\n            }\n            ratio = py / ih;\n            return ratio === 0 ? 1 : ratio;\n        }\n        function renderImageToDataURL(img, blob, options, doSquash) {\n            var canvas = document.createElement(\"canvas\"), mime = options.mime || \"image/jpeg\", promise = new qq.Promise();\n            renderImageToCanvas(img, blob, canvas, options, doSquash).then(function() {\n                promise.success(canvas.toDataURL(mime, options.quality || .8));\n            });\n            return promise;\n        }\n        function maybeCalculateDownsampledDimensions(spec) {\n            var maxPixels = 5241e3;\n            if (!qq.ios()) {\n                throw new qq.Error(\"Downsampled dimensions can only be reliably calculated for iOS!\");\n            }\n            if (spec.origHeight * spec.origWidth > maxPixels) {\n                return {\n                    newHeight: Math.round(Math.sqrt(maxPixels * (spec.origHeight / spec.origWidth))),\n                    newWidth: Math.round(Math.sqrt(maxPixels * (spec.origWidth / spec.origHeight)))\n                };\n            }\n        }\n        function renderImageToCanvas(img, blob, canvas, options, doSquash) {\n            var iw = img.naturalWidth, ih = img.naturalHeight, width = options.width, height = options.height, ctx = canvas.getContext(\"2d\"), promise = new qq.Promise(), modifiedDimensions;\n            ctx.save();\n            if (options.resize) {\n                return renderImageToCanvasWithCustomResizer({\n                    blob: blob,\n                    canvas: canvas,\n                    image: img,\n                    imageHeight: ih,\n                    imageWidth: iw,\n                    orientation: options.orientation,\n                    resize: options.resize,\n                    targetHeight: height,\n                    targetWidth: width\n                });\n            }\n            if (!qq.supportedFeatures.unlimitedScaledImageSize) {\n                modifiedDimensions = maybeCalculateDownsampledDimensions({\n                    origWidth: width,\n                    origHeight: height\n                });\n                if (modifiedDimensions) {\n                    qq.log(qq.format(\"Had to reduce dimensions due to device limitations from {}w / {}h to {}w / {}h\", width, height, modifiedDimensions.newWidth, modifiedDimensions.newHeight), \"warn\");\n                    width = modifiedDimensions.newWidth;\n                    height = modifiedDimensions.newHeight;\n                }\n            }\n            transformCoordinate(canvas, width, height, options.orientation);\n            if (qq.ios()) {\n                (function() {\n                    if (detectSubsampling(img)) {\n                        iw /= 2;\n                        ih /= 2;\n                    }\n                    var d = 1024, tmpCanvas = document.createElement(\"canvas\"), vertSquashRatio = doSquash ? detectVerticalSquash(img, iw, ih) : 1, dw = Math.ceil(d * width / iw), dh = Math.ceil(d * height / ih / vertSquashRatio), sy = 0, dy = 0, tmpCtx, sx, dx;\n                    tmpCanvas.width = tmpCanvas.height = d;\n                    tmpCtx = tmpCanvas.getContext(\"2d\");\n                    while (sy < ih) {\n                        sx = 0;\n                        dx = 0;\n                        while (sx < iw) {\n                            tmpCtx.clearRect(0, 0, d, d);\n                            tmpCtx.drawImage(img, -sx, -sy);\n                            ctx.drawImage(tmpCanvas, 0, 0, d, d, dx, dy, dw, dh);\n                            sx += d;\n                            dx += dw;\n                        }\n                        sy += d;\n                        dy += dh;\n                    }\n                    ctx.restore();\n                    tmpCanvas = tmpCtx = null;\n                })();\n            } else {\n                ctx.drawImage(img, 0, 0, width, height);\n            }\n            canvas.qqImageRendered && canvas.qqImageRendered();\n            promise.success();\n            return promise;\n        }\n        function renderImageToCanvasWithCustomResizer(resizeInfo) {\n            var blob = resizeInfo.blob, image = resizeInfo.image, imageHeight = resizeInfo.imageHeight, imageWidth = resizeInfo.imageWidth, orientation = resizeInfo.orientation, promise = new qq.Promise(), resize = resizeInfo.resize, sourceCanvas = document.createElement(\"canvas\"), sourceCanvasContext = sourceCanvas.getContext(\"2d\"), targetCanvas = resizeInfo.canvas, targetHeight = resizeInfo.targetHeight, targetWidth = resizeInfo.targetWidth;\n            transformCoordinate(sourceCanvas, imageWidth, imageHeight, orientation);\n            targetCanvas.height = targetHeight;\n            targetCanvas.width = targetWidth;\n            sourceCanvasContext.drawImage(image, 0, 0);\n            resize({\n                blob: blob,\n                height: targetHeight,\n                image: image,\n                sourceCanvas: sourceCanvas,\n                targetCanvas: targetCanvas,\n                width: targetWidth\n            }).then(function success() {\n                targetCanvas.qqImageRendered && targetCanvas.qqImageRendered();\n                promise.success();\n            }, promise.failure);\n            return promise;\n        }\n        function transformCoordinate(canvas, width, height, orientation) {\n            switch (orientation) {\n              case 5:\n              case 6:\n              case 7:\n              case 8:\n                canvas.width = height;\n                canvas.height = width;\n                break;\n\n              default:\n                canvas.width = width;\n                canvas.height = height;\n            }\n            var ctx = canvas.getContext(\"2d\");\n            switch (orientation) {\n              case 2:\n                ctx.translate(width, 0);\n                ctx.scale(-1, 1);\n                break;\n\n              case 3:\n                ctx.translate(width, height);\n                ctx.rotate(Math.PI);\n                break;\n\n              case 4:\n                ctx.translate(0, height);\n                ctx.scale(1, -1);\n                break;\n\n              case 5:\n                ctx.rotate(.5 * Math.PI);\n                ctx.scale(1, -1);\n                break;\n\n              case 6:\n                ctx.rotate(.5 * Math.PI);\n                ctx.translate(0, -height);\n                break;\n\n              case 7:\n                ctx.rotate(.5 * Math.PI);\n                ctx.translate(width, -height);\n                ctx.scale(-1, 1);\n                break;\n\n              case 8:\n                ctx.rotate(-.5 * Math.PI);\n                ctx.translate(-width, 0);\n                break;\n\n              default:\n                break;\n            }\n        }\n        function MegaPixImage(srcImage, errorCallback) {\n            var self = this;\n            if (window.Blob && srcImage instanceof Blob) {\n                (function() {\n                    var img = new Image(), URL = window.URL && window.URL.createObjectURL ? window.URL : window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL : null;\n                    if (!URL) {\n                        throw Error(\"No createObjectURL function found to create blob url\");\n                    }\n                    img.src = URL.createObjectURL(srcImage);\n                    self.blob = srcImage;\n                    srcImage = img;\n                })();\n            }\n            if (!srcImage.naturalWidth && !srcImage.naturalHeight) {\n                srcImage.onload = function() {\n                    var listeners = self.imageLoadListeners;\n                    if (listeners) {\n                        self.imageLoadListeners = null;\n                        setTimeout(function() {\n                            for (var i = 0, len = listeners.length; i < len; i++) {\n                                listeners[i]();\n                            }\n                        }, 0);\n                    }\n                };\n                srcImage.onerror = errorCallback;\n                this.imageLoadListeners = [];\n            }\n            this.srcImage = srcImage;\n        }\n        MegaPixImage.prototype.render = function(target, options) {\n            options = options || {};\n            var self = this, imgWidth = this.srcImage.naturalWidth, imgHeight = this.srcImage.naturalHeight, width = options.width, height = options.height, maxWidth = options.maxWidth, maxHeight = options.maxHeight, doSquash = !this.blob || this.blob.type === \"image/jpeg\", tagName = target.tagName.toLowerCase(), opt;\n            if (this.imageLoadListeners) {\n                this.imageLoadListeners.push(function() {\n                    self.render(target, options);\n                });\n                return;\n            }\n            if (width && !height) {\n                height = imgHeight * width / imgWidth << 0;\n            } else if (height && !width) {\n                width = imgWidth * height / imgHeight << 0;\n            } else {\n                width = imgWidth;\n                height = imgHeight;\n            }\n            if (maxWidth && width > maxWidth) {\n                width = maxWidth;\n                height = imgHeight * width / imgWidth << 0;\n            }\n            if (maxHeight && height > maxHeight) {\n                height = maxHeight;\n                width = imgWidth * height / imgHeight << 0;\n            }\n            opt = {\n                width: width,\n                height: height\n            }, qq.each(options, function(optionsKey, optionsValue) {\n                opt[optionsKey] = optionsValue;\n            });\n            if (tagName === \"img\") {\n                (function() {\n                    var oldTargetSrc = target.src;\n                    renderImageToDataURL(self.srcImage, self.blob, opt, doSquash).then(function(dataUri) {\n                        target.src = dataUri;\n                        oldTargetSrc === target.src && target.onload();\n                    });\n                })();\n            } else if (tagName === \"canvas\") {\n                renderImageToCanvas(this.srcImage, this.blob, target, opt, doSquash);\n            }\n            if (typeof this.onrender === \"function\") {\n                this.onrender(target);\n            }\n        };\n        qq.MegaPixImage = MegaPixImage;\n    })();\n    qq.ImageGenerator = function(log) {\n        \"use strict\";\n        function isImg(el) {\n            return el.tagName.toLowerCase() === \"img\";\n        }\n        function isCanvas(el) {\n            return el.tagName.toLowerCase() === \"canvas\";\n        }\n        function isImgCorsSupported() {\n            return new Image().crossOrigin !== undefined;\n        }\n        function isCanvasSupported() {\n            var canvas = document.createElement(\"canvas\");\n            return canvas.getContext && canvas.getContext(\"2d\");\n        }\n        function determineMimeOfFileName(nameWithPath) {\n            var pathSegments = nameWithPath.split(\"/\"), name = pathSegments[pathSegments.length - 1].split(\"?\")[0], extension = qq.getExtension(name);\n            extension = extension && extension.toLowerCase();\n            switch (extension) {\n              case \"jpeg\":\n              case \"jpg\":\n                return \"image/jpeg\";\n\n              case \"png\":\n                return \"image/png\";\n\n              case \"bmp\":\n                return \"image/bmp\";\n\n              case \"gif\":\n                return \"image/gif\";\n\n              case \"tiff\":\n              case \"tif\":\n                return \"image/tiff\";\n            }\n        }\n        function isCrossOrigin(url) {\n            var targetAnchor = document.createElement(\"a\"), targetProtocol, targetHostname, targetPort;\n            targetAnchor.href = url;\n            targetProtocol = targetAnchor.protocol;\n            targetPort = targetAnchor.port;\n            targetHostname = targetAnchor.hostname;\n            if (targetProtocol.toLowerCase() !== window.location.protocol.toLowerCase()) {\n                return true;\n            }\n            if (targetHostname.toLowerCase() !== window.location.hostname.toLowerCase()) {\n                return true;\n            }\n            if (targetPort !== window.location.port && !qq.ie()) {\n                return true;\n            }\n            return false;\n        }\n        function registerImgLoadListeners(img, promise) {\n            img.onload = function() {\n                img.onload = null;\n                img.onerror = null;\n                promise.success(img);\n            };\n            img.onerror = function() {\n                img.onload = null;\n                img.onerror = null;\n                log(\"Problem drawing thumbnail!\", \"error\");\n                promise.failure(img, \"Problem drawing thumbnail!\");\n            };\n        }\n        function registerCanvasDrawImageListener(canvas, promise) {\n            canvas.qqImageRendered = function() {\n                promise.success(canvas);\n            };\n        }\n        function registerThumbnailRenderedListener(imgOrCanvas, promise) {\n            var registered = isImg(imgOrCanvas) || isCanvas(imgOrCanvas);\n            if (isImg(imgOrCanvas)) {\n                registerImgLoadListeners(imgOrCanvas, promise);\n            } else if (isCanvas(imgOrCanvas)) {\n                registerCanvasDrawImageListener(imgOrCanvas, promise);\n            } else {\n                promise.failure(imgOrCanvas);\n                log(qq.format(\"Element container of type {} is not supported!\", imgOrCanvas.tagName), \"error\");\n            }\n            return registered;\n        }\n        function draw(fileOrBlob, container, options) {\n            var drawPreview = new qq.Promise(), identifier = new qq.Identify(fileOrBlob, log), maxSize = options.maxSize, orient = options.orient == null ? true : options.orient, megapixErrorHandler = function() {\n                container.onerror = null;\n                container.onload = null;\n                log(\"Could not render preview, file may be too large!\", \"error\");\n                drawPreview.failure(container, \"Browser cannot render image!\");\n            };\n            identifier.isPreviewable().then(function(mime) {\n                var dummyExif = {\n                    parse: function() {\n                        return new qq.Promise().success();\n                    }\n                }, exif = orient ? new qq.Exif(fileOrBlob, log) : dummyExif, mpImg = new qq.MegaPixImage(fileOrBlob, megapixErrorHandler);\n                if (registerThumbnailRenderedListener(container, drawPreview)) {\n                    exif.parse().then(function(exif) {\n                        var orientation = exif && exif.Orientation;\n                        mpImg.render(container, {\n                            maxWidth: maxSize,\n                            maxHeight: maxSize,\n                            orientation: orientation,\n                            mime: mime,\n                            resize: options.customResizeFunction\n                        });\n                    }, function(failureMsg) {\n                        log(qq.format(\"EXIF data could not be parsed ({}).  Assuming orientation = 1.\", failureMsg));\n                        mpImg.render(container, {\n                            maxWidth: maxSize,\n                            maxHeight: maxSize,\n                            mime: mime,\n                            resize: options.customResizeFunction\n                        });\n                    });\n                }\n            }, function() {\n                log(\"Not previewable\");\n                drawPreview.failure(container, \"Not previewable\");\n            });\n            return drawPreview;\n        }\n        function drawOnCanvasOrImgFromUrl(url, canvasOrImg, draw, maxSize, customResizeFunction) {\n            var tempImg = new Image(), tempImgRender = new qq.Promise();\n            registerThumbnailRenderedListener(tempImg, tempImgRender);\n            if (isCrossOrigin(url)) {\n                tempImg.crossOrigin = \"anonymous\";\n            }\n            tempImg.src = url;\n            tempImgRender.then(function rendered() {\n                registerThumbnailRenderedListener(canvasOrImg, draw);\n                var mpImg = new qq.MegaPixImage(tempImg);\n                mpImg.render(canvasOrImg, {\n                    maxWidth: maxSize,\n                    maxHeight: maxSize,\n                    mime: determineMimeOfFileName(url),\n                    resize: customResizeFunction\n                });\n            }, draw.failure);\n        }\n        function drawOnImgFromUrlWithCssScaling(url, img, draw, maxSize) {\n            registerThumbnailRenderedListener(img, draw);\n            qq(img).css({\n                maxWidth: maxSize + \"px\",\n                maxHeight: maxSize + \"px\"\n            });\n            img.src = url;\n        }\n        function drawFromUrl(url, container, options) {\n            var draw = new qq.Promise(), scale = options.scale, maxSize = scale ? options.maxSize : null;\n            if (scale && isImg(container)) {\n                if (isCanvasSupported()) {\n                    if (isCrossOrigin(url) && !isImgCorsSupported()) {\n                        drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n                    } else {\n                        drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n                    }\n                } else {\n                    drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n                }\n            } else if (isCanvas(container)) {\n                drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n            } else if (registerThumbnailRenderedListener(container, draw)) {\n                container.src = url;\n            }\n            return draw;\n        }\n        qq.extend(this, {\n            generate: function(fileBlobOrUrl, container, options) {\n                if (qq.isString(fileBlobOrUrl)) {\n                    log(\"Attempting to update thumbnail based on server response.\");\n                    return drawFromUrl(fileBlobOrUrl, container, options || {});\n                } else {\n                    log(\"Attempting to draw client-side image preview.\");\n                    return draw(fileBlobOrUrl, container, options || {});\n                }\n            }\n        });\n        this._testing = {};\n        this._testing.isImg = isImg;\n        this._testing.isCanvas = isCanvas;\n        this._testing.isCrossOrigin = isCrossOrigin;\n        this._testing.determineMimeOfFileName = determineMimeOfFileName;\n    };\n    qq.Exif = function(fileOrBlob, log) {\n        \"use strict\";\n        var TAG_IDS = [ 274 ], TAG_INFO = {\n            274: {\n                name: \"Orientation\",\n                bytes: 2\n            }\n        };\n        function parseLittleEndian(hex) {\n            var result = 0, pow = 0;\n            while (hex.length > 0) {\n                result += parseInt(hex.substring(0, 2), 16) * Math.pow(2, pow);\n                hex = hex.substring(2, hex.length);\n                pow += 8;\n            }\n            return result;\n        }\n        function seekToApp1(offset, promise) {\n            var theOffset = offset, thePromise = promise;\n            if (theOffset === undefined) {\n                theOffset = 2;\n                thePromise = new qq.Promise();\n            }\n            qq.readBlobToHex(fileOrBlob, theOffset, 4).then(function(hex) {\n                var match = /^ffe([0-9])/.exec(hex), segmentLength;\n                if (match) {\n                    if (match[1] !== \"1\") {\n                        segmentLength = parseInt(hex.slice(4, 8), 16);\n                        seekToApp1(theOffset + segmentLength + 2, thePromise);\n                    } else {\n                        thePromise.success(theOffset);\n                    }\n                } else {\n                    thePromise.failure(\"No EXIF header to be found!\");\n                }\n            });\n            return thePromise;\n        }\n        function getApp1Offset() {\n            var promise = new qq.Promise();\n            qq.readBlobToHex(fileOrBlob, 0, 6).then(function(hex) {\n                if (hex.indexOf(\"ffd8\") !== 0) {\n                    promise.failure(\"Not a valid JPEG!\");\n                } else {\n                    seekToApp1().then(function(offset) {\n                        promise.success(offset);\n                    }, function(error) {\n                        promise.failure(error);\n                    });\n                }\n            });\n            return promise;\n        }\n        function isLittleEndian(app1Start) {\n            var promise = new qq.Promise();\n            qq.readBlobToHex(fileOrBlob, app1Start + 10, 2).then(function(hex) {\n                promise.success(hex === \"4949\");\n            });\n            return promise;\n        }\n        function getDirEntryCount(app1Start, littleEndian) {\n            var promise = new qq.Promise();\n            qq.readBlobToHex(fileOrBlob, app1Start + 18, 2).then(function(hex) {\n                if (littleEndian) {\n                    return promise.success(parseLittleEndian(hex));\n                } else {\n                    promise.success(parseInt(hex, 16));\n                }\n            });\n            return promise;\n        }\n        function getIfd(app1Start, dirEntries) {\n            var offset = app1Start + 20, bytes = dirEntries * 12;\n            return qq.readBlobToHex(fileOrBlob, offset, bytes);\n        }\n        function getDirEntries(ifdHex) {\n            var entries = [], offset = 0;\n            while (offset + 24 <= ifdHex.length) {\n                entries.push(ifdHex.slice(offset, offset + 24));\n                offset += 24;\n            }\n            return entries;\n        }\n        function getTagValues(littleEndian, dirEntries) {\n            var TAG_VAL_OFFSET = 16, tagsToFind = qq.extend([], TAG_IDS), vals = {};\n            qq.each(dirEntries, function(idx, entry) {\n                var idHex = entry.slice(0, 4), id = littleEndian ? parseLittleEndian(idHex) : parseInt(idHex, 16), tagsToFindIdx = tagsToFind.indexOf(id), tagValHex, tagName, tagValLength;\n                if (tagsToFindIdx >= 0) {\n                    tagName = TAG_INFO[id].name;\n                    tagValLength = TAG_INFO[id].bytes;\n                    tagValHex = entry.slice(TAG_VAL_OFFSET, TAG_VAL_OFFSET + tagValLength * 2);\n                    vals[tagName] = littleEndian ? parseLittleEndian(tagValHex) : parseInt(tagValHex, 16);\n                    tagsToFind.splice(tagsToFindIdx, 1);\n                }\n                if (tagsToFind.length === 0) {\n                    return false;\n                }\n            });\n            return vals;\n        }\n        qq.extend(this, {\n            parse: function() {\n                var parser = new qq.Promise(), onParseFailure = function(message) {\n                    log(qq.format(\"EXIF header parse failed: '{}' \", message));\n                    parser.failure(message);\n                };\n                getApp1Offset().then(function(app1Offset) {\n                    log(qq.format(\"Moving forward with EXIF header parsing for '{}'\", fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name));\n                    isLittleEndian(app1Offset).then(function(littleEndian) {\n                        log(qq.format(\"EXIF Byte order is {} endian\", littleEndian ? \"little\" : \"big\"));\n                        getDirEntryCount(app1Offset, littleEndian).then(function(dirEntryCount) {\n                            log(qq.format(\"Found {} APP1 directory entries\", dirEntryCount));\n                            getIfd(app1Offset, dirEntryCount).then(function(ifdHex) {\n                                var dirEntries = getDirEntries(ifdHex), tagValues = getTagValues(littleEndian, dirEntries);\n                                log(\"Successfully parsed some EXIF tags\");\n                                parser.success(tagValues);\n                            }, onParseFailure);\n                        }, onParseFailure);\n                    }, onParseFailure);\n                }, onParseFailure);\n                return parser;\n            }\n        });\n        this._testing = {};\n        this._testing.parseLittleEndian = parseLittleEndian;\n    };\n    qq.Identify = function(fileOrBlob, log) {\n        \"use strict\";\n        function isIdentifiable(magicBytes, questionableBytes) {\n            var identifiable = false, magicBytesEntries = [].concat(magicBytes);\n            qq.each(magicBytesEntries, function(idx, magicBytesArrayEntry) {\n                if (questionableBytes.indexOf(magicBytesArrayEntry) === 0) {\n                    identifiable = true;\n                    return false;\n                }\n            });\n            return identifiable;\n        }\n        qq.extend(this, {\n            isPreviewable: function() {\n                var self = this, identifier = new qq.Promise(), previewable = false, name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n                log(qq.format(\"Attempting to determine if {} can be rendered in this browser\", name));\n                log(\"First pass: check type attribute of blob object.\");\n                if (this.isPreviewableSync()) {\n                    log(\"Second pass: check for magic bytes in file header.\");\n                    qq.readBlobToHex(fileOrBlob, 0, 4).then(function(hex) {\n                        qq.each(self.PREVIEWABLE_MIME_TYPES, function(mime, bytes) {\n                            if (isIdentifiable(bytes, hex)) {\n                                if (mime !== \"image/tiff\" || qq.supportedFeatures.tiffPreviews) {\n                                    previewable = true;\n                                    identifier.success(mime);\n                                }\n                                return false;\n                            }\n                        });\n                        log(qq.format(\"'{}' is {} able to be rendered in this browser\", name, previewable ? \"\" : \"NOT\"));\n                        if (!previewable) {\n                            identifier.failure();\n                        }\n                    }, function() {\n                        log(\"Error reading file w/ name '\" + name + \"'.  Not able to be rendered in this browser.\");\n                        identifier.failure();\n                    });\n                } else {\n                    identifier.failure();\n                }\n                return identifier;\n            },\n            isPreviewableSync: function() {\n                var fileMime = fileOrBlob.type, isRecognizedImage = qq.indexOf(Object.keys(this.PREVIEWABLE_MIME_TYPES), fileMime) >= 0, previewable = false, name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n                if (isRecognizedImage) {\n                    if (fileMime === \"image/tiff\") {\n                        previewable = qq.supportedFeatures.tiffPreviews;\n                    } else {\n                        previewable = true;\n                    }\n                }\n                !previewable && log(name + \" is not previewable in this browser per the blob's type attr\");\n                return previewable;\n            }\n        });\n    };\n    qq.Identify.prototype.PREVIEWABLE_MIME_TYPES = {\n        \"image/jpeg\": \"ffd8ff\",\n        \"image/gif\": \"474946\",\n        \"image/png\": \"89504e\",\n        \"image/bmp\": \"424d\",\n        \"image/tiff\": [ \"49492a00\", \"4d4d002a\" ]\n    };\n    qq.ImageValidation = function(blob, log) {\n        \"use strict\";\n        function hasNonZeroLimits(limits) {\n            var atLeastOne = false;\n            qq.each(limits, function(limit, value) {\n                if (value > 0) {\n                    atLeastOne = true;\n                    return false;\n                }\n            });\n            return atLeastOne;\n        }\n        function getWidthHeight() {\n            var sizeDetermination = new qq.Promise();\n            new qq.Identify(blob, log).isPreviewable().then(function() {\n                var image = new Image(), url = window.URL && window.URL.createObjectURL ? window.URL : window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL : null;\n                if (url) {\n                    image.onerror = function() {\n                        log(\"Cannot determine dimensions for image.  May be too large.\", \"error\");\n                        sizeDetermination.failure();\n                    };\n                    image.onload = function() {\n                        sizeDetermination.success({\n                            width: this.width,\n                            height: this.height\n                        });\n                    };\n                    image.src = url.createObjectURL(blob);\n                } else {\n                    log(\"No createObjectURL function available to generate image URL!\", \"error\");\n                    sizeDetermination.failure();\n                }\n            }, sizeDetermination.failure);\n            return sizeDetermination;\n        }\n        function getFailingLimit(limits, dimensions) {\n            var failingLimit;\n            qq.each(limits, function(limitName, limitValue) {\n                if (limitValue > 0) {\n                    var limitMatcher = /(max|min)(Width|Height)/.exec(limitName), dimensionPropName = limitMatcher[2].charAt(0).toLowerCase() + limitMatcher[2].slice(1), actualValue = dimensions[dimensionPropName];\n                    switch (limitMatcher[1]) {\n                      case \"min\":\n                        if (actualValue < limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n\n                      case \"max\":\n                        if (actualValue > limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                    }\n                }\n            });\n            return failingLimit;\n        }\n        this.validate = function(limits) {\n            var validationEffort = new qq.Promise();\n            log(\"Attempting to validate image.\");\n            if (hasNonZeroLimits(limits)) {\n                getWidthHeight().then(function(dimensions) {\n                    var failingLimit = getFailingLimit(limits, dimensions);\n                    if (failingLimit) {\n                        validationEffort.failure(failingLimit);\n                    } else {\n                        validationEffort.success();\n                    }\n                }, validationEffort.success);\n            } else {\n                validationEffort.success();\n            }\n            return validationEffort;\n        };\n    };\n    qq.Session = function(spec) {\n        \"use strict\";\n        var options = {\n            endpoint: null,\n            params: {},\n            customHeaders: {},\n            cors: {},\n            addFileRecord: function(sessionData) {},\n            log: function(message, level) {}\n        };\n        qq.extend(options, spec, true);\n        function isJsonResponseValid(response) {\n            if (qq.isArray(response)) {\n                return true;\n            }\n            options.log(\"Session response is not an array.\", \"error\");\n        }\n        function handleFileItems(fileItems, success, xhrOrXdr, promise) {\n            var someItemsIgnored = false;\n            success = success && isJsonResponseValid(fileItems);\n            if (success) {\n                qq.each(fileItems, function(idx, fileItem) {\n                    if (fileItem.uuid == null) {\n                        someItemsIgnored = true;\n                        options.log(qq.format(\"Session response item {} did not include a valid UUID - ignoring.\", idx), \"error\");\n                    } else if (fileItem.name == null) {\n                        someItemsIgnored = true;\n                        options.log(qq.format(\"Session response item {} did not include a valid name - ignoring.\", idx), \"error\");\n                    } else {\n                        try {\n                            options.addFileRecord(fileItem);\n                            return true;\n                        } catch (err) {\n                            someItemsIgnored = true;\n                            options.log(err.message, \"error\");\n                        }\n                    }\n                    return false;\n                });\n            }\n            promise[success && !someItemsIgnored ? \"success\" : \"failure\"](fileItems, xhrOrXdr);\n        }\n        this.refresh = function() {\n            var refreshEffort = new qq.Promise(), refreshCompleteCallback = function(response, success, xhrOrXdr) {\n                handleFileItems(response, success, xhrOrXdr, refreshEffort);\n            }, requesterOptions = qq.extend({}, options), requester = new qq.SessionAjaxRequester(qq.extend(requesterOptions, {\n                onComplete: refreshCompleteCallback\n            }));\n            requester.queryServer();\n            return refreshEffort;\n        };\n    };\n    qq.SessionAjaxRequester = function(spec) {\n        \"use strict\";\n        var requester, options = {\n            endpoint: null,\n            customHeaders: {},\n            params: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            onComplete: function(response, success, xhrOrXdr) {},\n            log: function(str, level) {}\n        };\n        qq.extend(options, spec);\n        function onComplete(id, xhrOrXdr, isError) {\n            var response = null;\n            if (xhrOrXdr.responseText != null) {\n                try {\n                    response = qq.parseJson(xhrOrXdr.responseText);\n                } catch (err) {\n                    options.log(\"Problem parsing session response: \" + err.message, \"error\");\n                    isError = true;\n                }\n            }\n            options.onComplete(response, !isError, xhrOrXdr);\n        }\n        requester = qq.extend(this, new qq.AjaxRequester({\n            acceptHeader: \"application/json\",\n            validMethods: [ \"GET\" ],\n            method: \"GET\",\n            endpointStore: {\n                get: function() {\n                    return options.endpoint;\n                }\n            },\n            customHeaders: options.customHeaders,\n            log: options.log,\n            onComplete: onComplete,\n            cors: options.cors\n        }));\n        qq.extend(this, {\n            queryServer: function() {\n                var params = qq.extend({}, options.params);\n                options.log(\"Session query request.\");\n                requester.initTransport(\"sessionRefresh\").withParams(params).withCacheBuster().send();\n            }\n        });\n    };\n    qq.Scaler = function(spec, log) {\n        \"use strict\";\n        var self = this, customResizeFunction = spec.customResizer, includeOriginal = spec.sendOriginal, orient = spec.orient, defaultType = spec.defaultType, defaultQuality = spec.defaultQuality / 100, failedToScaleText = spec.failureText, includeExif = spec.includeExif, sizes = this._getSortedSizes(spec.sizes);\n        qq.extend(this, {\n            enabled: qq.supportedFeatures.scaling && sizes.length > 0,\n            getFileRecords: function(originalFileUuid, originalFileName, originalBlobOrBlobData) {\n                var self = this, records = [], originalBlob = originalBlobOrBlobData.blob ? originalBlobOrBlobData.blob : originalBlobOrBlobData, identifier = new qq.Identify(originalBlob, log);\n                if (identifier.isPreviewableSync()) {\n                    qq.each(sizes, function(idx, sizeRecord) {\n                        var outputType = self._determineOutputType({\n                            defaultType: defaultType,\n                            requestedType: sizeRecord.type,\n                            refType: originalBlob.type\n                        });\n                        records.push({\n                            uuid: qq.getUniqueId(),\n                            name: self._getName(originalFileName, {\n                                name: sizeRecord.name,\n                                type: outputType,\n                                refType: originalBlob.type\n                            }),\n                            blob: new qq.BlobProxy(originalBlob, qq.bind(self._generateScaledImage, self, {\n                                customResizeFunction: customResizeFunction,\n                                maxSize: sizeRecord.maxSize,\n                                orient: orient,\n                                type: outputType,\n                                quality: defaultQuality,\n                                failedText: failedToScaleText,\n                                includeExif: includeExif,\n                                log: log\n                            }))\n                        });\n                    });\n                    records.push({\n                        uuid: originalFileUuid,\n                        name: originalFileName,\n                        size: originalBlob.size,\n                        blob: includeOriginal ? originalBlob : null\n                    });\n                } else {\n                    records.push({\n                        uuid: originalFileUuid,\n                        name: originalFileName,\n                        size: originalBlob.size,\n                        blob: originalBlob\n                    });\n                }\n                return records;\n            },\n            handleNewFile: function(file, name, uuid, size, fileList, batchId, uuidParamName, api) {\n                var self = this, buttonId = file.qqButtonId || file.blob && file.blob.qqButtonId, scaledIds = [], originalId = null, addFileToHandler = api.addFileToHandler, uploadData = api.uploadData, paramsStore = api.paramsStore, proxyGroupId = qq.getUniqueId();\n                qq.each(self.getFileRecords(uuid, name, file), function(idx, record) {\n                    var blobSize = record.size, id;\n                    if (record.blob instanceof qq.BlobProxy) {\n                        blobSize = -1;\n                    }\n                    id = uploadData.addFile({\n                        uuid: record.uuid,\n                        name: record.name,\n                        size: blobSize,\n                        batchId: batchId,\n                        proxyGroupId: proxyGroupId\n                    });\n                    if (record.blob instanceof qq.BlobProxy) {\n                        scaledIds.push(id);\n                    } else {\n                        originalId = id;\n                    }\n                    if (record.blob) {\n                        addFileToHandler(id, record.blob);\n                        fileList.push({\n                            id: id,\n                            file: record.blob\n                        });\n                    } else {\n                        uploadData.setStatus(id, qq.status.REJECTED);\n                    }\n                });\n                if (originalId !== null) {\n                    qq.each(scaledIds, function(idx, scaledId) {\n                        var params = {\n                            qqparentuuid: uploadData.retrieve({\n                                id: originalId\n                            }).uuid,\n                            qqparentsize: uploadData.retrieve({\n                                id: originalId\n                            }).size\n                        };\n                        params[uuidParamName] = uploadData.retrieve({\n                            id: scaledId\n                        }).uuid;\n                        uploadData.setParentId(scaledId, originalId);\n                        paramsStore.addReadOnly(scaledId, params);\n                    });\n                    if (scaledIds.length) {\n                        (function() {\n                            var param = {};\n                            param[uuidParamName] = uploadData.retrieve({\n                                id: originalId\n                            }).uuid;\n                            paramsStore.addReadOnly(originalId, param);\n                        })();\n                    }\n                }\n            }\n        });\n    };\n    qq.extend(qq.Scaler.prototype, {\n        scaleImage: function(id, specs, api) {\n            \"use strict\";\n            if (!qq.supportedFeatures.scaling) {\n                throw new qq.Error(\"Scaling is not supported in this browser!\");\n            }\n            var scalingEffort = new qq.Promise(), log = api.log, file = api.getFile(id), uploadData = api.uploadData.retrieve({\n                id: id\n            }), name = uploadData && uploadData.name, uuid = uploadData && uploadData.uuid, scalingOptions = {\n                customResizer: specs.customResizer,\n                sendOriginal: false,\n                orient: specs.orient,\n                defaultType: specs.type || null,\n                defaultQuality: specs.quality,\n                failedToScaleText: \"Unable to scale\",\n                sizes: [ {\n                    name: \"\",\n                    maxSize: specs.maxSize\n                } ]\n            }, scaler = new qq.Scaler(scalingOptions, log);\n            if (!qq.Scaler || !qq.supportedFeatures.imagePreviews || !file) {\n                scalingEffort.failure();\n                log(\"Could not generate requested scaled image for \" + id + \".  \" + \"Scaling is either not possible in this browser, or the file could not be located.\", \"error\");\n            } else {\n                qq.bind(function() {\n                    var record = scaler.getFileRecords(uuid, name, file)[0];\n                    if (record && record.blob instanceof qq.BlobProxy) {\n                        record.blob.create().then(scalingEffort.success, scalingEffort.failure);\n                    } else {\n                        log(id + \" is not a scalable image!\", \"error\");\n                        scalingEffort.failure();\n                    }\n                }, this)();\n            }\n            return scalingEffort;\n        },\n        _determineOutputType: function(spec) {\n            \"use strict\";\n            var requestedType = spec.requestedType, defaultType = spec.defaultType, referenceType = spec.refType;\n            if (!defaultType && !requestedType) {\n                if (referenceType !== \"image/jpeg\") {\n                    return \"image/png\";\n                }\n                return referenceType;\n            }\n            if (!requestedType) {\n                return defaultType;\n            }\n            if (qq.indexOf(Object.keys(qq.Identify.prototype.PREVIEWABLE_MIME_TYPES), requestedType) >= 0) {\n                if (requestedType === \"image/tiff\") {\n                    return qq.supportedFeatures.tiffPreviews ? requestedType : defaultType;\n                }\n                return requestedType;\n            }\n            return defaultType;\n        },\n        _getName: function(originalName, scaledVersionProperties) {\n            \"use strict\";\n            var startOfExt = originalName.lastIndexOf(\".\"), versionType = scaledVersionProperties.type || \"image/png\", referenceType = scaledVersionProperties.refType, scaledName = \"\", scaledExt = qq.getExtension(originalName), nameAppendage = \"\";\n            if (scaledVersionProperties.name && scaledVersionProperties.name.trim().length) {\n                nameAppendage = \" (\" + scaledVersionProperties.name + \")\";\n            }\n            if (startOfExt >= 0) {\n                scaledName = originalName.substr(0, startOfExt);\n                if (referenceType !== versionType) {\n                    scaledExt = versionType.split(\"/\")[1];\n                }\n                scaledName += nameAppendage + \".\" + scaledExt;\n            } else {\n                scaledName = originalName + nameAppendage;\n            }\n            return scaledName;\n        },\n        _getSortedSizes: function(sizes) {\n            \"use strict\";\n            sizes = qq.extend([], sizes);\n            return sizes.sort(function(a, b) {\n                if (a.maxSize > b.maxSize) {\n                    return 1;\n                }\n                if (a.maxSize < b.maxSize) {\n                    return -1;\n                }\n                return 0;\n            });\n        },\n        _generateScaledImage: function(spec, sourceFile) {\n            \"use strict\";\n            var self = this, customResizeFunction = spec.customResizeFunction, log = spec.log, maxSize = spec.maxSize, orient = spec.orient, type = spec.type, quality = spec.quality, failedText = spec.failedText, includeExif = spec.includeExif && sourceFile.type === \"image/jpeg\" && type === \"image/jpeg\", scalingEffort = new qq.Promise(), imageGenerator = new qq.ImageGenerator(log), canvas = document.createElement(\"canvas\");\n            log(\"Attempting to generate scaled version for \" + sourceFile.name);\n            imageGenerator.generate(sourceFile, canvas, {\n                maxSize: maxSize,\n                orient: orient,\n                customResizeFunction: customResizeFunction\n            }).then(function() {\n                var scaledImageDataUri = canvas.toDataURL(type, quality), signalSuccess = function() {\n                    log(\"Success generating scaled version for \" + sourceFile.name);\n                    var blob = qq.dataUriToBlob(scaledImageDataUri);\n                    scalingEffort.success(blob);\n                };\n                if (includeExif) {\n                    self._insertExifHeader(sourceFile, scaledImageDataUri, log).then(function(scaledImageDataUriWithExif) {\n                        scaledImageDataUri = scaledImageDataUriWithExif;\n                        signalSuccess();\n                    }, function() {\n                        log(\"Problem inserting EXIF header into scaled image.  Using scaled image w/out EXIF data.\", \"error\");\n                        signalSuccess();\n                    });\n                } else {\n                    signalSuccess();\n                }\n            }, function() {\n                log(\"Failed attempt to generate scaled version for \" + sourceFile.name, \"error\");\n                scalingEffort.failure(failedText);\n            });\n            return scalingEffort;\n        },\n        _insertExifHeader: function(originalImage, scaledImageDataUri, log) {\n            \"use strict\";\n            var reader = new FileReader(), insertionEffort = new qq.Promise(), originalImageDataUri = \"\";\n            reader.onload = function() {\n                originalImageDataUri = reader.result;\n                insertionEffort.success(qq.ExifRestorer.restore(originalImageDataUri, scaledImageDataUri));\n            };\n            reader.onerror = function() {\n                log(\"Problem reading \" + originalImage.name + \" during attempt to transfer EXIF data to scaled version.\", \"error\");\n                insertionEffort.failure();\n            };\n            reader.readAsDataURL(originalImage);\n            return insertionEffort;\n        },\n        _dataUriToBlob: function(dataUri) {\n            \"use strict\";\n            var byteString, mimeString, arrayBuffer, intArray;\n            if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n                byteString = atob(dataUri.split(\",\")[1]);\n            } else {\n                byteString = decodeURI(dataUri.split(\",\")[1]);\n            }\n            mimeString = dataUri.split(\",\")[0].split(\":\")[1].split(\";\")[0];\n            arrayBuffer = new ArrayBuffer(byteString.length);\n            intArray = new Uint8Array(arrayBuffer);\n            qq.each(byteString, function(idx, character) {\n                intArray[idx] = character.charCodeAt(0);\n            });\n            return this._createBlob(arrayBuffer, mimeString);\n        },\n        _createBlob: function(data, mime) {\n            \"use strict\";\n            var BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder, blobBuilder = BlobBuilder && new BlobBuilder();\n            if (blobBuilder) {\n                blobBuilder.append(data);\n                return blobBuilder.getBlob(mime);\n            } else {\n                return new Blob([ data ], {\n                    type: mime\n                });\n            }\n        }\n    });\n    qq.ExifRestorer = function() {\n        var ExifRestorer = {};\n        ExifRestorer.KEY_STR = \"ABCDEFGHIJKLMNOP\" + \"QRSTUVWXYZabcdef\" + \"ghijklmnopqrstuv\" + \"wxyz0123456789+/\" + \"=\";\n        ExifRestorer.encode64 = function(input) {\n            var output = \"\", chr1, chr2, chr3 = \"\", enc1, enc2, enc3, enc4 = \"\", i = 0;\n            do {\n                chr1 = input[i++];\n                chr2 = input[i++];\n                chr3 = input[i++];\n                enc1 = chr1 >> 2;\n                enc2 = (chr1 & 3) << 4 | chr2 >> 4;\n                enc3 = (chr2 & 15) << 2 | chr3 >> 6;\n                enc4 = chr3 & 63;\n                if (isNaN(chr2)) {\n                    enc3 = enc4 = 64;\n                } else if (isNaN(chr3)) {\n                    enc4 = 64;\n                }\n                output = output + this.KEY_STR.charAt(enc1) + this.KEY_STR.charAt(enc2) + this.KEY_STR.charAt(enc3) + this.KEY_STR.charAt(enc4);\n                chr1 = chr2 = chr3 = \"\";\n                enc1 = enc2 = enc3 = enc4 = \"\";\n            } while (i < input.length);\n            return output;\n        };\n        ExifRestorer.restore = function(origFileBase64, resizedFileBase64) {\n            var expectedBase64Header = \"data:image/jpeg;base64,\";\n            if (!origFileBase64.match(expectedBase64Header)) {\n                return resizedFileBase64;\n            }\n            var rawImage = this.decode64(origFileBase64.replace(expectedBase64Header, \"\"));\n            var segments = this.slice2Segments(rawImage);\n            var image = this.exifManipulation(resizedFileBase64, segments);\n            return expectedBase64Header + this.encode64(image);\n        };\n        ExifRestorer.exifManipulation = function(resizedFileBase64, segments) {\n            var exifArray = this.getExifArray(segments), newImageArray = this.insertExif(resizedFileBase64, exifArray), aBuffer = new Uint8Array(newImageArray);\n            return aBuffer;\n        };\n        ExifRestorer.getExifArray = function(segments) {\n            var seg;\n            for (var x = 0; x < segments.length; x++) {\n                seg = segments[x];\n                if (seg[0] == 255 & seg[1] == 225) {\n                    return seg;\n                }\n            }\n            return [];\n        };\n        ExifRestorer.insertExif = function(resizedFileBase64, exifArray) {\n            var imageData = resizedFileBase64.replace(\"data:image/jpeg;base64,\", \"\"), buf = this.decode64(imageData), separatePoint = buf.indexOf(255, 3), mae = buf.slice(0, separatePoint), ato = buf.slice(separatePoint), array = mae;\n            array = array.concat(exifArray);\n            array = array.concat(ato);\n            return array;\n        };\n        ExifRestorer.slice2Segments = function(rawImageArray) {\n            var head = 0, segments = [];\n            while (1) {\n                if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 218) {\n                    break;\n                }\n                if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 216) {\n                    head += 2;\n                } else {\n                    var length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3], endPoint = head + length + 2, seg = rawImageArray.slice(head, endPoint);\n                    segments.push(seg);\n                    head = endPoint;\n                }\n                if (head > rawImageArray.length) {\n                    break;\n                }\n            }\n            return segments;\n        };\n        ExifRestorer.decode64 = function(input) {\n            var output = \"\", chr1, chr2, chr3 = \"\", enc1, enc2, enc3, enc4 = \"\", i = 0, buf = [];\n            var base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n            if (base64test.exec(input)) {\n                throw new Error(\"There were invalid base64 characters in the input text.  \" + \"Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\");\n            }\n            input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n            do {\n                enc1 = this.KEY_STR.indexOf(input.charAt(i++));\n                enc2 = this.KEY_STR.indexOf(input.charAt(i++));\n                enc3 = this.KEY_STR.indexOf(input.charAt(i++));\n                enc4 = this.KEY_STR.indexOf(input.charAt(i++));\n                chr1 = enc1 << 2 | enc2 >> 4;\n                chr2 = (enc2 & 15) << 4 | enc3 >> 2;\n                chr3 = (enc3 & 3) << 6 | enc4;\n                buf.push(chr1);\n                if (enc3 != 64) {\n                    buf.push(chr2);\n                }\n                if (enc4 != 64) {\n                    buf.push(chr3);\n                }\n                chr1 = chr2 = chr3 = \"\";\n                enc1 = enc2 = enc3 = enc4 = \"\";\n            } while (i < input.length);\n            return buf;\n        };\n        return ExifRestorer;\n    }();\n    qq.TotalProgress = function(callback, getSize) {\n        \"use strict\";\n        var perFileProgress = {}, totalLoaded = 0, totalSize = 0, lastLoadedSent = -1, lastTotalSent = -1, callbackProxy = function(loaded, total) {\n            if (loaded !== lastLoadedSent || total !== lastTotalSent) {\n                callback(loaded, total);\n            }\n            lastLoadedSent = loaded;\n            lastTotalSent = total;\n        }, noRetryableFiles = function(failed, retryable) {\n            var none = true;\n            qq.each(failed, function(idx, failedId) {\n                if (qq.indexOf(retryable, failedId) >= 0) {\n                    none = false;\n                    return false;\n                }\n            });\n            return none;\n        }, onCancel = function(id) {\n            updateTotalProgress(id, -1, -1);\n            delete perFileProgress[id];\n        }, onAllComplete = function(successful, failed, retryable) {\n            if (failed.length === 0 || noRetryableFiles(failed, retryable)) {\n                callbackProxy(totalSize, totalSize);\n                this.reset();\n            }\n        }, onNew = function(id) {\n            var size = getSize(id);\n            if (size > 0) {\n                updateTotalProgress(id, 0, size);\n                perFileProgress[id] = {\n                    loaded: 0,\n                    total: size\n                };\n            }\n        }, updateTotalProgress = function(id, newLoaded, newTotal) {\n            var oldLoaded = perFileProgress[id] ? perFileProgress[id].loaded : 0, oldTotal = perFileProgress[id] ? perFileProgress[id].total : 0;\n            if (newLoaded === -1 && newTotal === -1) {\n                totalLoaded -= oldLoaded;\n                totalSize -= oldTotal;\n            } else {\n                if (newLoaded) {\n                    totalLoaded += newLoaded - oldLoaded;\n                }\n                if (newTotal) {\n                    totalSize += newTotal - oldTotal;\n                }\n            }\n            callbackProxy(totalLoaded, totalSize);\n        };\n        qq.extend(this, {\n            onAllComplete: onAllComplete,\n            onStatusChange: function(id, oldStatus, newStatus) {\n                if (newStatus === qq.status.CANCELED || newStatus === qq.status.REJECTED) {\n                    onCancel(id);\n                } else if (newStatus === qq.status.SUBMITTING) {\n                    onNew(id);\n                }\n            },\n            onIndividualProgress: function(id, loaded, total) {\n                updateTotalProgress(id, loaded, total);\n                perFileProgress[id] = {\n                    loaded: loaded,\n                    total: total\n                };\n            },\n            onNewSize: function(id) {\n                onNew(id);\n            },\n            reset: function() {\n                perFileProgress = {};\n                totalLoaded = 0;\n                totalSize = 0;\n            }\n        });\n    };\n    qq.PasteSupport = function(o) {\n        \"use strict\";\n        var options, detachPasteHandler;\n        options = {\n            targetElement: null,\n            callbacks: {\n                log: function(message, level) {},\n                pasteReceived: function(blob) {}\n            }\n        };\n        function isImage(item) {\n            return item.type && item.type.indexOf(\"image/\") === 0;\n        }\n        function registerPasteHandler() {\n            detachPasteHandler = qq(options.targetElement).attach(\"paste\", function(event) {\n                var clipboardData = event.clipboardData;\n                if (clipboardData) {\n                    qq.each(clipboardData.items, function(idx, item) {\n                        if (isImage(item)) {\n                            var blob = item.getAsFile();\n                            options.callbacks.pasteReceived(blob);\n                        }\n                    });\n                }\n            });\n        }\n        function unregisterPasteHandler() {\n            if (detachPasteHandler) {\n                detachPasteHandler();\n            }\n        }\n        qq.extend(options, o);\n        registerPasteHandler();\n        qq.extend(this, {\n            reset: function() {\n                unregisterPasteHandler();\n            }\n        });\n    };\n    qq.FormSupport = function(options, startUpload, log) {\n        \"use strict\";\n        var self = this, interceptSubmit = options.interceptSubmit, formEl = options.element, autoUpload = options.autoUpload;\n        qq.extend(this, {\n            newEndpoint: null,\n            newAutoUpload: autoUpload,\n            attachedToForm: false,\n            getFormInputsAsObject: function() {\n                if (formEl == null) {\n                    return null;\n                }\n                return self._form2Obj(formEl);\n            }\n        });\n        function determineNewEndpoint(formEl) {\n            if (formEl.getAttribute(\"action\")) {\n                self.newEndpoint = formEl.getAttribute(\"action\");\n            }\n        }\n        function validateForm(formEl, nativeSubmit) {\n            if (formEl.checkValidity && !formEl.checkValidity()) {\n                log(\"Form did not pass validation checks - will not upload.\", \"error\");\n                nativeSubmit();\n            } else {\n                return true;\n            }\n        }\n        function maybeUploadOnSubmit(formEl) {\n            var nativeSubmit = formEl.submit;\n            qq(formEl).attach(\"submit\", function(event) {\n                event = event || window.event;\n                if (event.preventDefault) {\n                    event.preventDefault();\n                } else {\n                    event.returnValue = false;\n                }\n                validateForm(formEl, nativeSubmit) && startUpload();\n            });\n            formEl.submit = function() {\n                validateForm(formEl, nativeSubmit) && startUpload();\n            };\n        }\n        function determineFormEl(formEl) {\n            if (formEl) {\n                if (qq.isString(formEl)) {\n                    formEl = document.getElementById(formEl);\n                }\n                if (formEl) {\n                    log(\"Attaching to form element.\");\n                    determineNewEndpoint(formEl);\n                    interceptSubmit && maybeUploadOnSubmit(formEl);\n                }\n            }\n            return formEl;\n        }\n        formEl = determineFormEl(formEl);\n        this.attachedToForm = !!formEl;\n    };\n    qq.extend(qq.FormSupport.prototype, {\n        _form2Obj: function(form) {\n            \"use strict\";\n            var obj = {}, notIrrelevantType = function(type) {\n                var irrelevantTypes = [ \"button\", \"image\", \"reset\", \"submit\" ];\n                return qq.indexOf(irrelevantTypes, type.toLowerCase()) < 0;\n            }, radioOrCheckbox = function(type) {\n                return qq.indexOf([ \"checkbox\", \"radio\" ], type.toLowerCase()) >= 0;\n            }, ignoreValue = function(el) {\n                if (radioOrCheckbox(el.type) && !el.checked) {\n                    return true;\n                }\n                return el.disabled && el.type.toLowerCase() !== \"hidden\";\n            }, selectValue = function(select) {\n                var value = null;\n                qq.each(qq(select).children(), function(idx, child) {\n                    if (child.tagName.toLowerCase() === \"option\" && child.selected) {\n                        value = child.value;\n                        return false;\n                    }\n                });\n                return value;\n            };\n            qq.each(form.elements, function(idx, el) {\n                if ((qq.isInput(el, true) || el.tagName.toLowerCase() === \"textarea\") && notIrrelevantType(el.type) && !ignoreValue(el)) {\n                    obj[el.name] = el.value;\n                } else if (el.tagName.toLowerCase() === \"select\" && !ignoreValue(el)) {\n                    var value = selectValue(el);\n                    if (value !== null) {\n                        obj[el.name] = value;\n                    }\n                }\n            });\n            return obj;\n        }\n    });\n    qq.traditional = qq.traditional || {};\n    qq.traditional.FormUploadHandler = function(options, proxy) {\n        \"use strict\";\n        var handler = this, getName = proxy.getName, getUuid = proxy.getUuid, log = proxy.log;\n        function getIframeContentJson(id, iframe) {\n            var response, doc, innerHtml;\n            try {\n                doc = iframe.contentDocument || iframe.contentWindow.document;\n                innerHtml = doc.body.innerHTML;\n                log(\"converting iframe's innerHTML to JSON\");\n                log(\"innerHTML = \" + innerHtml);\n                if (innerHtml && innerHtml.match(/^<pre/i)) {\n                    innerHtml = doc.body.firstChild.firstChild.nodeValue;\n                }\n                response = handler._parseJsonResponse(innerHtml);\n            } catch (error) {\n                log(\"Error when attempting to parse form upload response (\" + error.message + \")\", \"error\");\n                response = {\n                    success: false\n                };\n            }\n            return response;\n        }\n        function createForm(id, iframe) {\n            var params = options.paramsStore.get(id), method = options.method.toLowerCase() === \"get\" ? \"GET\" : \"POST\", endpoint = options.endpointStore.get(id), name = getName(id);\n            params[options.uuidName] = getUuid(id);\n            params[options.filenameParam] = name;\n            return handler._initFormForUpload({\n                method: method,\n                endpoint: endpoint,\n                params: params,\n                paramsInBody: options.paramsInBody,\n                targetName: iframe.name\n            });\n        }\n        this.uploadFile = function(id) {\n            var input = handler.getInput(id), iframe = handler._createIframe(id), promise = new qq.Promise(), form;\n            form = createForm(id, iframe);\n            form.appendChild(input);\n            handler._attachLoadEvent(iframe, function(responseFromMessage) {\n                log(\"iframe loaded\");\n                var response = responseFromMessage ? responseFromMessage : getIframeContentJson(id, iframe);\n                handler._detachLoadEvent(id);\n                if (!options.cors.expected) {\n                    qq(iframe).remove();\n                }\n                if (response.success) {\n                    promise.success(response);\n                } else {\n                    promise.failure(response);\n                }\n            });\n            log(\"Sending upload request for \" + id);\n            form.submit();\n            qq(form).remove();\n            return promise;\n        };\n        qq.extend(this, new qq.FormUploadHandler({\n            options: {\n                isCors: options.cors.expected,\n                inputName: options.inputName\n            },\n            proxy: {\n                onCancel: options.onCancel,\n                getName: getName,\n                getUuid: getUuid,\n                log: log\n            }\n        }));\n    };\n    qq.traditional = qq.traditional || {};\n    qq.traditional.XhrUploadHandler = function(spec, proxy) {\n        \"use strict\";\n        var handler = this, getName = proxy.getName, getSize = proxy.getSize, getUuid = proxy.getUuid, log = proxy.log, multipart = spec.forceMultipart || spec.paramsInBody, addChunkingSpecificParams = function(id, params, chunkData) {\n            var size = getSize(id), name = getName(id);\n            if (!spec.omitDefaultParams) {\n                params[spec.chunking.paramNames.partIndex] = chunkData.part;\n                params[spec.chunking.paramNames.partByteOffset] = chunkData.start;\n                params[spec.chunking.paramNames.chunkSize] = chunkData.size;\n                params[spec.chunking.paramNames.totalParts] = chunkData.count;\n                params[spec.totalFileSizeName] = size;\n            }\n            if (multipart && !spec.omitDefaultParams) {\n                params[spec.filenameParam] = name;\n            }\n        }, allChunksDoneRequester = new qq.traditional.AllChunksDoneAjaxRequester({\n            cors: spec.cors,\n            endpoint: spec.chunking.success.endpoint,\n            headers: spec.chunking.success.headers,\n            jsonPayload: spec.chunking.success.jsonPayload,\n            log: log,\n            method: spec.chunking.success.method,\n            params: spec.chunking.success.params\n        }), createReadyStateChangedHandler = function(id, xhr) {\n            var promise = new qq.Promise();\n            xhr.onreadystatechange = function() {\n                if (xhr.readyState === 4) {\n                    var result = onUploadOrChunkComplete(id, xhr);\n                    if (result.success) {\n                        promise.success(result.response, xhr);\n                    } else {\n                        promise.failure(result.response, xhr);\n                    }\n                }\n            };\n            return promise;\n        }, getChunksCompleteParams = function(id) {\n            var params = spec.paramsStore.get(id), name = getName(id), size = getSize(id);\n            params[spec.uuidName] = getUuid(id);\n            params[spec.filenameParam] = name;\n            params[spec.totalFileSizeName] = size;\n            params[spec.chunking.paramNames.totalParts] = handler._getTotalChunks(id);\n            return params;\n        }, isErrorUploadResponse = function(xhr, response) {\n            return qq.indexOf([ 200, 201, 202, 203, 204 ], xhr.status) < 0 || spec.requireSuccessJson && !response.success || response.reset;\n        }, onUploadOrChunkComplete = function(id, xhr) {\n            var response;\n            log(\"xhr - server response received for \" + id);\n            log(\"responseText = \" + xhr.responseText);\n            response = parseResponse(true, xhr);\n            return {\n                success: !isErrorUploadResponse(xhr, response),\n                response: response\n            };\n        }, parseResponse = function(upload, xhr) {\n            var response = {};\n            try {\n                log(qq.format(\"Received response status {} with body: {}\", xhr.status, xhr.responseText));\n                response = qq.parseJson(xhr.responseText);\n            } catch (error) {\n                upload && spec.requireSuccessJson && log(\"Error when attempting to parse xhr response text (\" + error.message + \")\", \"error\");\n            }\n            return response;\n        }, sendChunksCompleteRequest = function(id) {\n            var promise = new qq.Promise();\n            allChunksDoneRequester.complete(id, handler._createXhr(id), getChunksCompleteParams(id), spec.customHeaders.get(id)).then(function(xhr) {\n                promise.success(parseResponse(false, xhr), xhr);\n            }, function(xhr) {\n                promise.failure(parseResponse(false, xhr), xhr);\n            });\n            return promise;\n        }, setParamsAndGetEntityToSend = function(entityToSendParams) {\n            var fileOrBlob = entityToSendParams.fileOrBlob;\n            var id = entityToSendParams.id;\n            var xhr = entityToSendParams.xhr;\n            var xhrOverrides = entityToSendParams.xhrOverrides || {};\n            var customParams = entityToSendParams.customParams || {};\n            var defaultParams = entityToSendParams.params || {};\n            var xhrOverrideParams = xhrOverrides.params || {};\n            var params;\n            var formData = multipart ? new FormData() : null, method = xhrOverrides.method || spec.method, endpoint = xhrOverrides.endpoint || spec.endpointStore.get(id), name = getName(id), size = getSize(id);\n            if (spec.omitDefaultParams) {\n                params = qq.extend({}, customParams);\n                qq.extend(params, xhrOverrideParams);\n            } else {\n                params = qq.extend({}, customParams);\n                qq.extend(params, xhrOverrideParams);\n                qq.extend(params, defaultParams);\n                params[spec.uuidName] = getUuid(id);\n                params[spec.filenameParam] = name;\n                if (multipart) {\n                    params[spec.totalFileSizeName] = size;\n                } else if (!spec.paramsInBody) {\n                    params[spec.inputName] = name;\n                }\n            }\n            if (!spec.paramsInBody) {\n                endpoint = qq.obj2url(params, endpoint);\n            }\n            xhr.open(method, endpoint, true);\n            if (spec.cors.expected && spec.cors.sendCredentials) {\n                xhr.withCredentials = true;\n            }\n            if (multipart) {\n                if (spec.paramsInBody) {\n                    qq.obj2FormData(params, formData);\n                }\n                formData.append(spec.inputName, fileOrBlob);\n                return formData;\n            }\n            return fileOrBlob;\n        }, setUploadHeaders = function(headersOptions) {\n            var headerOverrides = headersOptions.headerOverrides;\n            var id = headersOptions.id;\n            var xhr = headersOptions.xhr;\n            if (headerOverrides) {\n                qq.each(headerOverrides, function(headerName, headerValue) {\n                    xhr.setRequestHeader(headerName, headerValue);\n                });\n            } else {\n                var extraHeaders = spec.customHeaders.get(id), fileOrBlob = handler.getFile(id);\n                xhr.setRequestHeader(\"Accept\", \"application/json\");\n                xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n                xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n                if (!multipart) {\n                    xhr.setRequestHeader(\"Content-Type\", \"application/octet-stream\");\n                    xhr.setRequestHeader(\"X-Mime-Type\", fileOrBlob.type);\n                }\n                qq.each(extraHeaders, function(name, val) {\n                    xhr.setRequestHeader(name, val);\n                });\n            }\n        };\n        qq.extend(this, {\n            uploadChunk: function(uploadChunkParams) {\n                var id = uploadChunkParams.id;\n                var chunkIdx = uploadChunkParams.chunkIdx;\n                var overrides = uploadChunkParams.overrides || {};\n                var resuming = uploadChunkParams.resuming;\n                var chunkData = handler._getChunkData(id, chunkIdx), xhr = handler._createXhr(id, chunkIdx), promise, toSend, customParams, params = {};\n                promise = createReadyStateChangedHandler(id, xhr);\n                handler._registerProgressHandler(id, chunkIdx, chunkData.size);\n                customParams = spec.paramsStore.get(id);\n                addChunkingSpecificParams(id, params, chunkData);\n                if (resuming) {\n                    params[spec.resume.paramNames.resuming] = true;\n                }\n                toSend = setParamsAndGetEntityToSend({\n                    fileOrBlob: chunkData.blob,\n                    id: id,\n                    customParams: customParams,\n                    params: params,\n                    xhr: xhr,\n                    xhrOverrides: overrides\n                });\n                setUploadHeaders({\n                    headerOverrides: overrides.headers,\n                    id: id,\n                    xhr: xhr\n                });\n                xhr.send(toSend);\n                return promise;\n            },\n            uploadFile: function(id) {\n                var fileOrBlob = handler.getFile(id), promise, xhr, customParams, toSend;\n                xhr = handler._createXhr(id);\n                handler._registerProgressHandler(id);\n                promise = createReadyStateChangedHandler(id, xhr);\n                customParams = spec.paramsStore.get(id);\n                toSend = setParamsAndGetEntityToSend({\n                    fileOrBlob: fileOrBlob,\n                    id: id,\n                    customParams: customParams,\n                    xhr: xhr\n                });\n                setUploadHeaders({\n                    id: id,\n                    xhr: xhr\n                });\n                xhr.send(toSend);\n                return promise;\n            }\n        });\n        qq.extend(this, new qq.XhrUploadHandler({\n            options: qq.extend({\n                namespace: \"traditional\"\n            }, spec),\n            proxy: qq.extend({\n                getEndpoint: spec.endpointStore.get\n            }, proxy)\n        }));\n        qq.override(this, function(super_) {\n            return {\n                finalizeChunks: function(id) {\n                    proxy.onFinalizing(id);\n                    if (spec.chunking.success.endpoint) {\n                        return sendChunksCompleteRequest(id);\n                    } else {\n                        return super_.finalizeChunks(id, qq.bind(parseResponse, this, true));\n                    }\n                }\n            };\n        });\n    };\n    qq.traditional.AllChunksDoneAjaxRequester = function(o) {\n        \"use strict\";\n        var requester, options = {\n            cors: {\n                allowXdr: false,\n                expected: false,\n                sendCredentials: false\n            },\n            endpoint: null,\n            log: function(str, level) {},\n            method: \"POST\"\n        }, promises = {}, endpointHandler = {\n            get: function(id) {\n                if (qq.isFunction(options.endpoint)) {\n                    return options.endpoint(id);\n                }\n                return options.endpoint;\n            }\n        };\n        qq.extend(options, o);\n        requester = qq.extend(this, new qq.AjaxRequester({\n            acceptHeader: \"application/json\",\n            contentType: options.jsonPayload ? \"application/json\" : \"application/x-www-form-urlencoded\",\n            validMethods: [ options.method ],\n            method: options.method,\n            endpointStore: endpointHandler,\n            allowXRequestedWithAndCacheControl: false,\n            cors: options.cors,\n            log: options.log,\n            onComplete: function(id, xhr, isError) {\n                var promise = promises[id];\n                delete promises[id];\n                if (isError) {\n                    promise.failure(xhr);\n                } else {\n                    promise.success(xhr);\n                }\n            }\n        }));\n        qq.extend(this, {\n            complete: function(id, xhr, params, headers) {\n                var promise = new qq.Promise();\n                options.log(\"Submitting All Chunks Done request for \" + id);\n                promises[id] = promise;\n                requester.initTransport(id).withParams(options.params(id) || params).withHeaders(options.headers(id) || headers).send(xhr);\n                return promise;\n            }\n        });\n    };\n})(window);\n//# sourceMappingURL=fine-uploader.core.js.map\n\n\n// WEBPACK FOOTER //\n// /Users/dmp/Code/panneau/js/fields/core/node_modules/fine-uploader/fine-uploader/fine-uploader.core.js"],"sourceRoot":""}