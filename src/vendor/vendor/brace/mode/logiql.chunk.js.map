{"version":3,"sources":["webpack:///vendor/brace/mode/logiql.chunk.js","webpack:////Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/logiql.js"],"names":["webpackJsonppanneau","409","module","exports","_typeof","Symbol","iterator","obj","constructor","prototype","ace","define","acequire","oop","TextHighlightRules","LogiQLHighlightRules","this","$rules","start","token","regex","push","next","defaultToken","comment","include","normalizeRules","inherits","BaseFoldMode","FoldMode","Range","getFoldWidgetRange","session","foldStyle","row","range","indentationBlock","re","line","getLine","startLevel","search","startColumn","length","maxRow","getLength","startRow","endRow","level","endColumn","getFoldWidget","indent","prev","prevIndent","nextIndent","foldWidgets","call","MatchingBraceOutdent","checkOutdent","input","test","autoOutdent","doc","match","column","openBracePos","findMatchingBracket","$getIndent","replace","TextMode","Mode","TokenIterator","CstyleBehaviour","HighlightRules","foldingRules","$outdent","$behaviour","lineCommentStart","blockComment","end","getNextLineIndent","state","tab","tokenizedLine","getTokenizer","getLineTokens","tokens","type","prevLine","lastIndexOf","startRange","getMatching","undefined","selection","lead","tok","startToken","getTokenAt","it","step","stepForward","stepBackward","col","getCurrentTokenColumn","getCurrentTokenRow","value","$id"],"mappings":"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","file":"vendor/brace/mode/logiql.chunk.js","sourcesContent":["webpackJsonppanneau([166],{\n\n/***/ 409:\n/***/ (function(module, exports) {\n\nvar _typeof=typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};ace.define(\"ace/mode/logiql_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextHighlightRules=acequire(\"./text_highlight_rules\").TextHighlightRules;var LogiQLHighlightRules=function LogiQLHighlightRules(){this.$rules={start:[{token:'comment.block',regex:'/\\\\*',push:[{token:'comment.block',regex:'\\\\*/',next:'pop'},{defaultToken:'comment.block'}]},{token:'comment.single',regex:'//.*'},{token:'constant.numeric',regex:'\\\\d+(?:\\\\.\\\\d+)?(?:[eE][+-]?\\\\d+)?[fd]?'},{token:'string',regex:'\"',push:[{token:'string',regex:'\"',next:'pop'},{defaultToken:'string'}]},{token:'constant.language',regex:'\\\\b(true|false)\\\\b'},{token:'entity.name.type.logicblox',regex:'`[a-zA-Z_:]+(\\\\d|\\\\a)*\\\\b'},{token:'keyword.start',regex:'->',comment:'Constraint'},{token:'keyword.start',regex:'-->',comment:'Level 1 Constraint'},{token:'keyword.start',regex:'<-',comment:'Rule'},{token:'keyword.start',regex:'<--',comment:'Level 1 Rule'},{token:'keyword.end',regex:'\\\\.',comment:'Terminator'},{token:'keyword.other',regex:'!',comment:'Negation'},{token:'keyword.other',regex:',',comment:'Conjunction'},{token:'keyword.other',regex:';',comment:'Disjunction'},{token:'keyword.operator',regex:'<=|>=|!=|<|>',comment:'Equality'},{token:'keyword.other',regex:'@',comment:'Equality'},{token:'keyword.operator',regex:'\\\\+|-|\\\\*|/',comment:'Arithmetic operations'},{token:'keyword',regex:'::',comment:'Colon colon'},{token:'support.function',regex:'\\\\b(agg\\\\s*<<)',push:[{include:'$self'},{token:'support.function',regex:'>>',next:'pop'}]},{token:'storage.modifier',regex:'\\\\b(lang:[\\\\w:]*)'},{token:['storage.type','text'],regex:'(export|sealed|clauses|block|alias|alias_all)(\\\\s*\\\\()(?=`)'},{token:'entity.name',regex:'[a-zA-Z_][a-zA-Z_0-9:]*(@prev|@init|@final)?(?=(\\\\(|\\\\[))'},{token:'variable.parameter',regex:'([a-zA-Z][a-zA-Z_0-9]*|_)\\\\s*(?=(,|\\\\.|<-|->|\\\\)|\\\\]|=))'}]};this.normalizeRules();};oop.inherits(LogiQLHighlightRules,TextHighlightRules);exports.LogiQLHighlightRules=LogiQLHighlightRules;});ace.define(\"ace/mode/folding/coffee\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../../lib/oop\");var BaseFoldMode=acequire(\"./fold_mode\").FoldMode;var Range=acequire(\"../../range\").Range;var FoldMode=exports.FoldMode=function(){};oop.inherits(FoldMode,BaseFoldMode);(function(){this.getFoldWidgetRange=function(session,foldStyle,row){var range=this.indentationBlock(session,row);if(range)return range;var re=/\\S/;var line=session.getLine(row);var startLevel=line.search(re);if(startLevel==-1||line[startLevel]!=\"#\")return;var startColumn=line.length;var maxRow=session.getLength();var startRow=row;var endRow=row;while(++row<maxRow){line=session.getLine(row);var level=line.search(re);if(level==-1)continue;if(line[level]!=\"#\")break;endRow=row;}if(endRow>startRow){var endColumn=session.getLine(endRow).length;return new Range(startRow,startColumn,endRow,endColumn);}};this.getFoldWidget=function(session,foldStyle,row){var line=session.getLine(row);var indent=line.search(/\\S/);var next=session.getLine(row+1);var prev=session.getLine(row-1);var prevIndent=prev.search(/\\S/);var nextIndent=next.search(/\\S/);if(indent==-1){session.foldWidgets[row-1]=prevIndent!=-1&&prevIndent<nextIndent?\"start\":\"\";return\"\";}if(prevIndent==-1){if(indent==nextIndent&&line[indent]==\"#\"&&next[indent]==\"#\"){session.foldWidgets[row-1]=\"\";session.foldWidgets[row+1]=\"\";return\"start\";}}else if(prevIndent==indent&&line[indent]==\"#\"&&prev[indent]==\"#\"){if(session.getLine(row-2).search(/\\S/)==-1){session.foldWidgets[row-1]=\"start\";session.foldWidgets[row+1]=\"\";return\"\";}}if(prevIndent!=-1&&prevIndent<indent)session.foldWidgets[row-1]=\"start\";else session.foldWidgets[row-1]=\"\";if(indent<nextIndent)return\"start\";else return\"\";};}).call(FoldMode.prototype);});ace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"],function(acequire,exports,module){\"use strict\";var Range=acequire(\"../range\").Range;var MatchingBraceOutdent=function MatchingBraceOutdent(){};(function(){this.checkOutdent=function(line,input){if(!/^\\s+$/.test(line))return false;return /^\\s*\\}/.test(input);};this.autoOutdent=function(doc,row){var line=doc.getLine(row);var match=line.match(/^(\\s*\\})/);if(!match)return 0;var column=match[1].length;var openBracePos=doc.findMatchingBracket({row:row,column:column});if(!openBracePos||openBracePos.row==row)return 0;var indent=this.$getIndent(doc.getLine(openBracePos.row));doc.replace(new Range(row,0,row,column-1),indent);};this.$getIndent=function(line){return line.match(/^\\s*/)[0];};}).call(MatchingBraceOutdent.prototype);exports.MatchingBraceOutdent=MatchingBraceOutdent;});ace.define(\"ace/mode/logiql\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/logiql_highlight_rules\",\"ace/mode/folding/coffee\",\"ace/token_iterator\",\"ace/range\",\"ace/mode/behaviour/cstyle\",\"ace/mode/matching_brace_outdent\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextMode=acequire(\"./text\").Mode;var LogiQLHighlightRules=acequire(\"./logiql_highlight_rules\").LogiQLHighlightRules;var FoldMode=acequire(\"./folding/coffee\").FoldMode;var TokenIterator=acequire(\"../token_iterator\").TokenIterator;var Range=acequire(\"../range\").Range;var CstyleBehaviour=acequire(\"./behaviour/cstyle\").CstyleBehaviour;var MatchingBraceOutdent=acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;var Mode=function Mode(){this.HighlightRules=LogiQLHighlightRules;this.foldingRules=new FoldMode();this.$outdent=new MatchingBraceOutdent();this.$behaviour=new CstyleBehaviour();};oop.inherits(Mode,TextMode);(function(){this.lineCommentStart=\"//\";this.blockComment={start:\"/*\",end:\"*/\"};this.getNextLineIndent=function(state,line,tab){var indent=this.$getIndent(line);var tokenizedLine=this.getTokenizer().getLineTokens(line,state);var tokens=tokenizedLine.tokens;var endState=tokenizedLine.state;if(/comment|string/.test(endState))return indent;if(tokens.length&&tokens[tokens.length-1].type==\"comment.single\")return indent;var match=line.match();if(/(-->|<--|<-|->|{)\\s*$/.test(line))indent+=tab;return indent;};this.checkOutdent=function(state,line,input){if(this.$outdent.checkOutdent(line,input))return true;if(input!==\"\\n\"&&input!==\"\\r\\n\")return false;if(!/^\\s+/.test(line))return false;return true;};this.autoOutdent=function(state,doc,row){if(this.$outdent.autoOutdent(doc,row))return;var prevLine=doc.getLine(row);var match=prevLine.match(/^\\s+/);var column=prevLine.lastIndexOf(\".\")+1;if(!match||!row||!column)return 0;var line=doc.getLine(row+1);var startRange=this.getMatching(doc,{row:row,column:column});if(!startRange||startRange.start.row==row)return 0;column=match[0].length;var indent=this.$getIndent(doc.getLine(startRange.start.row));doc.replace(new Range(row+1,0,row+1,column),indent);};this.getMatching=function(session,row,column){if(row==undefined)row=session.selection.lead;if((typeof row===\"undefined\"?\"undefined\":_typeof(row))==\"object\"){column=row.column;row=row.row;}var startToken=session.getTokenAt(row,column);var KW_START=\"keyword.start\",KW_END=\"keyword.end\";var tok;if(!startToken)return;if(startToken.type==KW_START){var it=new TokenIterator(session,row,column);it.step=it.stepForward;}else if(startToken.type==KW_END){var it=new TokenIterator(session,row,column);it.step=it.stepBackward;}else return;while(tok=it.step()){if(tok.type==KW_START||tok.type==KW_END)break;}if(!tok||tok.type==startToken.type)return;var col=it.getCurrentTokenColumn();var row=it.getCurrentTokenRow();return new Range(row,col,row,col+tok.value.length);};this.$id=\"ace/mode/logiql\";}).call(Mode.prototype);exports.Mode=Mode;});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// vendor/brace/mode/logiql.chunk.js","ace.define(\"ace/mode/logiql_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar LogiQLHighlightRules = function() {\n\n    this.$rules = { start: \n       [ { token: 'comment.block',\n           regex: '/\\\\*',\n           push: \n            [ { token: 'comment.block', regex: '\\\\*/', next: 'pop' },\n              { defaultToken: 'comment.block' } ]\n            },\n         { token: 'comment.single',\n           regex: '//.*'\n            },\n         { token: 'constant.numeric',\n           regex: '\\\\d+(?:\\\\.\\\\d+)?(?:[eE][+-]?\\\\d+)?[fd]?'\n            },\n         { token: 'string',\n           regex: '\"',\n           push: \n            [ { token: 'string', regex: '\"', next: 'pop' },\n              { defaultToken: 'string' } ]\n            },\n         { token: 'constant.language',\n           regex: '\\\\b(true|false)\\\\b'\n            },\n         { token: 'entity.name.type.logicblox',\n           regex: '`[a-zA-Z_:]+(\\\\d|\\\\a)*\\\\b'\n            },\n         { token: 'keyword.start', regex: '->',  comment: 'Constraint' },\n         { token: 'keyword.start', regex: '-->', comment: 'Level 1 Constraint'},\n         { token: 'keyword.start', regex: '<-',  comment: 'Rule' },\n         { token: 'keyword.start', regex: '<--', comment: 'Level 1 Rule' },\n         { token: 'keyword.end',   regex: '\\\\.', comment: 'Terminator' },\n         { token: 'keyword.other', regex: '!',   comment: 'Negation' },\n         { token: 'keyword.other', regex: ',',   comment: 'Conjunction' },\n         { token: 'keyword.other', regex: ';',   comment: 'Disjunction' },\n         { token: 'keyword.operator', regex: '<=|>=|!=|<|>', comment: 'Equality'},\n         { token: 'keyword.other', regex: '@', comment: 'Equality' },\n         { token: 'keyword.operator', regex: '\\\\+|-|\\\\*|/', comment: 'Arithmetic operations'},\n         { token: 'keyword', regex: '::', comment: 'Colon colon' },\n         { token: 'support.function',\n           regex: '\\\\b(agg\\\\s*<<)',\n           push: \n            [ { include: '$self' },\n              { token: 'support.function',\n                regex: '>>',\n                next: 'pop' } ]\n            },\n         { token: 'storage.modifier',\n           regex: '\\\\b(lang:[\\\\w:]*)'\n            },\n         { token: [ 'storage.type', 'text' ],\n           regex: '(export|sealed|clauses|block|alias|alias_all)(\\\\s*\\\\()(?=`)'\n            },\n         { token: 'entity.name',\n           regex: '[a-zA-Z_][a-zA-Z_0-9:]*(@prev|@init|@final)?(?=(\\\\(|\\\\[))'\n            },\n         { token: 'variable.parameter',\n           regex: '([a-zA-Z][a-zA-Z_0-9]*|_)\\\\s*(?=(,|\\\\.|<-|->|\\\\)|\\\\]|=))'\n            } ] }\n    \n    this.normalizeRules();\n};\n\noop.inherits(LogiQLHighlightRules, TextHighlightRules);\n\nexports.LogiQLHighlightRules = LogiQLHighlightRules;\n});\n\nace.define(\"ace/mode/folding/coffee\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\nvar Range = acequire(\"../../range\").Range;\n\nvar FoldMode = exports.FoldMode = function() {};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var range = this.indentationBlock(session, row);\n        if (range)\n            return range;\n\n        var re = /\\S/;\n        var line = session.getLine(row);\n        var startLevel = line.search(re);\n        if (startLevel == -1 || line[startLevel] != \"#\")\n            return;\n\n        var startColumn = line.length;\n        var maxRow = session.getLength();\n        var startRow = row;\n        var endRow = row;\n\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var level = line.search(re);\n\n            if (level == -1)\n                continue;\n\n            if (line[level] != \"#\")\n                break;\n\n            endRow = row;\n        }\n\n        if (endRow > startRow) {\n            var endColumn = session.getLine(endRow).length;\n            return new Range(startRow, startColumn, endRow, endColumn);\n        }\n    };\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        var next = session.getLine(row + 1);\n        var prev = session.getLine(row - 1);\n        var prevIndent = prev.search(/\\S/);\n        var nextIndent = next.search(/\\S/);\n\n        if (indent == -1) {\n            session.foldWidgets[row - 1] = prevIndent!= -1 && prevIndent < nextIndent ? \"start\" : \"\";\n            return \"\";\n        }\n        if (prevIndent == -1) {\n            if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n                session.foldWidgets[row - 1] = \"\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"start\";\n            }\n        } else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n            if (session.getLine(row - 2).search(/\\S/) == -1) {\n                session.foldWidgets[row - 1] = \"start\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"\";\n            }\n        }\n\n        if (prevIndent!= -1 && prevIndent < indent)\n            session.foldWidgets[row - 1] = \"start\";\n        else\n            session.foldWidgets[row - 1] = \"\";\n\n        if (indent < nextIndent)\n            return \"start\";\n        else\n            return \"\";\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar Range = acequire(\"../range\").Range;\n\nvar MatchingBraceOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        return line.match(/^\\s*/)[0];\n    };\n\n}).call(MatchingBraceOutdent.prototype);\n\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\n\nace.define(\"ace/mode/logiql\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/logiql_highlight_rules\",\"ace/mode/folding/coffee\",\"ace/token_iterator\",\"ace/range\",\"ace/mode/behaviour/cstyle\",\"ace/mode/matching_brace_outdent\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar LogiQLHighlightRules = acequire(\"./logiql_highlight_rules\").LogiQLHighlightRules;\nvar FoldMode = acequire(\"./folding/coffee\").FoldMode;\nvar TokenIterator = acequire(\"../token_iterator\").TokenIterator;\nvar Range = acequire(\"../range\").Range;\nvar CstyleBehaviour = acequire(\"./behaviour/cstyle\").CstyleBehaviour;\nvar MatchingBraceOutdent = acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;\n\nvar Mode = function() {\n    this.HighlightRules = LogiQLHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = new CstyleBehaviour();\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.lineCommentStart = \"//\";\n    this.blockComment = {start: \"/*\", end: \"*/\"};\n\n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n        var endState = tokenizedLine.state;\n        if (/comment|string/.test(endState))  \n            return indent;\n        if (tokens.length && tokens[tokens.length - 1].type == \"comment.single\")\n            return indent;\n\n        var match = line.match();\n        if (/(-->|<--|<-|->|{)\\s*$/.test(line))\n            indent += tab;\n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        if (this.$outdent.checkOutdent(line, input))\n            return true;\n\n        if (input !== \"\\n\" && input !== \"\\r\\n\")\n            return false;\n            \n        if (!/^\\s+/.test(line))\n            return false;\n\n        return true;\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n        if (this.$outdent.autoOutdent(doc, row))\n            return;\n        var prevLine = doc.getLine(row);\n        var match = prevLine.match(/^\\s+/);\n        var column = prevLine.lastIndexOf(\".\") + 1;\n        if (!match || !row || !column) return 0;\n\n        var line = doc.getLine(row + 1);\n        var startRange = this.getMatching(doc, {row: row, column: column});\n        if (!startRange || startRange.start.row == row) return 0;\n\n        column = match[0].length;\n        var indent = this.$getIndent(doc.getLine(startRange.start.row));\n        doc.replace(new Range(row + 1, 0, row + 1, column), indent);\n    };\n\n    this.getMatching = function(session, row, column) {\n        if (row == undefined)\n            row = session.selection.lead\n        if (typeof row == \"object\") {\n            column = row.column;\n            row = row.row;\n        }\n\n        var startToken = session.getTokenAt(row, column);\n        var KW_START = \"keyword.start\", KW_END = \"keyword.end\";\n        var tok;\n        if (!startToken)\n            return;\n        if (startToken.type == KW_START) {\n            var it = new TokenIterator(session, row, column);\n            it.step = it.stepForward;\n        } else if (startToken.type == KW_END) {\n            var it = new TokenIterator(session, row, column);\n            it.step = it.stepBackward;\n        } else\n            return;\n\n        while (tok = it.step()) {\n            if (tok.type == KW_START || tok.type == KW_END)\n                break;\n        }\n        if (!tok || tok.type == startToken.type)\n            return;\n\n        var col = it.getCurrentTokenColumn();\n        var row = it.getCurrentTokenRow();\n        return new Range(row, col, row, col + tok.value.length);\n    };\n    this.$id = \"ace/mode/logiql\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n\n\n\n// WEBPACK FOOTER //\n// /Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/logiql.js"],"sourceRoot":""}