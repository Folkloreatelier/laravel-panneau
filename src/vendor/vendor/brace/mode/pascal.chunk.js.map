{"version":3,"sources":["webpack:///vendor/brace/mode/pascal.chunk.js","webpack:////Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/pascal.js"],"names":["webpackJsonppanneau","305","module","exports","ace","define","acequire","oop","TextHighlightRules","PascalHighlightRules","this","$rules","start","caseInsensitive","token","regex","push_","next","defaultToken","push","normalizeRules","inherits","BaseFoldMode","FoldMode","Range","getFoldWidgetRange","session","foldStyle","row","range","indentationBlock","re","line","getLine","startLevel","search","startColumn","length","maxRow","getLength","startRow","endRow","level","endColumn","getFoldWidget","indent","prev","prevIndent","nextIndent","foldWidgets","call","prototype","TextMode","Mode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","blockComment","end","$id"],"mappings":"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","file":"vendor/brace/mode/pascal.chunk.js","sourcesContent":["webpackJsonppanneau([149],{\n\n/***/ 305:\n/***/ (function(module, exports) {\n\nace.define(\"ace/mode/pascal_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextHighlightRules=acequire(\"./text_highlight_rules\").TextHighlightRules;var PascalHighlightRules=function PascalHighlightRules(){this.$rules={start:[{caseInsensitive:true,token:'keyword.control.pascal',regex:'\\\\b(?:(absolute|abstract|all|and|and_then|array|as|asm|attribute|begin|bindable|case|class|const|constructor|destructor|div|do|do|else|end|except|export|exports|external|far|file|finalization|finally|for|forward|goto|if|implementation|import|in|inherited|initialization|interface|interrupt|is|label|library|mod|module|name|near|nil|not|object|of|only|operator|or|or_else|otherwise|packed|pow|private|program|property|protected|public|published|qualified|record|repeat|resident|restricted|segment|set|shl|shr|then|to|try|type|unit|until|uses|value|var|view|virtual|while|with|xor))\\\\b'},{caseInsensitive:true,token:['variable.pascal',\"text\",'storage.type.prototype.pascal','entity.name.function.prototype.pascal'],regex:'\\\\b(function|procedure)(\\\\s+)(\\\\w+)(\\\\.\\\\w+)?(?=(?:\\\\(.*?\\\\))?;\\\\s*(?:attribute|forward|external))'},{caseInsensitive:true,token:['variable.pascal',\"text\",'storage.type.function.pascal','entity.name.function.pascal'],regex:'\\\\b(function|procedure)(\\\\s+)(\\\\w+)(\\\\.\\\\w+)?'},{token:'constant.numeric.pascal',regex:'\\\\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\\\.?[0-9]*)|(\\\\.[0-9]+))((e|E)(\\\\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\\\\b'},{token:'punctuation.definition.comment.pascal',regex:'--.*$',push_:[{token:'comment.line.double-dash.pascal.one',regex:'$',next:'pop'},{defaultToken:'comment.line.double-dash.pascal.one'}]},{token:'punctuation.definition.comment.pascal',regex:'//.*$',push_:[{token:'comment.line.double-slash.pascal.two',regex:'$',next:'pop'},{defaultToken:'comment.line.double-slash.pascal.two'}]},{token:'punctuation.definition.comment.pascal',regex:'\\\\(\\\\*',push:[{token:'punctuation.definition.comment.pascal',regex:'\\\\*\\\\)',next:'pop'},{defaultToken:'comment.block.pascal.one'}]},{token:'punctuation.definition.comment.pascal',regex:'\\\\{',push:[{token:'punctuation.definition.comment.pascal',regex:'\\\\}',next:'pop'},{defaultToken:'comment.block.pascal.two'}]},{token:'punctuation.definition.string.begin.pascal',regex:'\"',push:[{token:'constant.character.escape.pascal',regex:'\\\\\\\\.'},{token:'punctuation.definition.string.end.pascal',regex:'\"',next:'pop'},{defaultToken:'string.quoted.double.pascal'}]},{token:'punctuation.definition.string.begin.pascal',regex:'\\'',push:[{token:'constant.character.escape.apostrophe.pascal',regex:'\\'\\''},{token:'punctuation.definition.string.end.pascal',regex:'\\'',next:'pop'},{defaultToken:'string.quoted.single.pascal'}]},{token:'keyword.operator',regex:'[+\\\\-;,/*%]|:=|='}]};this.normalizeRules();};oop.inherits(PascalHighlightRules,TextHighlightRules);exports.PascalHighlightRules=PascalHighlightRules;});ace.define(\"ace/mode/folding/coffee\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../../lib/oop\");var BaseFoldMode=acequire(\"./fold_mode\").FoldMode;var Range=acequire(\"../../range\").Range;var FoldMode=exports.FoldMode=function(){};oop.inherits(FoldMode,BaseFoldMode);(function(){this.getFoldWidgetRange=function(session,foldStyle,row){var range=this.indentationBlock(session,row);if(range)return range;var re=/\\S/;var line=session.getLine(row);var startLevel=line.search(re);if(startLevel==-1||line[startLevel]!=\"#\")return;var startColumn=line.length;var maxRow=session.getLength();var startRow=row;var endRow=row;while(++row<maxRow){line=session.getLine(row);var level=line.search(re);if(level==-1)continue;if(line[level]!=\"#\")break;endRow=row;}if(endRow>startRow){var endColumn=session.getLine(endRow).length;return new Range(startRow,startColumn,endRow,endColumn);}};this.getFoldWidget=function(session,foldStyle,row){var line=session.getLine(row);var indent=line.search(/\\S/);var next=session.getLine(row+1);var prev=session.getLine(row-1);var prevIndent=prev.search(/\\S/);var nextIndent=next.search(/\\S/);if(indent==-1){session.foldWidgets[row-1]=prevIndent!=-1&&prevIndent<nextIndent?\"start\":\"\";return\"\";}if(prevIndent==-1){if(indent==nextIndent&&line[indent]==\"#\"&&next[indent]==\"#\"){session.foldWidgets[row-1]=\"\";session.foldWidgets[row+1]=\"\";return\"start\";}}else if(prevIndent==indent&&line[indent]==\"#\"&&prev[indent]==\"#\"){if(session.getLine(row-2).search(/\\S/)==-1){session.foldWidgets[row-1]=\"start\";session.foldWidgets[row+1]=\"\";return\"\";}}if(prevIndent!=-1&&prevIndent<indent)session.foldWidgets[row-1]=\"start\";else session.foldWidgets[row-1]=\"\";if(indent<nextIndent)return\"start\";else return\"\";};}).call(FoldMode.prototype);});ace.define(\"ace/mode/pascal\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/pascal_highlight_rules\",\"ace/mode/folding/coffee\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextMode=acequire(\"./text\").Mode;var PascalHighlightRules=acequire(\"./pascal_highlight_rules\").PascalHighlightRules;var FoldMode=acequire(\"./folding/coffee\").FoldMode;var Mode=function Mode(){this.HighlightRules=PascalHighlightRules;this.foldingRules=new FoldMode();this.$behaviour=this.$defaultBehaviour;};oop.inherits(Mode,TextMode);(function(){this.lineCommentStart=[\"--\",\"//\"];this.blockComment=[{start:\"(*\",end:\"*)\"},{start:\"{\",end:\"}\"}];this.$id=\"ace/mode/pascal\";}).call(Mode.prototype);exports.Mode=Mode;});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// vendor/brace/mode/pascal.chunk.js","ace.define(\"ace/mode/pascal_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar PascalHighlightRules = function() {\n\n    this.$rules = { start: \n       [ { caseInsensitive: true,\n           token: 'keyword.control.pascal',\n           regex: '\\\\b(?:(absolute|abstract|all|and|and_then|array|as|asm|attribute|begin|bindable|case|class|const|constructor|destructor|div|do|do|else|end|except|export|exports|external|far|file|finalization|finally|for|forward|goto|if|implementation|import|in|inherited|initialization|interface|interrupt|is|label|library|mod|module|name|near|nil|not|object|of|only|operator|or|or_else|otherwise|packed|pow|private|program|property|protected|public|published|qualified|record|repeat|resident|restricted|segment|set|shl|shr|then|to|try|type|unit|until|uses|value|var|view|virtual|while|with|xor))\\\\b' },\n         { caseInsensitive: true,           \n           token: \n            [ 'variable.pascal', \"text\",\n              'storage.type.prototype.pascal',\n              'entity.name.function.prototype.pascal' ],\n           regex: '\\\\b(function|procedure)(\\\\s+)(\\\\w+)(\\\\.\\\\w+)?(?=(?:\\\\(.*?\\\\))?;\\\\s*(?:attribute|forward|external))' },\n         { caseInsensitive: true,\n           token: \n            [ 'variable.pascal', \"text\",\n              'storage.type.function.pascal',\n              'entity.name.function.pascal' ],\n           regex: '\\\\b(function|procedure)(\\\\s+)(\\\\w+)(\\\\.\\\\w+)?' },\n         { token: 'constant.numeric.pascal',\n           regex: '\\\\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\\\.?[0-9]*)|(\\\\.[0-9]+))((e|E)(\\\\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\\\\b' },\n         { token: 'punctuation.definition.comment.pascal',\n           regex: '--.*$',\n           push_: \n            [ { token: 'comment.line.double-dash.pascal.one',\n                regex: '$',\n                next: 'pop' },\n              { defaultToken: 'comment.line.double-dash.pascal.one' } ] },\n         { token: 'punctuation.definition.comment.pascal',\n           regex: '//.*$',\n           push_: \n            [ { token: 'comment.line.double-slash.pascal.two',\n                regex: '$',\n                next: 'pop' },\n              { defaultToken: 'comment.line.double-slash.pascal.two' } ] },\n         { token: 'punctuation.definition.comment.pascal',\n           regex: '\\\\(\\\\*',\n           push: \n            [ { token: 'punctuation.definition.comment.pascal',\n                regex: '\\\\*\\\\)',\n                next: 'pop' },\n              { defaultToken: 'comment.block.pascal.one' } ] },\n         { token: 'punctuation.definition.comment.pascal',\n           regex: '\\\\{',\n           push: \n            [ { token: 'punctuation.definition.comment.pascal',\n                regex: '\\\\}',\n                next: 'pop' },\n              { defaultToken: 'comment.block.pascal.two' } ] },\n         { token: 'punctuation.definition.string.begin.pascal',\n           regex: '\"',\n           push: \n            [ { token: 'constant.character.escape.pascal', regex: '\\\\\\\\.' },\n              { token: 'punctuation.definition.string.end.pascal',\n                regex: '\"',\n                next: 'pop' },\n              { defaultToken: 'string.quoted.double.pascal' } ]\n            },\n         { token: 'punctuation.definition.string.begin.pascal',\n           regex: '\\'',\n           push: \n            [ { token: 'constant.character.escape.apostrophe.pascal',\n                regex: '\\'\\'' },\n              { token: 'punctuation.definition.string.end.pascal',\n                regex: '\\'',\n                next: 'pop' },\n              { defaultToken: 'string.quoted.single.pascal' } ] },\n          { token: 'keyword.operator',\n           regex: '[+\\\\-;,/*%]|:=|=' } ] }\n    \n    this.normalizeRules();\n};\n\noop.inherits(PascalHighlightRules, TextHighlightRules);\n\nexports.PascalHighlightRules = PascalHighlightRules;\n});\n\nace.define(\"ace/mode/folding/coffee\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\nvar Range = acequire(\"../../range\").Range;\n\nvar FoldMode = exports.FoldMode = function() {};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var range = this.indentationBlock(session, row);\n        if (range)\n            return range;\n\n        var re = /\\S/;\n        var line = session.getLine(row);\n        var startLevel = line.search(re);\n        if (startLevel == -1 || line[startLevel] != \"#\")\n            return;\n\n        var startColumn = line.length;\n        var maxRow = session.getLength();\n        var startRow = row;\n        var endRow = row;\n\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var level = line.search(re);\n\n            if (level == -1)\n                continue;\n\n            if (line[level] != \"#\")\n                break;\n\n            endRow = row;\n        }\n\n        if (endRow > startRow) {\n            var endColumn = session.getLine(endRow).length;\n            return new Range(startRow, startColumn, endRow, endColumn);\n        }\n    };\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        var next = session.getLine(row + 1);\n        var prev = session.getLine(row - 1);\n        var prevIndent = prev.search(/\\S/);\n        var nextIndent = next.search(/\\S/);\n\n        if (indent == -1) {\n            session.foldWidgets[row - 1] = prevIndent!= -1 && prevIndent < nextIndent ? \"start\" : \"\";\n            return \"\";\n        }\n        if (prevIndent == -1) {\n            if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n                session.foldWidgets[row - 1] = \"\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"start\";\n            }\n        } else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n            if (session.getLine(row - 2).search(/\\S/) == -1) {\n                session.foldWidgets[row - 1] = \"start\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"\";\n            }\n        }\n\n        if (prevIndent!= -1 && prevIndent < indent)\n            session.foldWidgets[row - 1] = \"start\";\n        else\n            session.foldWidgets[row - 1] = \"\";\n\n        if (indent < nextIndent)\n            return \"start\";\n        else\n            return \"\";\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/pascal\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/pascal_highlight_rules\",\"ace/mode/folding/coffee\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar PascalHighlightRules = acequire(\"./pascal_highlight_rules\").PascalHighlightRules;\nvar FoldMode = acequire(\"./folding/coffee\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = PascalHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n       \n    this.lineCommentStart = [\"--\", \"//\"];\n    this.blockComment = [\n        {start: \"(*\", end: \"*)\"},\n        {start: \"{\", end: \"}\"}\n    ];\n    \n    this.$id = \"ace/mode/pascal\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n\n\n\n// WEBPACK FOOTER //\n// /Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/pascal.js"],"sourceRoot":""}