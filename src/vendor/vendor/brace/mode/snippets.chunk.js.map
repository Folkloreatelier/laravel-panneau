{"version":3,"sources":["webpack:///vendor/brace/mode/snippets.chunk.js","webpack:////Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/snippets.js"],"names":["webpackJsonppanneau","455","module","exports","ace","define","acequire","oop","BaseFoldMode","FoldMode","Range","inherits","this","getFoldWidgetRange","session","foldStyle","row","range","indentationBlock","re","line","getLine","startLevel","search","startColumn","length","maxRow","getLength","startRow","endRow","level","endColumn","getFoldWidget","indent","next","prev","prevIndent","nextIndent","foldWidgets","call","prototype","TextMode","Mode","TextHighlightRules","SnippetHighlightRules","builtins","$rules","start","token","regex","onMatch","value","state","stack","unshift","tokenName","splice","varDecl","regexp","charClass","format","SnippetGroupHighlightRules","embedRules","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","$indentWithTabs","lineCommentStart","$id"],"mappings":"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","file":"vendor/brace/mode/snippets.chunk.js","sourcesContent":["webpackJsonppanneau([129],{\n\n/***/ 455:\n/***/ (function(module, exports) {\n\nace.define(\"ace/mode/folding/coffee\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../../lib/oop\");var BaseFoldMode=acequire(\"./fold_mode\").FoldMode;var Range=acequire(\"../../range\").Range;var FoldMode=exports.FoldMode=function(){};oop.inherits(FoldMode,BaseFoldMode);(function(){this.getFoldWidgetRange=function(session,foldStyle,row){var range=this.indentationBlock(session,row);if(range)return range;var re=/\\S/;var line=session.getLine(row);var startLevel=line.search(re);if(startLevel==-1||line[startLevel]!=\"#\")return;var startColumn=line.length;var maxRow=session.getLength();var startRow=row;var endRow=row;while(++row<maxRow){line=session.getLine(row);var level=line.search(re);if(level==-1)continue;if(line[level]!=\"#\")break;endRow=row;}if(endRow>startRow){var endColumn=session.getLine(endRow).length;return new Range(startRow,startColumn,endRow,endColumn);}};this.getFoldWidget=function(session,foldStyle,row){var line=session.getLine(row);var indent=line.search(/\\S/);var next=session.getLine(row+1);var prev=session.getLine(row-1);var prevIndent=prev.search(/\\S/);var nextIndent=next.search(/\\S/);if(indent==-1){session.foldWidgets[row-1]=prevIndent!=-1&&prevIndent<nextIndent?\"start\":\"\";return\"\";}if(prevIndent==-1){if(indent==nextIndent&&line[indent]==\"#\"&&next[indent]==\"#\"){session.foldWidgets[row-1]=\"\";session.foldWidgets[row+1]=\"\";return\"start\";}}else if(prevIndent==indent&&line[indent]==\"#\"&&prev[indent]==\"#\"){if(session.getLine(row-2).search(/\\S/)==-1){session.foldWidgets[row-1]=\"start\";session.foldWidgets[row+1]=\"\";return\"\";}}if(prevIndent!=-1&&prevIndent<indent)session.foldWidgets[row-1]=\"start\";else session.foldWidgets[row-1]=\"\";if(indent<nextIndent)return\"start\";else return\"\";};}).call(FoldMode.prototype);});ace.define(\"ace/mode/snippets\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/text_highlight_rules\",\"ace/mode/folding/coffee\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextMode=acequire(\"./text\").Mode;var TextHighlightRules=acequire(\"./text_highlight_rules\").TextHighlightRules;var SnippetHighlightRules=function SnippetHighlightRules(){var builtins=\"SELECTION|CURRENT_WORD|SELECTED_TEXT|CURRENT_LINE|LINE_INDEX|\"+\"LINE_NUMBER|SOFT_TABS|TAB_SIZE|FILENAME|FILEPATH|FULLNAME\";this.$rules={\"start\":[{token:\"constant.language.escape\",regex:/\\\\[\\$}`\\\\]/},{token:\"keyword\",regex:\"\\\\$(?:TM_)?(?:\"+builtins+\")\\\\b\"},{token:\"variable\",regex:\"\\\\$\\\\w+\"},{onMatch:function onMatch(value,state,stack){if(stack[1])stack[1]++;else stack.unshift(state,1);return this.tokenName;},tokenName:\"markup.list\",regex:\"\\\\${\",next:\"varDecl\"},{onMatch:function onMatch(value,state,stack){if(!stack[1])return\"text\";stack[1]--;if(!stack[1])stack.splice(0,2);return this.tokenName;},tokenName:\"markup.list\",regex:\"}\"},{token:\"doc.comment\",regex:/^\\${2}-{5,}$/}],\"varDecl\":[{regex:/\\d+\\b/,token:\"constant.numeric\"},{token:\"keyword\",regex:\"(?:TM_)?(?:\"+builtins+\")\\\\b\"},{token:\"variable\",regex:\"\\\\w+\"},{regex:/:/,token:\"punctuation.operator\",next:\"start\"},{regex:/\\//,token:\"string.regex\",next:\"regexp\"},{regex:\"\",next:\"start\"}],\"regexp\":[{regex:/\\\\./,token:\"escape\"},{regex:/\\[/,token:\"regex.start\",next:\"charClass\"},{regex:\"/\",token:\"string.regex\",next:\"format\"},{\"token\":\"string.regex\",regex:\".\"}],charClass:[{regex:\"\\\\.\",token:\"escape\"},{regex:\"\\\\]\",token:\"regex.end\",next:\"regexp\"},{\"token\":\"string.regex\",regex:\".\"}],\"format\":[{regex:/\\\\[ulULE]/,token:\"keyword\"},{regex:/\\$\\d+/,token:\"variable\"},{regex:\"/[gim]*:?\",token:\"string.regex\",next:\"start\"},{\"token\":\"string\",regex:\".\"}]};};oop.inherits(SnippetHighlightRules,TextHighlightRules);exports.SnippetHighlightRules=SnippetHighlightRules;var SnippetGroupHighlightRules=function SnippetGroupHighlightRules(){this.$rules={\"start\":[{token:\"text\",regex:\"^\\\\t\",next:\"sn-start\"},{token:\"invalid\",regex:/^ \\s*/},{token:\"comment\",regex:/^#.*/},{token:\"constant.language.escape\",regex:\"^regex \",next:\"regex\"},{token:\"constant.language.escape\",regex:\"^(trigger|endTrigger|name|snippet|guard|endGuard|tabTrigger|key)\\\\b\"}],\"regex\":[{token:\"text\",regex:\"\\\\.\"},{token:\"keyword\",regex:\"/\"},{token:\"empty\",regex:\"$\",next:\"start\"}]};this.embedRules(SnippetHighlightRules,\"sn-\",[{token:\"text\",regex:\"^\\\\t\",next:\"sn-start\"},{onMatch:function onMatch(value,state,stack){stack.splice(stack.length);return this.tokenName;},tokenName:\"text\",regex:\"^(?!\\t)\",next:\"start\"}]);};oop.inherits(SnippetGroupHighlightRules,TextHighlightRules);exports.SnippetGroupHighlightRules=SnippetGroupHighlightRules;var FoldMode=acequire(\"./folding/coffee\").FoldMode;var Mode=function Mode(){this.HighlightRules=SnippetGroupHighlightRules;this.foldingRules=new FoldMode();this.$behaviour=this.$defaultBehaviour;};oop.inherits(Mode,TextMode);(function(){this.$indentWithTabs=true;this.lineCommentStart=\"#\";this.$id=\"ace/mode/snippets\";}).call(Mode.prototype);exports.Mode=Mode;});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// vendor/brace/mode/snippets.chunk.js","ace.define(\"ace/mode/folding/coffee\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\nvar Range = acequire(\"../../range\").Range;\n\nvar FoldMode = exports.FoldMode = function() {};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var range = this.indentationBlock(session, row);\n        if (range)\n            return range;\n\n        var re = /\\S/;\n        var line = session.getLine(row);\n        var startLevel = line.search(re);\n        if (startLevel == -1 || line[startLevel] != \"#\")\n            return;\n\n        var startColumn = line.length;\n        var maxRow = session.getLength();\n        var startRow = row;\n        var endRow = row;\n\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var level = line.search(re);\n\n            if (level == -1)\n                continue;\n\n            if (line[level] != \"#\")\n                break;\n\n            endRow = row;\n        }\n\n        if (endRow > startRow) {\n            var endColumn = session.getLine(endRow).length;\n            return new Range(startRow, startColumn, endRow, endColumn);\n        }\n    };\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        var next = session.getLine(row + 1);\n        var prev = session.getLine(row - 1);\n        var prevIndent = prev.search(/\\S/);\n        var nextIndent = next.search(/\\S/);\n\n        if (indent == -1) {\n            session.foldWidgets[row - 1] = prevIndent!= -1 && prevIndent < nextIndent ? \"start\" : \"\";\n            return \"\";\n        }\n        if (prevIndent == -1) {\n            if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n                session.foldWidgets[row - 1] = \"\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"start\";\n            }\n        } else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n            if (session.getLine(row - 2).search(/\\S/) == -1) {\n                session.foldWidgets[row - 1] = \"start\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"\";\n            }\n        }\n\n        if (prevIndent!= -1 && prevIndent < indent)\n            session.foldWidgets[row - 1] = \"start\";\n        else\n            session.foldWidgets[row - 1] = \"\";\n\n        if (indent < nextIndent)\n            return \"start\";\n        else\n            return \"\";\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/snippets\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/text_highlight_rules\",\"ace/mode/folding/coffee\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar SnippetHighlightRules = function() {\n\n    var builtins = \"SELECTION|CURRENT_WORD|SELECTED_TEXT|CURRENT_LINE|LINE_INDEX|\" +\n        \"LINE_NUMBER|SOFT_TABS|TAB_SIZE|FILENAME|FILEPATH|FULLNAME\";\n\n    this.$rules = {\n        \"start\" : [\n            {token:\"constant.language.escape\", regex: /\\\\[\\$}`\\\\]/},\n            {token:\"keyword\", regex: \"\\\\$(?:TM_)?(?:\" + builtins + \")\\\\b\"},\n            {token:\"variable\", regex: \"\\\\$\\\\w+\"},\n            {onMatch: function(value, state, stack) {\n                if (stack[1])\n                    stack[1]++;\n                else\n                    stack.unshift(state, 1);\n                return this.tokenName;\n            }, tokenName: \"markup.list\", regex: \"\\\\${\", next: \"varDecl\"},\n            {onMatch: function(value, state, stack) {\n                if (!stack[1])\n                    return \"text\";\n                stack[1]--;\n                if (!stack[1])\n                    stack.splice(0,2);\n                return this.tokenName;\n            }, tokenName: \"markup.list\", regex: \"}\"},\n            {token: \"doc.comment\", regex:/^\\${2}-{5,}$/}\n        ],\n        \"varDecl\" : [\n            {regex: /\\d+\\b/, token: \"constant.numeric\"},\n            {token:\"keyword\", regex: \"(?:TM_)?(?:\" + builtins + \")\\\\b\"},\n            {token:\"variable\", regex: \"\\\\w+\"},\n            {regex: /:/, token: \"punctuation.operator\", next: \"start\"},\n            {regex: /\\//, token: \"string.regex\", next: \"regexp\"},\n            {regex: \"\", next: \"start\"}\n        ],\n        \"regexp\" : [\n            {regex: /\\\\./, token: \"escape\"},\n            {regex: /\\[/, token: \"regex.start\", next: \"charClass\"},\n            {regex: \"/\", token: \"string.regex\", next: \"format\"},\n            {\"token\": \"string.regex\", regex:\".\"}\n        ],\n        charClass : [\n            {regex: \"\\\\.\", token: \"escape\"},\n            {regex: \"\\\\]\", token: \"regex.end\", next: \"regexp\"},\n            {\"token\": \"string.regex\", regex:\".\"}\n        ],\n        \"format\" : [\n            {regex: /\\\\[ulULE]/, token: \"keyword\"},\n            {regex: /\\$\\d+/, token: \"variable\"},\n            {regex: \"/[gim]*:?\", token: \"string.regex\", next: \"start\"},\n            {\"token\": \"string\", regex:\".\"}\n        ]\n    };\n};\noop.inherits(SnippetHighlightRules, TextHighlightRules);\n\nexports.SnippetHighlightRules = SnippetHighlightRules;\n\nvar SnippetGroupHighlightRules = function() {\n    this.$rules = {\n        \"start\" : [\n\t\t\t{token: \"text\", regex: \"^\\\\t\", next: \"sn-start\"},\n\t\t\t{token:\"invalid\", regex: /^ \\s*/},\n            {token:\"comment\", regex: /^#.*/},\n            {token:\"constant.language.escape\", regex: \"^regex \", next: \"regex\"},\n            {token:\"constant.language.escape\", regex: \"^(trigger|endTrigger|name|snippet|guard|endGuard|tabTrigger|key)\\\\b\"}\n        ],\n\t\t\"regex\" : [\n\t\t\t{token:\"text\", regex: \"\\\\.\"},\n\t\t\t{token:\"keyword\", regex: \"/\"},\n\t\t\t{token:\"empty\", regex: \"$\", next: \"start\"}\n\t\t]\n    };\n\tthis.embedRules(SnippetHighlightRules, \"sn-\", [\n\t\t{token: \"text\", regex: \"^\\\\t\", next: \"sn-start\"},\n\t\t{onMatch: function(value, state, stack) {\n\t\t\tstack.splice(stack.length);\n\t\t\treturn this.tokenName;\n\t\t}, tokenName: \"text\", regex: \"^(?!\\t)\", next: \"start\"}\n\t])\n\t\n};\n\noop.inherits(SnippetGroupHighlightRules, TextHighlightRules);\n\nexports.SnippetGroupHighlightRules = SnippetGroupHighlightRules;\n\nvar FoldMode = acequire(\"./folding/coffee\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = SnippetGroupHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.$indentWithTabs = true;\n    this.lineCommentStart = \"#\";\n    this.$id = \"ace/mode/snippets\";\n}).call(Mode.prototype);\nexports.Mode = Mode;\n\n\n});\n\n\n\n// WEBPACK FOOTER //\n// /Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/snippets.js"],"sourceRoot":""}