{"version":3,"sources":["webpack:///vendor/brace/mode/golang.chunk.js","webpack:////Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/golang.js"],"names":["webpackJsonppanneau","379","module","exports","ace","define","acequire","oop","TextHighlightRules","DocCommentHighlightRules","this","$rules","start","token","regex","getTagRule","defaultToken","caseInsensitive","inherits","getStartRule","next","getEndRule","GolangHighlightRules","keywordMapper","createKeywordMapper","keyword","constant.language","support.function","support.type","stringEscapeRe","replace","val","length","type","slice","value","comment","bqstring","embedRules","Range","MatchingBraceOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","getLine","match","column","openBracePos","findMatchingBracket","indent","$getIndent","call","prototype","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","i","index","openingBracketBlock","range","getCommentFoldRange","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","subRange","re","depth","m","exec","TextMode","Mode","CstyleBehaviour","CStyleFoldMode","HighlightRules","$outdent","foldingRules","$behaviour","lineCommentStart","blockComment","getNextLineIndent","state","tab","tokenizedLine","getTokenizer","getLineTokens","tokens","$id"],"mappings":"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","file":"vendor/brace/mode/golang.chunk.js","sourcesContent":["webpackJsonppanneau([188],{\n\n/***/ 379:\n/***/ (function(module, exports) {\n\nace.define(\"ace/mode/doc_comment_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextHighlightRules=acequire(\"./text_highlight_rules\").TextHighlightRules;var DocCommentHighlightRules=function DocCommentHighlightRules(){this.$rules={\"start\":[{token:\"comment.doc.tag\",regex:\"@[\\\\w\\\\d_]+\"// TODO: fix email addresses\n},DocCommentHighlightRules.getTagRule(),{defaultToken:\"comment.doc\",caseInsensitive:true}]};};oop.inherits(DocCommentHighlightRules,TextHighlightRules);DocCommentHighlightRules.getTagRule=function(start){return{token:\"comment.doc.tag.storage.type\",regex:\"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"};};DocCommentHighlightRules.getStartRule=function(start){return{token:\"comment.doc\",// doc comment\nregex:\"\\\\/\\\\*(?=\\\\*)\",next:start};};DocCommentHighlightRules.getEndRule=function(start){return{token:\"comment.doc\",// closing comment\nregex:\"\\\\*\\\\/\",next:start};};exports.DocCommentHighlightRules=DocCommentHighlightRules;});ace.define(\"ace/mode/golang_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/doc_comment_highlight_rules\",\"ace/mode/text_highlight_rules\"],function(acequire,exports,module){var oop=acequire(\"../lib/oop\");var DocCommentHighlightRules=acequire(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;var TextHighlightRules=acequire(\"./text_highlight_rules\").TextHighlightRules;var GolangHighlightRules=function GolangHighlightRules(){var keywords=\"else|break|case|return|goto|if|const|select|\"+\"continue|struct|default|switch|for|range|\"+\"func|import|package|chan|defer|fallthrough|go|interface|map|range|\"+\"select|type|var\";var builtinTypes=\"string|uint8|uint16|uint32|uint64|int8|int16|int32|int64|float32|\"+\"float64|complex64|complex128|byte|rune|uint|int|uintptr|bool|error\";var builtinFunctions=\"new|close|cap|copy|panic|panicln|print|println|len|make|delete|real|recover|imag|append\";var builtinConstants=\"nil|true|false|iota\";var keywordMapper=this.createKeywordMapper({\"keyword\":keywords,\"constant.language\":builtinConstants,\"support.function\":builtinFunctions,\"support.type\":builtinTypes},\"\");var stringEscapeRe=\"\\\\\\\\(?:[0-7]{3}|x\\\\h{2}|u{4}|U\\\\h{6}|[abfnrtv'\\\"\\\\\\\\])\".replace(/\\\\h/g,\"[a-fA-F\\\\d]\");this.$rules={\"start\":[{token:\"comment\",regex:\"\\\\/\\\\/.*$\"},DocCommentHighlightRules.getStartRule(\"doc-start\"),{token:\"comment.start\",// multi line comment\nregex:\"\\\\/\\\\*\",next:\"comment\"},{token:\"string\",// single line\nregex:/\"(?:[^\"\\\\]|\\\\.)*?\"/},{token:\"string\",// raw\nregex:'`',next:\"bqstring\"},{token:\"constant.numeric\",// rune\nregex:\"'(?:[^\\\\'\\uD800-\\uDBFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|\"+stringEscapeRe.replace('\"','')+\")'\"},{token:\"constant.numeric\",// hex\nregex:\"0[xX][0-9a-fA-F]+\\\\b\"},{token:\"constant.numeric\",// float\nregex:\"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"},{token:[\"keyword\",\"text\",\"entity.name.function\"],regex:\"(func)(\\\\s+)([a-zA-Z_$][a-zA-Z0-9_$]*)\\\\b\"},{token:function token(val){if(val[val.length-1]==\"(\"){return[{type:keywordMapper(val.slice(0,-1))||\"support.function\",value:val.slice(0,-1)},{type:\"paren.lparen\",value:val.slice(-1)}];}return keywordMapper(val)||\"identifier\";},regex:\"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\\\\(?\"},{token:\"keyword.operator\",regex:\"!|\\\\$|%|&|\\\\*|\\\\-\\\\-|\\\\-|\\\\+\\\\+|\\\\+|~|==|=|!=|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\\\|\\\\||\\\\?\\\\:|\\\\*=|%=|\\\\+=|\\\\-=|&=|\\\\^=\"},{token:\"punctuation.operator\",regex:\"\\\\?|\\\\:|\\\\,|\\\\;|\\\\.\"},{token:\"paren.lparen\",regex:\"[[({]\"},{token:\"paren.rparen\",regex:\"[\\\\])}]\"},{token:\"text\",regex:\"\\\\s+\"}],\"comment\":[{token:\"comment.end\",regex:\"\\\\*\\\\/\",next:\"start\"},{defaultToken:\"comment\"}],\"bqstring\":[{token:\"string\",regex:'`',next:\"start\"},{defaultToken:\"string\"}]};this.embedRules(DocCommentHighlightRules,\"doc-\",[DocCommentHighlightRules.getEndRule(\"start\")]);};oop.inherits(GolangHighlightRules,TextHighlightRules);exports.GolangHighlightRules=GolangHighlightRules;});ace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"],function(acequire,exports,module){\"use strict\";var Range=acequire(\"../range\").Range;var MatchingBraceOutdent=function MatchingBraceOutdent(){};(function(){this.checkOutdent=function(line,input){if(!/^\\s+$/.test(line))return false;return /^\\s*\\}/.test(input);};this.autoOutdent=function(doc,row){var line=doc.getLine(row);var match=line.match(/^(\\s*\\})/);if(!match)return 0;var column=match[1].length;var openBracePos=doc.findMatchingBracket({row:row,column:column});if(!openBracePos||openBracePos.row==row)return 0;var indent=this.$getIndent(doc.getLine(openBracePos.row));doc.replace(new Range(row,0,row,column-1),indent);};this.$getIndent=function(line){return line.match(/^\\s*/)[0];};}).call(MatchingBraceOutdent.prototype);exports.MatchingBraceOutdent=MatchingBraceOutdent;});ace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../../lib/oop\");var Range=acequire(\"../../range\").Range;var BaseFoldMode=acequire(\"./fold_mode\").FoldMode;var FoldMode=exports.FoldMode=function(commentRegex){if(commentRegex){this.foldingStartMarker=new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/,\"|\"+commentRegex.start));this.foldingStopMarker=new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/,\"|\"+commentRegex.end));}};oop.inherits(FoldMode,BaseFoldMode);(function(){this.foldingStartMarker=/(\\{|\\[)[^\\}\\]]*$|^\\s*(\\/\\*)/;this.foldingStopMarker=/^[^\\[\\{]*(\\}|\\])|^[\\s\\*]*(\\*\\/)/;this.singleLineBlockCommentRe=/^\\s*(\\/\\*).*\\*\\/\\s*$/;this.tripleStarBlockCommentRe=/^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;this.startRegionRe=/^\\s*(\\/\\*|\\/\\/)#?region\\b/;this._getFoldWidgetBase=this.getFoldWidget;this.getFoldWidget=function(session,foldStyle,row){var line=session.getLine(row);if(this.singleLineBlockCommentRe.test(line)){if(!this.startRegionRe.test(line)&&!this.tripleStarBlockCommentRe.test(line))return\"\";}var fw=this._getFoldWidgetBase(session,foldStyle,row);if(!fw&&this.startRegionRe.test(line))return\"start\";// lineCommentRegionStart\nreturn fw;};this.getFoldWidgetRange=function(session,foldStyle,row,forceMultiline){var line=session.getLine(row);if(this.startRegionRe.test(line))return this.getCommentRegionBlock(session,line,row);var match=line.match(this.foldingStartMarker);if(match){var i=match.index;if(match[1])return this.openingBracketBlock(session,match[1],row,i);var range=session.getCommentFoldRange(row,i+match[0].length,1);if(range&&!range.isMultiLine()){if(forceMultiline){range=this.getSectionRange(session,row);}else if(foldStyle!=\"all\")range=null;}return range;}if(foldStyle===\"markbegin\")return;var match=line.match(this.foldingStopMarker);if(match){var i=match.index+match[0].length;if(match[1])return this.closingBracketBlock(session,match[1],row,i);return session.getCommentFoldRange(row,i,-1);}};this.getSectionRange=function(session,row){var line=session.getLine(row);var startIndent=line.search(/\\S/);var startRow=row;var startColumn=line.length;row=row+1;var endRow=row;var maxRow=session.getLength();while(++row<maxRow){line=session.getLine(row);var indent=line.search(/\\S/);if(indent===-1)continue;if(startIndent>indent)break;var subRange=this.getFoldWidgetRange(session,\"all\",row);if(subRange){if(subRange.start.row<=startRow){break;}else if(subRange.isMultiLine()){row=subRange.end.row;}else if(startIndent==indent){break;}}endRow=row;}return new Range(startRow,startColumn,endRow,session.getLine(endRow).length);};this.getCommentRegionBlock=function(session,line,row){var startColumn=line.search(/\\s*$/);var maxRow=session.getLength();var startRow=row;var re=/^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;var depth=1;while(++row<maxRow){line=session.getLine(row);var m=re.exec(line);if(!m)continue;if(m[1])depth--;else depth++;if(!depth)break;}var endRow=row;if(endRow>startRow){return new Range(startRow,startColumn,endRow,line.length);}};}).call(FoldMode.prototype);});ace.define(\"ace/mode/golang\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/golang_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/mode/behaviour/cstyle\",\"ace/mode/folding/cstyle\"],function(acequire,exports,module){var oop=acequire(\"../lib/oop\");var TextMode=acequire(\"./text\").Mode;var GolangHighlightRules=acequire(\"./golang_highlight_rules\").GolangHighlightRules;var MatchingBraceOutdent=acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;var CstyleBehaviour=acequire(\"./behaviour/cstyle\").CstyleBehaviour;var CStyleFoldMode=acequire(\"./folding/cstyle\").FoldMode;var Mode=function Mode(){this.HighlightRules=GolangHighlightRules;this.$outdent=new MatchingBraceOutdent();this.foldingRules=new CStyleFoldMode();this.$behaviour=new CstyleBehaviour();};oop.inherits(Mode,TextMode);(function(){this.lineCommentStart=\"//\";this.blockComment={start:\"/*\",end:\"*/\"};this.getNextLineIndent=function(state,line,tab){var indent=this.$getIndent(line);var tokenizedLine=this.getTokenizer().getLineTokens(line,state);var tokens=tokenizedLine.tokens;var endState=tokenizedLine.state;if(tokens.length&&tokens[tokens.length-1].type==\"comment\"){return indent;}if(state==\"start\"){var match=line.match(/^.*[\\{\\(\\[]\\s*$/);if(match){indent+=tab;}}return indent;};//end getNextLineIndent\nthis.checkOutdent=function(state,line,input){return this.$outdent.checkOutdent(line,input);};this.autoOutdent=function(state,doc,row){this.$outdent.autoOutdent(doc,row);};this.$id=\"ace/mode/golang\";}).call(Mode.prototype);exports.Mode=Mode;});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// vendor/brace/mode/golang.chunk.js","ace.define(\"ace/mode/doc_comment_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar DocCommentHighlightRules = function() {\n    this.$rules = {\n        \"start\" : [ {\n            token : \"comment.doc.tag\",\n            regex : \"@[\\\\w\\\\d_]+\" // TODO: fix email addresses\n        }, \n        DocCommentHighlightRules.getTagRule(),\n        {\n            defaultToken : \"comment.doc\",\n            caseInsensitive: true\n        }]\n    };\n};\n\noop.inherits(DocCommentHighlightRules, TextHighlightRules);\n\nDocCommentHighlightRules.getTagRule = function(start) {\n    return {\n        token : \"comment.doc.tag.storage.type\",\n        regex : \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n}\n\nDocCommentHighlightRules.getStartRule = function(start) {\n    return {\n        token : \"comment.doc\", // doc comment\n        regex : \"\\\\/\\\\*(?=\\\\*)\",\n        next  : start\n    };\n};\n\nDocCommentHighlightRules.getEndRule = function (start) {\n    return {\n        token : \"comment.doc\", // closing comment\n        regex : \"\\\\*\\\\/\",\n        next  : start\n    };\n};\n\n\nexports.DocCommentHighlightRules = DocCommentHighlightRules;\n\n});\n\nace.define(\"ace/mode/golang_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/doc_comment_highlight_rules\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n    var oop = acequire(\"../lib/oop\");\n    var DocCommentHighlightRules = acequire(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\n    var TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\n    var GolangHighlightRules = function() {\n        var keywords = (\n            \"else|break|case|return|goto|if|const|select|\" +\n            \"continue|struct|default|switch|for|range|\" +\n            \"func|import|package|chan|defer|fallthrough|go|interface|map|range|\" +\n            \"select|type|var\"\n        );\n        var builtinTypes = (\n            \"string|uint8|uint16|uint32|uint64|int8|int16|int32|int64|float32|\" +\n            \"float64|complex64|complex128|byte|rune|uint|int|uintptr|bool|error\"\n        );\n        var builtinFunctions = (\n            \"new|close|cap|copy|panic|panicln|print|println|len|make|delete|real|recover|imag|append\"\n        );\n        var builtinConstants = (\"nil|true|false|iota\");\n\n        var keywordMapper = this.createKeywordMapper({\n            \"keyword\": keywords,\n            \"constant.language\": builtinConstants,\n            \"support.function\": builtinFunctions,\n            \"support.type\": builtinTypes\n        }, \"\");\n        \n        var stringEscapeRe = \"\\\\\\\\(?:[0-7]{3}|x\\\\h{2}|u{4}|U\\\\h{6}|[abfnrtv'\\\"\\\\\\\\])\".replace(/\\\\h/g, \"[a-fA-F\\\\d]\");\n\n        this.$rules = {\n            \"start\" : [\n                {\n                    token : \"comment\",\n                    regex : \"\\\\/\\\\/.*$\"\n                },\n                DocCommentHighlightRules.getStartRule(\"doc-start\"),\n                {\n                    token : \"comment.start\", // multi line comment\n                    regex : \"\\\\/\\\\*\",\n                    next : \"comment\"\n                }, {\n                    token : \"string\", // single line\n                    regex : /\"(?:[^\"\\\\]|\\\\.)*?\"/\n                }, {\n                    token : \"string\", // raw\n                    regex : '`',\n                    next : \"bqstring\"\n                }, {\n                    token : \"constant.numeric\", // rune\n                    regex : \"'(?:[^\\\\'\\uD800-\\uDBFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|\" + stringEscapeRe.replace('\"', '')  + \")'\"\n                }, {\n                    token : \"constant.numeric\", // hex\n                    regex : \"0[xX][0-9a-fA-F]+\\\\b\" \n                }, {\n                    token : \"constant.numeric\", // float\n                    regex : \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n                }, {\n                    token : [\"keyword\", \"text\", \"entity.name.function\"],\n                    regex : \"(func)(\\\\s+)([a-zA-Z_$][a-zA-Z0-9_$]*)\\\\b\"\n                }, {\n                    token : function(val) {\n                        if (val[val.length - 1] == \"(\") {\n                            return [{\n                                type: keywordMapper(val.slice(0, -1)) || \"support.function\",\n                                value: val.slice(0, -1)\n                            }, {\n                                type: \"paren.lparen\",\n                                value: val.slice(-1)\n                            }];\n                        }\n                        \n                        return keywordMapper(val) || \"identifier\";\n                    },\n                    regex : \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\\\\(?\"\n                }, {\n                    token : \"keyword.operator\",\n                    regex : \"!|\\\\$|%|&|\\\\*|\\\\-\\\\-|\\\\-|\\\\+\\\\+|\\\\+|~|==|=|!=|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\\\|\\\\||\\\\?\\\\:|\\\\*=|%=|\\\\+=|\\\\-=|&=|\\\\^=\"\n                }, {\n                    token : \"punctuation.operator\",\n                    regex : \"\\\\?|\\\\:|\\\\,|\\\\;|\\\\.\"\n                }, {\n                    token : \"paren.lparen\",\n                    regex : \"[[({]\"\n                }, {\n                    token : \"paren.rparen\",\n                    regex : \"[\\\\])}]\"\n                }, {\n                    token : \"text\",\n                    regex : \"\\\\s+\"\n                }\n            ],\n            \"comment\" : [\n                {\n                    token : \"comment.end\",\n                    regex : \"\\\\*\\\\/\",\n                    next : \"start\"\n                }, {\n                    defaultToken : \"comment\"\n                }\n            ],\n            \"bqstring\" : [\n                {\n                    token : \"string\",\n                    regex : '`',\n                    next : \"start\"\n                }, {\n                    defaultToken : \"string\"\n                }\n            ]\n        };\n\n        this.embedRules(DocCommentHighlightRules, \"doc-\",\n            [ DocCommentHighlightRules.getEndRule(\"start\") ]);\n    };\n    oop.inherits(GolangHighlightRules, TextHighlightRules);\n\n    exports.GolangHighlightRules = GolangHighlightRules;\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar Range = acequire(\"../range\").Range;\n\nvar MatchingBraceOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        return line.match(/^\\s*/)[0];\n    };\n\n}).call(MatchingBraceOutdent.prototype);\n\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar Range = acequire(\"../../range\").Range;\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    \n    this.foldingStartMarker = /(\\{|\\[)[^\\}\\]]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{]*(\\}|\\])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n    \n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n    \n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n    \n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n    \n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        \n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        \n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n                \n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            \n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n            \n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    \n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            \n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        \n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/golang\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/golang_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/mode/behaviour/cstyle\",\"ace/mode/folding/cstyle\"], function(acequire, exports, module) {\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar GolangHighlightRules = acequire(\"./golang_highlight_rules\").GolangHighlightRules;\nvar MatchingBraceOutdent = acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar CstyleBehaviour = acequire(\"./behaviour/cstyle\").CstyleBehaviour;\nvar CStyleFoldMode = acequire(\"./folding/cstyle\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = GolangHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.foldingRules = new CStyleFoldMode();\n    this.$behaviour = new CstyleBehaviour();\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    \n    this.lineCommentStart = \"//\";\n    this.blockComment = {start: \"/*\", end: \"*/\"};\n\n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n        var endState = tokenizedLine.state;\n\n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\n            return indent;\n        }\n        \n        if (state == \"start\") {\n            var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        }\n\n        return indent;\n    };//end getNextLineIndent\n\n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.$id = \"ace/mode/golang\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n\n\n\n// WEBPACK FOOTER //\n// /Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/golang.js"],"sourceRoot":""}