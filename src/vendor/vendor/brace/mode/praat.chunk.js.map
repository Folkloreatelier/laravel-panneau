{"version":3,"sources":["webpack:///vendor/brace/mode/praat.chunk.js","webpack:////Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/praat.js"],"names":["webpackJsonppanneau","311","module","exports","ace","define","acequire","oop","TextHighlightRules","PraatHighlightRules","this","$rules","start","token","regex","next","form","for","brokenstring","inherits","Range","MatchingBraceOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","getLine","match","column","length","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","i","index","openingBracketBlock","range","getCommentFoldRange","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","subRange","re","depth","m","exec","TextMode","Mode","CStyleFoldMode","HighlightRules","$outdent","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","getNextLineIndent","state","tab","tokenizedLine","getTokenizer","getLineTokens","tokens","type","$id"],"mappings":"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","file":"vendor/brace/mode/praat.chunk.js","sourcesContent":["webpackJsonppanneau([144],{\n\n/***/ 311:\n/***/ (function(module, exports) {\n\nace.define(\"ace/mode/praat_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextHighlightRules=acequire(\"./text_highlight_rules\").TextHighlightRules;var PraatHighlightRules=function PraatHighlightRules(){var keywords=\"if|then|else|elsif|elif|endif|fi|\"+\"endfor|endproc|\"+// related keywords specified below\n\"while|endwhile|\"+\"repeat|until|\"+\"select|plus|minus|\"+\"assert|asserterror\";var predefinedVariables=\"macintosh|windows|unix|\"+\"praatVersion|praatVersion\\\\$\"+\"pi|undefined|\"+\"newline\\\\$|tab\\\\$|\"+\"shellDirectory\\\\$|homeDirectory\\\\$|preferencesDirectory\\\\$|\"+\"temporaryDirectory\\\\$|defaultDirectory\\\\$\";var directives=\"clearinfo|endSendPraat\";var functions=\"writeInfo|writeInfoLine|appendInfo|appendInfoLine|info\\\\$|\"+\"writeFile|writeFileLine|appendFile|appendFileLine|\"+\"abs|round|floor|ceiling|min|max|imin|imax|\"+\"sqrt|sin|cos|tan|arcsin|arccos|arctan|arctan2|sinc|sincpi|\"+\"exp|ln|lnBeta|lnGamma|log10|log2|\"+\"sinh|cosh|tanh|arcsinh|arccosh|arctanh|\"+\"sigmoid|invSigmoid|erf|erfc|\"+\"random(?:Uniform|Integer|Gauss|Poisson|Binomial)|\"+\"gaussP|gaussQ|invGaussQ|incompleteGammaP|incompleteBeta|\"+\"chiSquareP|chiSquareQ|invChiSquareQ|studentP|studentQ|invStudentQ|\"+\"fisherP|fisherQ|invFisherQ|\"+\"binomialP|binomialQ|invBinomialP|invBinomialQ|\"+\"hertzToBark|barkToHerz|\"+\"hertzToMel|melToHertz|\"+\"hertzToSemitones|semitonesToHerz|\"+\"erb|hertzToErb|erbToHertz|\"+\"phonToDifferenceLimens|differenceLimensToPhon|\"+\"soundPressureToPhon|\"+\"beta|beta2|besselI|besselK|\"+\"numberOfColumns|numberOfRows|\"+\"selected|selected\\\\$|numberOfSelected|variableExists|\"+\"index|rindex|startsWith|endsWith|\"+\"index_regex|rindex_regex|replace_regex\\\\$|\"+\"length|extractWord\\\\$|extractLine\\\\$|extractNumber|\"+\"left\\\\$|right\\\\$|mid\\\\$|replace\\\\$|\"+\"date\\\\$|fixed\\\\$|percent\\\\$|\"+\"zero#|linear#|randomUniform#|randomInteger#|randomGauss#|\"+\"beginPause|endPause|\"+\"demoShow|demoWindowTitle|demoInput|demoWaitForInput|\"+\"demoClicked|demoClickedIn|demoX|demoY|\"+\"demoKeyPressed|demoKey\\\\$|\"+\"demoExtraControlKeyPressed|demoShiftKeyPressed|\"+\"demoCommandKeyPressed|demoOptionKeyPressed|\"+\"environment\\\\$|chooseReadFile\\\\$|\"+\"chooseDirectory\\\\$|createDirectory|fileReadable|deleteFile|\"+\"selectObject|removeObject|plusObject|minusObject|\"+\"runScript|exitScript|\"+\"beginSendPraat|endSendPraat|\"+\"objectsAreIdentical\";var objectTypes=\"Activation|AffineTransform|AmplitudeTier|Art|Artword|Autosegment|\"+\"BarkFilter|CCA|Categories|Cepstrum|Cepstrumc|ChebyshevSeries|\"+\"ClassificationTable|Cochleagram|Collection|Configuration|\"+\"Confusion|ContingencyTable|Corpus|Correlation|Covariance|\"+\"CrossCorrelationTable|CrossCorrelationTables|DTW|Diagonalizer|\"+\"Discriminant|Dissimilarity|Distance|Distributions|DurationTier|\"+\"EEG|ERP|ERPTier|Eigen|Excitation|Excitations|ExperimentMFC|FFNet|\"+\"FeatureWeights|Formant|FormantFilter|FormantGrid|FormantPoint|\"+\"FormantTier|GaussianMixture|HMM|HMM_Observation|\"+\"HMM_ObservationSequence|HMM_State|HMM_StateSequence|Harmonicity|\"+\"ISpline|Index|Intensity|IntensityTier|IntervalTier|KNN|KlattGrid|\"+\"KlattTable|LFCC|LPC|Label|LegendreSeries|LinearRegression|\"+\"LogisticRegression|LongSound|Ltas|MFCC|MSpline|ManPages|\"+\"Manipulation|Matrix|MelFilter|MixingMatrix|Movie|Network|\"+\"OTGrammar|OTHistory|OTMulti|PCA|PairDistribution|ParamCurve|\"+\"Pattern|Permutation|Pitch|PitchTier|PointProcess|Polygon|\"+\"Polynomial|Procrustes|RealPoint|RealTier|ResultsMFC|Roots|SPINET|\"+\"SSCP|SVD|Salience|ScalarProduct|Similarity|SimpleString|\"+\"SortedSetOfString|Sound|Speaker|Spectrogram|Spectrum|SpectrumTier|\"+\"SpeechSynthesizer|SpellingChecker|Strings|StringsIndex|Table|\"+\"TableOfReal|TextGrid|TextInterval|TextPoint|TextTier|Tier|\"+\"Transition|VocalTract|Weight|WordList\";this.$rules={\"start\":[{token:\"string.interpolated\",regex:/'((?:[a-z][a-zA-Z0-9_]*)(?:\\$|#|:[0-9]+)?)'/},{token:[\"text\",\"text\",\"keyword.operator\",\"text\",\"keyword\"],regex:/(^\\s*)(?:([a-z][a-zA-Z0-9_]*\\$?\\s+)(=)(\\s+))?(stopwatch)/},{token:[\"text\",\"keyword\",\"text\",\"string\"],regex:/(^\\s*)(print(?:line|tab)?|echo|exit|pause|send(?:praat|socket)|include|execute|system(?:_nocheck)?)(\\s+)(.*)/},{token:[\"text\",\"keyword\"],regex:\"(^\\\\s*)(\"+directives+\")$\"},{token:[\"text\",\"keyword.operator\",\"text\"],regex:/(\\s+)((?:\\+|-|\\/|\\*|<|>)=?|==?|!=|%|\\^|\\||and|or|not)(\\s+)/},{token:[\"text\",\"text\",\"keyword.operator\",\"text\",\"keyword\",\"text\",\"keyword\"],regex:/(^\\s*)(?:([a-z][a-zA-Z0-9_]*\\$?\\s+)(=)(\\s+))?(?:((?:no)?warn|(?:unix_)?nocheck|noprogress)(\\s+))?((?:[A-Z][^.:\"]+)(?:$|(?:\\.{3}|:)))/},{token:[\"text\",\"keyword\",\"text\",\"keyword\"],regex:/(^\\s*)(?:(demo)?(\\s+))((?:[A-Z][^.:\"]+)(?:$|(?:\\.{3}|:)))/},{token:[\"text\",\"keyword\",\"text\",\"keyword\"],regex:/^(\\s*)(?:(demo)(\\s+))?(10|12|14|16|24)$/},{token:[\"text\",\"support.function\",\"text\"],regex:/(\\s*)(do\\$?)(\\s*:\\s*|\\s*\\(\\s*)/},{token:\"entity.name.type\",regex:\"(\"+objectTypes+\")\"},{token:\"variable.language\",regex:\"(\"+predefinedVariables+\")\"},{token:[\"support.function\",\"text\"],regex:\"((?:\"+functions+\")\\\\$?)(\\\\s*(?::|\\\\())\"},{token:\"keyword\",regex:/(\\bfor\\b)/,next:\"for\"},{token:\"keyword\",regex:\"(\\\\b(?:\"+keywords+\")\\\\b)\"},{token:\"string\",regex:/\"[^\"]*\"/},{token:\"string\",regex:/\"[^\"]*$/,next:\"brokenstring\"},{token:[\"text\",\"keyword\",\"text\",\"entity.name.section\"],regex:/(^\\s*)(\\bform\\b)(\\s+)(.*)/,next:\"form\"},{token:\"constant.numeric\",regex:/\\b[+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?\\b/},{token:[\"keyword\",\"text\",\"entity.name.function\"],regex:/(procedure)(\\s+)(\\S+)/},{token:[\"entity.name.function\",\"text\"],regex:/(@\\S+)(:|\\s*\\()/},{token:[\"text\",\"keyword\",\"text\",\"entity.name.function\"],regex:/(^\\s*)(call)(\\s+)(\\S+)/},{token:\"comment\",regex:/(^\\s*#|;).*$/},{token:\"text\",regex:/\\s+/}],\"form\":[{token:[\"keyword\",\"text\",\"constant.numeric\"],regex:/((?:optionmenu|choice)\\s+)(\\S+:\\s+)([0-9]+)/},{token:[\"keyword\",\"constant.numeric\"],regex:/((?:option|button)\\s+)([+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?\\b)/},{token:[\"keyword\",\"string\"],regex:/((?:option|button)\\s+)(.*)/},{token:[\"keyword\",\"text\",\"string\"],regex:/((?:sentence|text)\\s+)(\\S+\\s*)(.*)/},{token:[\"keyword\",\"text\",\"string\",\"invalid.illegal\"],regex:/(word\\s+)(\\S+\\s*)(\\S+)?(\\s.*)?/},{token:[\"keyword\",\"text\",\"constant.language\"],regex:/(boolean\\s+)(\\S+\\s*)(0|1|\"?(?:yes|no)\"?)/},{token:[\"keyword\",\"text\",\"constant.numeric\"],regex:/((?:real|natural|positive|integer)\\s+)(\\S+\\s*)([+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?\\b)/},{token:[\"keyword\",\"string\"],regex:/(comment\\s+)(.*)/},{token:\"keyword\",regex:'endform',next:\"start\"}],\"for\":[{token:[\"keyword\",\"text\",\"constant.numeric\",\"text\"],regex:/(from|to)(\\s+)([+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?)(\\s*)/},{token:[\"keyword\",\"text\"],regex:/(from|to)(\\s+\\S+\\s*)/},{token:\"text\",regex:/$/,next:\"start\"}],\"brokenstring\":[{token:[\"text\",\"string\"],regex:/(\\s*\\.{3})([^\"]*)/},{token:\"string\",regex:/\"/,next:\"start\"}]};};oop.inherits(PraatHighlightRules,TextHighlightRules);exports.PraatHighlightRules=PraatHighlightRules;});ace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"],function(acequire,exports,module){\"use strict\";var Range=acequire(\"../range\").Range;var MatchingBraceOutdent=function MatchingBraceOutdent(){};(function(){this.checkOutdent=function(line,input){if(!/^\\s+$/.test(line))return false;return /^\\s*\\}/.test(input);};this.autoOutdent=function(doc,row){var line=doc.getLine(row);var match=line.match(/^(\\s*\\})/);if(!match)return 0;var column=match[1].length;var openBracePos=doc.findMatchingBracket({row:row,column:column});if(!openBracePos||openBracePos.row==row)return 0;var indent=this.$getIndent(doc.getLine(openBracePos.row));doc.replace(new Range(row,0,row,column-1),indent);};this.$getIndent=function(line){return line.match(/^\\s*/)[0];};}).call(MatchingBraceOutdent.prototype);exports.MatchingBraceOutdent=MatchingBraceOutdent;});ace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../../lib/oop\");var Range=acequire(\"../../range\").Range;var BaseFoldMode=acequire(\"./fold_mode\").FoldMode;var FoldMode=exports.FoldMode=function(commentRegex){if(commentRegex){this.foldingStartMarker=new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/,\"|\"+commentRegex.start));this.foldingStopMarker=new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/,\"|\"+commentRegex.end));}};oop.inherits(FoldMode,BaseFoldMode);(function(){this.foldingStartMarker=/(\\{|\\[)[^\\}\\]]*$|^\\s*(\\/\\*)/;this.foldingStopMarker=/^[^\\[\\{]*(\\}|\\])|^[\\s\\*]*(\\*\\/)/;this.singleLineBlockCommentRe=/^\\s*(\\/\\*).*\\*\\/\\s*$/;this.tripleStarBlockCommentRe=/^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;this.startRegionRe=/^\\s*(\\/\\*|\\/\\/)#?region\\b/;this._getFoldWidgetBase=this.getFoldWidget;this.getFoldWidget=function(session,foldStyle,row){var line=session.getLine(row);if(this.singleLineBlockCommentRe.test(line)){if(!this.startRegionRe.test(line)&&!this.tripleStarBlockCommentRe.test(line))return\"\";}var fw=this._getFoldWidgetBase(session,foldStyle,row);if(!fw&&this.startRegionRe.test(line))return\"start\";// lineCommentRegionStart\nreturn fw;};this.getFoldWidgetRange=function(session,foldStyle,row,forceMultiline){var line=session.getLine(row);if(this.startRegionRe.test(line))return this.getCommentRegionBlock(session,line,row);var match=line.match(this.foldingStartMarker);if(match){var i=match.index;if(match[1])return this.openingBracketBlock(session,match[1],row,i);var range=session.getCommentFoldRange(row,i+match[0].length,1);if(range&&!range.isMultiLine()){if(forceMultiline){range=this.getSectionRange(session,row);}else if(foldStyle!=\"all\")range=null;}return range;}if(foldStyle===\"markbegin\")return;var match=line.match(this.foldingStopMarker);if(match){var i=match.index+match[0].length;if(match[1])return this.closingBracketBlock(session,match[1],row,i);return session.getCommentFoldRange(row,i,-1);}};this.getSectionRange=function(session,row){var line=session.getLine(row);var startIndent=line.search(/\\S/);var startRow=row;var startColumn=line.length;row=row+1;var endRow=row;var maxRow=session.getLength();while(++row<maxRow){line=session.getLine(row);var indent=line.search(/\\S/);if(indent===-1)continue;if(startIndent>indent)break;var subRange=this.getFoldWidgetRange(session,\"all\",row);if(subRange){if(subRange.start.row<=startRow){break;}else if(subRange.isMultiLine()){row=subRange.end.row;}else if(startIndent==indent){break;}}endRow=row;}return new Range(startRow,startColumn,endRow,session.getLine(endRow).length);};this.getCommentRegionBlock=function(session,line,row){var startColumn=line.search(/\\s*$/);var maxRow=session.getLength();var startRow=row;var re=/^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;var depth=1;while(++row<maxRow){line=session.getLine(row);var m=re.exec(line);if(!m)continue;if(m[1])depth--;else depth++;if(!depth)break;}var endRow=row;if(endRow>startRow){return new Range(startRow,startColumn,endRow,line.length);}};}).call(FoldMode.prototype);});ace.define(\"ace/mode/praat\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/praat_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/mode/folding/cstyle\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextMode=acequire(\"./text\").Mode;var PraatHighlightRules=acequire(\"./praat_highlight_rules\").PraatHighlightRules;var MatchingBraceOutdent=acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;var CStyleFoldMode=acequire(\"./folding/cstyle\").FoldMode;var Mode=function Mode(){this.HighlightRules=PraatHighlightRules;this.$outdent=new MatchingBraceOutdent();this.foldingRules=new CStyleFoldMode();this.$behaviour=this.$defaultBehaviour;};oop.inherits(Mode,TextMode);(function(){this.lineCommentStart=\"#\";this.getNextLineIndent=function(state,line,tab){var indent=this.$getIndent(line);var tokenizedLine=this.getTokenizer().getLineTokens(line,state);var tokens=tokenizedLine.tokens;if(tokens.length&&tokens[tokens.length-1].type==\"comment\"){return indent;}if(state==\"start\"){var match=line.match(/^.*[\\{\\(\\[:]\\s*$/);if(match){indent+=tab;}}return indent;};this.checkOutdent=function(state,line,input){return this.$outdent.checkOutdent(line,input);};this.autoOutdent=function(state,doc,row){this.$outdent.autoOutdent(doc,row);};this.$id=\"ace/mode/praat\";}).call(Mode.prototype);exports.Mode=Mode;});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// vendor/brace/mode/praat.chunk.js","ace.define(\"ace/mode/praat_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar PraatHighlightRules = function() {\n\n    var keywords = (\n        \"if|then|else|elsif|elif|endif|fi|\" +\n        \"endfor|endproc|\" + // related keywords specified below\n        \"while|endwhile|\" +\n        \"repeat|until|\" +\n        \"select|plus|minus|\" +\n        \"assert|asserterror\"\n    );\n\n    var predefinedVariables = (\n        \"macintosh|windows|unix|\" +\n        \"praatVersion|praatVersion\\\\$\" +\n        \"pi|undefined|\" +\n        \"newline\\\\$|tab\\\\$|\" +\n        \"shellDirectory\\\\$|homeDirectory\\\\$|preferencesDirectory\\\\$|\" +\n        \"temporaryDirectory\\\\$|defaultDirectory\\\\$\"\n    );\n    var directives = (\n        \"clearinfo|endSendPraat\"\n    );\n\n    var functions = (\n        \"writeInfo|writeInfoLine|appendInfo|appendInfoLine|info\\\\$|\" +\n        \"writeFile|writeFileLine|appendFile|appendFileLine|\" +\n        \"abs|round|floor|ceiling|min|max|imin|imax|\" +\n        \"sqrt|sin|cos|tan|arcsin|arccos|arctan|arctan2|sinc|sincpi|\" +\n        \"exp|ln|lnBeta|lnGamma|log10|log2|\" +\n        \"sinh|cosh|tanh|arcsinh|arccosh|arctanh|\" +\n        \"sigmoid|invSigmoid|erf|erfc|\" +\n        \"random(?:Uniform|Integer|Gauss|Poisson|Binomial)|\" +\n        \"gaussP|gaussQ|invGaussQ|incompleteGammaP|incompleteBeta|\" +\n        \"chiSquareP|chiSquareQ|invChiSquareQ|studentP|studentQ|invStudentQ|\" +\n        \"fisherP|fisherQ|invFisherQ|\" +\n        \"binomialP|binomialQ|invBinomialP|invBinomialQ|\" +\n        \"hertzToBark|barkToHerz|\" +\n        \"hertzToMel|melToHertz|\" +\n        \"hertzToSemitones|semitonesToHerz|\" +\n        \"erb|hertzToErb|erbToHertz|\" +\n        \"phonToDifferenceLimens|differenceLimensToPhon|\" +\n        \"soundPressureToPhon|\" +\n        \"beta|beta2|besselI|besselK|\" +\n        \"numberOfColumns|numberOfRows|\" +\n        \"selected|selected\\\\$|numberOfSelected|variableExists|\"+\n        \"index|rindex|startsWith|endsWith|\"+\n        \"index_regex|rindex_regex|replace_regex\\\\$|\"+\n        \"length|extractWord\\\\$|extractLine\\\\$|extractNumber|\" +\n        \"left\\\\$|right\\\\$|mid\\\\$|replace\\\\$|\" +\n        \"date\\\\$|fixed\\\\$|percent\\\\$|\" +\n        \"zero#|linear#|randomUniform#|randomInteger#|randomGauss#|\" +\n        \"beginPause|endPause|\" +\n        \"demoShow|demoWindowTitle|demoInput|demoWaitForInput|\" +\n        \"demoClicked|demoClickedIn|demoX|demoY|\" +\n        \"demoKeyPressed|demoKey\\\\$|\" +\n        \"demoExtraControlKeyPressed|demoShiftKeyPressed|\"+\n        \"demoCommandKeyPressed|demoOptionKeyPressed|\" +\n        \"environment\\\\$|chooseReadFile\\\\$|\" +\n        \"chooseDirectory\\\\$|createDirectory|fileReadable|deleteFile|\" +\n        \"selectObject|removeObject|plusObject|minusObject|\" +\n        \"runScript|exitScript|\" +\n        \"beginSendPraat|endSendPraat|\" +\n        \"objectsAreIdentical\"\n    );\n\n    var objectTypes = (\n        \"Activation|AffineTransform|AmplitudeTier|Art|Artword|Autosegment|\"  +\n        \"BarkFilter|CCA|Categories|Cepstrum|Cepstrumc|ChebyshevSeries|\"      +\n        \"ClassificationTable|Cochleagram|Collection|Configuration|\"          +\n        \"Confusion|ContingencyTable|Corpus|Correlation|Covariance|\"          +\n        \"CrossCorrelationTable|CrossCorrelationTables|DTW|Diagonalizer|\"     +\n        \"Discriminant|Dissimilarity|Distance|Distributions|DurationTier|\"    +\n        \"EEG|ERP|ERPTier|Eigen|Excitation|Excitations|ExperimentMFC|FFNet|\"  +\n        \"FeatureWeights|Formant|FormantFilter|FormantGrid|FormantPoint|\"     +\n        \"FormantTier|GaussianMixture|HMM|HMM_Observation|\"                   +\n        \"HMM_ObservationSequence|HMM_State|HMM_StateSequence|Harmonicity|\"   +\n        \"ISpline|Index|Intensity|IntensityTier|IntervalTier|KNN|KlattGrid|\"  +\n        \"KlattTable|LFCC|LPC|Label|LegendreSeries|LinearRegression|\"         +\n        \"LogisticRegression|LongSound|Ltas|MFCC|MSpline|ManPages|\"           +\n        \"Manipulation|Matrix|MelFilter|MixingMatrix|Movie|Network|\"          +\n        \"OTGrammar|OTHistory|OTMulti|PCA|PairDistribution|ParamCurve|\"       +\n        \"Pattern|Permutation|Pitch|PitchTier|PointProcess|Polygon|\"          +\n        \"Polynomial|Procrustes|RealPoint|RealTier|ResultsMFC|Roots|SPINET|\"  +\n        \"SSCP|SVD|Salience|ScalarProduct|Similarity|SimpleString|\"           +\n        \"SortedSetOfString|Sound|Speaker|Spectrogram|Spectrum|SpectrumTier|\" +\n        \"SpeechSynthesizer|SpellingChecker|Strings|StringsIndex|Table|\"      +\n        \"TableOfReal|TextGrid|TextInterval|TextPoint|TextTier|Tier|\"         +\n        \"Transition|VocalTract|Weight|WordList\"\n    );\n\n    this.$rules = {\n        \"start\" : [\n            {\n                token : \"string.interpolated\",\n                regex : /'((?:[a-z][a-zA-Z0-9_]*)(?:\\$|#|:[0-9]+)?)'/\n            }, {\n                token : [\"text\", \"text\", \"keyword.operator\", \"text\", \"keyword\"],\n                regex : /(^\\s*)(?:([a-z][a-zA-Z0-9_]*\\$?\\s+)(=)(\\s+))?(stopwatch)/\n            }, {\n                token : [\"text\", \"keyword\", \"text\", \"string\"],\n                regex : /(^\\s*)(print(?:line|tab)?|echo|exit|pause|send(?:praat|socket)|include|execute|system(?:_nocheck)?)(\\s+)(.*)/\n            }, {\n                token : [\"text\", \"keyword\"],\n                regex : \"(^\\\\s*)(\" + directives + \")$\"\n            }, {\n                token : [\"text\", \"keyword.operator\", \"text\"],\n                regex : /(\\s+)((?:\\+|-|\\/|\\*|<|>)=?|==?|!=|%|\\^|\\||and|or|not)(\\s+)/\n            }, {\n                token : [\"text\", \"text\", \"keyword.operator\", \"text\", \"keyword\", \"text\", \"keyword\"],\n                regex : /(^\\s*)(?:([a-z][a-zA-Z0-9_]*\\$?\\s+)(=)(\\s+))?(?:((?:no)?warn|(?:unix_)?nocheck|noprogress)(\\s+))?((?:[A-Z][^.:\"]+)(?:$|(?:\\.{3}|:)))/\n            }, {\n                token : [\"text\", \"keyword\", \"text\", \"keyword\"],\n                regex : /(^\\s*)(?:(demo)?(\\s+))((?:[A-Z][^.:\"]+)(?:$|(?:\\.{3}|:)))/\n            }, {\n                token : [\"text\", \"keyword\", \"text\", \"keyword\"],\n                regex : /^(\\s*)(?:(demo)(\\s+))?(10|12|14|16|24)$/\n            }, {\n                token : [\"text\", \"support.function\", \"text\"],\n                regex : /(\\s*)(do\\$?)(\\s*:\\s*|\\s*\\(\\s*)/\n            }, {\n                token : \"entity.name.type\",\n                regex : \"(\" + objectTypes + \")\"\n            }, {\n                token : \"variable.language\",\n                regex : \"(\" + predefinedVariables + \")\"\n            }, {\n                token : [\"support.function\", \"text\"],\n                regex : \"((?:\" + functions + \")\\\\$?)(\\\\s*(?::|\\\\())\"\n            }, {\n                token : \"keyword\",\n                regex : /(\\bfor\\b)/,\n                next : \"for\"\n            }, {\n                token : \"keyword\",\n                regex : \"(\\\\b(?:\" + keywords + \")\\\\b)\"\n            }, {\n                token : \"string\",\n                regex : /\"[^\"]*\"/\n            }, {\n                token : \"string\",\n                regex : /\"[^\"]*$/,\n                next : \"brokenstring\"\n            }, {\n                token : [\"text\", \"keyword\", \"text\", \"entity.name.section\"],\n                regex : /(^\\s*)(\\bform\\b)(\\s+)(.*)/,\n                next : \"form\"\n            }, {\n                token : \"constant.numeric\",\n                regex : /\\b[+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?\\b/\n            }, {\n                token : [\"keyword\", \"text\", \"entity.name.function\"],\n                regex : /(procedure)(\\s+)(\\S+)/\n            }, {\n                token : [\"entity.name.function\", \"text\"],\n                regex : /(@\\S+)(:|\\s*\\()/\n            }, {\n                token : [\"text\", \"keyword\", \"text\", \"entity.name.function\"],\n                regex : /(^\\s*)(call)(\\s+)(\\S+)/\n            }, {\n                token : \"comment\",\n                regex : /(^\\s*#|;).*$/\n            }, {\n                token : \"text\",\n                regex : /\\s+/\n            }\n        ],\n        \"form\" : [\n            {\n                token : [\"keyword\", \"text\", \"constant.numeric\"],\n                regex : /((?:optionmenu|choice)\\s+)(\\S+:\\s+)([0-9]+)/\n            }, {\n                token : [\"keyword\", \"constant.numeric\"],\n                regex : /((?:option|button)\\s+)([+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?\\b)/\n            }, {\n                token : [\"keyword\", \"string\"],\n                regex : /((?:option|button)\\s+)(.*)/\n            }, {\n                token : [\"keyword\", \"text\", \"string\"],\n                regex : /((?:sentence|text)\\s+)(\\S+\\s*)(.*)/\n            }, {\n                token : [\"keyword\", \"text\", \"string\", \"invalid.illegal\"],\n                regex : /(word\\s+)(\\S+\\s*)(\\S+)?(\\s.*)?/\n            }, {\n                token : [\"keyword\", \"text\", \"constant.language\"],\n                regex : /(boolean\\s+)(\\S+\\s*)(0|1|\"?(?:yes|no)\"?)/\n            }, {\n                token : [\"keyword\", \"text\", \"constant.numeric\"],\n                regex : /((?:real|natural|positive|integer)\\s+)(\\S+\\s*)([+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?\\b)/\n            }, {\n                token : [\"keyword\", \"string\"],\n                regex : /(comment\\s+)(.*)/\n            }, {\n                token : \"keyword\",\n                regex : 'endform',\n                next : \"start\"\n            }\n        ],\n        \"for\" : [\n            {\n                token : [\"keyword\", \"text\", \"constant.numeric\", \"text\"],\n                regex : /(from|to)(\\s+)([+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?)(\\s*)/\n            }, {\n                token : [\"keyword\", \"text\"],\n                regex : /(from|to)(\\s+\\S+\\s*)/\n            }, {\n                token : \"text\",\n                regex : /$/,\n                next : \"start\"\n            }\n        ],\n        \"brokenstring\" : [\n            {\n                token : [\"text\", \"string\"],\n                regex : /(\\s*\\.{3})([^\"]*)/\n            }, {\n                token : \"string\",\n                regex : /\"/,\n                next : \"start\"\n            }\n        ]\n    };\n};\n\noop.inherits(PraatHighlightRules, TextHighlightRules);\n\nexports.PraatHighlightRules = PraatHighlightRules;\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar Range = acequire(\"../range\").Range;\n\nvar MatchingBraceOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        return line.match(/^\\s*/)[0];\n    };\n\n}).call(MatchingBraceOutdent.prototype);\n\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar Range = acequire(\"../../range\").Range;\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    \n    this.foldingStartMarker = /(\\{|\\[)[^\\}\\]]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{]*(\\}|\\])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n    \n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n    \n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n    \n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n    \n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        \n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        \n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n                \n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            \n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n            \n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    \n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            \n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        \n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/praat\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/praat_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/mode/folding/cstyle\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar PraatHighlightRules = acequire(\"./praat_highlight_rules\").PraatHighlightRules;\nvar MatchingBraceOutdent = acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar CStyleFoldMode = acequire(\"./folding/cstyle\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = PraatHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.foldingRules = new CStyleFoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n\n    this.lineCommentStart = \"#\";\n\n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n\n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\n            return indent;\n        }\n\n        if (state == \"start\") {\n            var match = line.match(/^.*[\\{\\(\\[:]\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        }\n\n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.$id = \"ace/mode/praat\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n\n\n\n// WEBPACK FOOTER //\n// /Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/praat.js"],"sourceRoot":""}