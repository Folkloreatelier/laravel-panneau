{"version":3,"sources":["webpack:///vendor/brace/mode/vala.chunk.js","webpack:////Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/vala.js"],"names":["webpackJsonppanneau","348","module","exports","ace","define","acequire","oop","TextHighlightRules","ValaHighlightRules","this","$rules","start","token","regex","include","#all-types","#annotations","push","next","defaultToken","#anonymous-classes-and-new","push_disabled","TODO","originalRegex","#assertions","#class","comment","#class-body","#code","#comments","#comments-inline","#constants-and-special-vars","#enums","#keywords","#methods","#namespace","#object-types","#object-types-inherited","#parameters","#parens","#primitive-arrays","#primitive-types","#storage-modifiers","#strings","#throws","#values","normalizeRules","metaData","fileTypes","foldingStartMarker","foldingStopMarker","name","scopeName","inherits","Range","BaseFoldMode","FoldMode","commentRegex","RegExp","source","replace","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","match","i","index","openingBracketBlock","range","getCommentFoldRange","length","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","MatchingBraceOutdent","checkOutdent","input","autoOutdent","doc","column","openBracePos","findMatchingBracket","$getIndent","TextMode","Mode","Tokenizer","CstyleBehaviour","CStyleFoldMode","HighlightRules","$outdent","$behaviour","foldingRules","lineCommentStart","blockComment","getNextLineIndent","state","tab","tokenizedLine","getTokenizer","getLineTokens","tokens","endState","type","$id"],"mappings":"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","file":"vendor/brace/mode/vala.chunk.js","sourcesContent":["webpackJsonppanneau([117],{\n\n/***/ 348:\n/***/ (function(module, exports) {\n\nace.define(\"ace/mode/vala_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextHighlightRules=acequire(\"./text_highlight_rules\").TextHighlightRules;var ValaHighlightRules=function ValaHighlightRules(){this.$rules={start:[{token:['meta.using.vala','keyword.other.using.vala','meta.using.vala','storage.modifier.using.vala','meta.using.vala','punctuation.terminator.vala'],regex:'^(\\\\s*)(using)\\\\b(?:(\\\\s*)([^ ;$]+)(\\\\s*)((?:;)?))?'},{include:'#code'}],'#all-types':[{include:'#primitive-arrays'},{include:'#primitive-types'},{include:'#object-types'}],'#annotations':[{token:['storage.type.annotation.vala','punctuation.definition.annotation-arguments.begin.vala'],regex:'(@[^ (]+)(\\\\()',push:[{token:'punctuation.definition.annotation-arguments.end.vala',regex:'\\\\)',next:'pop'},{token:['constant.other.key.vala','text','keyword.operator.assignment.vala'],regex:'(\\\\w*)(\\\\s*)(=)'},{include:'#code'},{token:'punctuation.seperator.property.vala',regex:','},{defaultToken:'meta.declaration.annotation.vala'}]},{token:'storage.type.annotation.vala',regex:'@\\\\w*'}],'#anonymous-classes-and-new':[{token:'keyword.control.new.vala',regex:'\\\\bnew\\\\b',push_disabled:[{token:'text',regex:'(?<=\\\\)|\\\\])(?!\\\\s*{)|(?<=})|(?=;)',TODO:'FIXME: regexp doesn\\'t have js equivalent',originalRegex:'(?<=\\\\)|\\\\])(?!\\\\s*{)|(?<=})|(?=;)',next:'pop'},{token:['storage.type.vala','text'],regex:'(\\\\w+)(\\\\s*)(?=\\\\[)',push:[{token:'text',regex:'}|(?=;|\\\\))',next:'pop'},{token:'text',regex:'\\\\[',push:[{token:'text',regex:'\\\\]',next:'pop'},{include:'#code'}]},{token:'text',regex:'{',push:[{token:'text',regex:'(?=})',next:'pop'},{include:'#code'}]}]},{token:'text',regex:'(?=\\\\w.*\\\\()',push:[{token:'text',regex:'(?<=\\\\))',TODO:'FIXME: regexp doesn\\'t have js equivalent',originalRegex:'(?<=\\\\))',next:'pop'},{include:'#object-types'},{token:'text',regex:'\\\\(',push:[{token:'text',regex:'\\\\)',next:'pop'},{include:'#code'}]}]},{token:'meta.inner-class.vala',regex:'{',push:[{token:'meta.inner-class.vala',regex:'}',next:'pop'},{include:'#class-body'},{defaultToken:'meta.inner-class.vala'}]}]}],'#assertions':[{token:['keyword.control.assert.vala','meta.declaration.assertion.vala'],regex:'\\\\b(assert|acequires|ensures)(\\\\s)',push:[{token:'meta.declaration.assertion.vala',regex:'$',next:'pop'},{token:'keyword.operator.assert.expression-seperator.vala',regex:':'},{include:'#code'},{defaultToken:'meta.declaration.assertion.vala'}]}],'#class':[{token:'meta.class.vala',regex:'(?=\\\\w?[\\\\w\\\\s]*(?:class|(?:@)?interface|enum|struct|namespace)\\\\s+\\\\w+)',push:[{token:'paren.vala',regex:'}',next:'pop'},{include:'#storage-modifiers'},{include:'#comments'},{token:['storage.modifier.vala','meta.class.identifier.vala','entity.name.type.class.vala'],regex:'(class|(?:@)?interface|enum|struct|namespace)(\\\\s+)([\\\\w\\\\.]+)'},{token:'storage.modifier.extends.vala',regex:':',push:[{token:'meta.definition.class.inherited.classes.vala',regex:'(?={|,)',next:'pop'},{include:'#object-types-inherited'},{include:'#comments'},{defaultToken:'meta.definition.class.inherited.classes.vala'}]},{token:['storage.modifier.implements.vala','meta.definition.class.implemented.interfaces.vala'],regex:'(,)(\\\\s)',push:[{token:'meta.definition.class.implemented.interfaces.vala',regex:'(?=\\\\{)',next:'pop'},{include:'#object-types-inherited'},{include:'#comments'},{defaultToken:'meta.definition.class.implemented.interfaces.vala'}]},{token:'paren.vala',regex:'{',push:[{token:'paren.vala',regex:'(?=})',next:'pop'},{include:'#class-body'},{defaultToken:'meta.class.body.vala'}]},{defaultToken:'meta.class.vala'}],comment:'attempting to put namespace in here.'}],'#class-body':[{include:'#comments'},{include:'#class'},{include:'#enums'},{include:'#methods'},{include:'#annotations'},{include:'#storage-modifiers'},{include:'#code'}],'#code':[{include:'#comments'},{include:'#class'},{token:'text',regex:'{',push:[{token:'text',regex:'}',next:'pop'},{include:'#code'}]},{include:'#assertions'},{include:'#parens'},{include:'#constants-and-special-vars'},{include:'#anonymous-classes-and-new'},{include:'#keywords'},{include:'#storage-modifiers'},{include:'#strings'},{include:'#all-types'}],'#comments':[{token:'punctuation.definition.comment.vala',regex:'/\\\\*\\\\*/'},{include:'text.html.javadoc'},{include:'#comments-inline'}],'#comments-inline':[{token:'punctuation.definition.comment.vala',regex:'/\\\\*',push:[{token:'punctuation.definition.comment.vala',regex:'\\\\*/',next:'pop'},{defaultToken:'comment.block.vala'}]},{token:['text','punctuation.definition.comment.vala','comment.line.double-slash.vala'],regex:'(\\\\s*)(//)(.*$)'}],'#constants-and-special-vars':[{token:'constant.language.vala',regex:'\\\\b(?:true|false|null)\\\\b'},{token:'variable.language.vala',regex:'\\\\b(?:this|base)\\\\b'},{token:'constant.numeric.vala',regex:'\\\\b(?:0(?:x|X)[0-9a-fA-F]*|(?:[0-9]+\\\\.?[0-9]*|\\\\.[0-9]+)(?:(?:e|E)(?:\\\\+|-)?[0-9]+)?)(?:[LlFfUuDd]|UL|ul)?\\\\b'},{token:['keyword.operator.dereference.vala','constant.other.vala'],regex:'((?:\\\\.)?)\\\\b([A-Z][A-Z0-9_]+)(?!<|\\\\.class|\\\\s*\\\\w+\\\\s*=)\\\\b'}],'#enums':[{token:'text',regex:'^(?=\\\\s*[A-Z0-9_]+\\\\s*(?:{|\\\\(|,))',push:[{token:'text',regex:'(?=;|})',next:'pop'},{token:'constant.other.enum.vala',regex:'\\\\w+',push:[{token:'meta.enum.vala',regex:'(?=,|;|})',next:'pop'},{include:'#parens'},{token:'text',regex:'{',push:[{token:'text',regex:'}',next:'pop'},{include:'#class-body'}]},{defaultToken:'meta.enum.vala'}]}]}],'#keywords':[{token:'keyword.control.catch-exception.vala',regex:'\\\\b(?:try|catch|finally|throw)\\\\b'},{token:'keyword.control.vala',regex:'\\\\?|:|\\\\?\\\\?'},{token:'keyword.control.vala',regex:'\\\\b(?:return|break|case|continue|default|do|while|for|foreach|switch|if|else|in|yield|get|set|value)\\\\b'},{token:'keyword.operator.vala',regex:'\\\\b(?:typeof|is|as)\\\\b'},{token:'keyword.operator.comparison.vala',regex:'==|!=|<=|>=|<>|<|>'},{token:'keyword.operator.assignment.vala',regex:'='},{token:'keyword.operator.increment-decrement.vala',regex:'\\\\-\\\\-|\\\\+\\\\+'},{token:'keyword.operator.arithmetic.vala',regex:'\\\\-|\\\\+|\\\\*|\\\\/|%'},{token:'keyword.operator.logical.vala',regex:'!|&&|\\\\|\\\\|'},{token:'keyword.operator.dereference.vala',regex:'\\\\.(?=\\\\S)',originalRegex:'(?<=\\\\S)\\\\.(?=\\\\S)'},{token:'punctuation.terminator.vala',regex:';'},{token:'keyword.operator.ownership',regex:'owned|unowned'}],'#methods':[{token:'meta.method.vala',regex:'(?!new)(?=\\\\w.*\\\\s+)(?=[^=]+\\\\()',push:[{token:'paren.vala',regex:'}|(?=;)',next:'pop'},{include:'#storage-modifiers'},{token:['entity.name.function.vala','meta.method.identifier.vala'],regex:'([\\\\~\\\\w\\\\.]+)(\\\\s*\\\\()',push:[{token:'meta.method.identifier.vala',regex:'\\\\)',next:'pop'},{include:'#parameters'},{defaultToken:'meta.method.identifier.vala'}]},{token:'meta.method.return-type.vala',regex:'(?=\\\\w.*\\\\s+\\\\w+\\\\s*\\\\()',push:[{token:'meta.method.return-type.vala',regex:'(?=\\\\w+\\\\s*\\\\()',next:'pop'},{include:'#all-types'},{defaultToken:'meta.method.return-type.vala'}]},{include:'#throws'},{token:'paren.vala',regex:'{',push:[{token:'paren.vala',regex:'(?=})',next:'pop'},{include:'#code'},{defaultToken:'meta.method.body.vala'}]},{defaultToken:'meta.method.vala'}]}],'#namespace':[{token:'text',regex:'^(?=\\\\s*[A-Z0-9_]+\\\\s*(?:{|\\\\(|,))',push:[{token:'text',regex:'(?=;|})',next:'pop'},{token:'constant.other.namespace.vala',regex:'\\\\w+',push:[{token:'meta.namespace.vala',regex:'(?=,|;|})',next:'pop'},{include:'#parens'},{token:'text',regex:'{',push:[{token:'text',regex:'}',next:'pop'},{include:'#code'}]},{defaultToken:'meta.namespace.vala'}]}],comment:'This is not quite right. See the class grammar right now'}],'#object-types':[{token:'storage.type.generic.vala',regex:'\\\\b(?:[a-z]\\\\w*\\\\.)*[A-Z]+\\\\w*<',push:[{token:'storage.type.generic.vala',regex:'>|[^\\\\w\\\\s,\\\\?<\\\\[()\\\\]]',TODO:'FIXME: regexp doesn\\'t have js equivalent',originalRegex:'>|[^\\\\w\\\\s,\\\\?<\\\\[(?:[,]+)\\\\]]',next:'pop'},{include:'#object-types'},{token:'storage.type.generic.vala',regex:'<',push:[{token:'storage.type.generic.vala',regex:'>|[^\\\\w\\\\s,\\\\[\\\\]<]',next:'pop'},{defaultToken:'storage.type.generic.vala'}],comment:'This is just to support <>\\'s with no actual type prefix'},{defaultToken:'storage.type.generic.vala'}]},{token:'storage.type.object.array.vala',regex:'\\\\b(?:[a-z]\\\\w*\\\\.)*[A-Z]+\\\\w*(?=\\\\[)',push:[{token:'storage.type.object.array.vala',regex:'(?=[^\\\\]\\\\s])',next:'pop'},{token:'text',regex:'\\\\[',push:[{token:'text',regex:'\\\\]',next:'pop'},{include:'#code'}]},{defaultToken:'storage.type.object.array.vala'}]},{token:['storage.type.vala','keyword.operator.dereference.vala','storage.type.vala'],regex:'\\\\b(?:([a-z]\\\\w*)(\\\\.))*([A-Z]+\\\\w*\\\\b)'}],'#object-types-inherited':[{token:'entity.other.inherited-class.vala',regex:'\\\\b(?:[a-z]\\\\w*\\\\.)*[A-Z]+\\\\w*<',push:[{token:'entity.other.inherited-class.vala',regex:'>|[^\\\\w\\\\s,<]',next:'pop'},{include:'#object-types'},{token:'storage.type.generic.vala',regex:'<',push:[{token:'storage.type.generic.vala',regex:'>|[^\\\\w\\\\s,<]',next:'pop'},{defaultToken:'storage.type.generic.vala'}],comment:'This is just to support <>\\'s with no actual type prefix'},{defaultToken:'entity.other.inherited-class.vala'}]},{token:['entity.other.inherited-class.vala','keyword.operator.dereference.vala','entity.other.inherited-class.vala'],regex:'\\\\b(?:([a-z]\\\\w*)(\\\\.))*([A-Z]+\\\\w*)'}],'#parameters':[{token:'storage.modifier.vala',regex:'final'},{include:'#primitive-arrays'},{include:'#primitive-types'},{include:'#object-types'},{token:'variable.parameter.vala',regex:'\\\\w+'}],'#parens':[{token:'text',regex:'\\\\(',push:[{token:'text',regex:'\\\\)',next:'pop'},{include:'#code'}]}],'#primitive-arrays':[{token:'storage.type.primitive.array.vala',regex:'\\\\b(?:bool|byte|sbyte|char|decimal|double|float|int|uint|long|ulong|object|short|ushort|string|void|int8|int16|int32|int64|uint8|uint16|uint32|uint64)(?:\\\\[\\\\])*\\\\b'}],'#primitive-types':[{token:'storage.type.primitive.vala',regex:'\\\\b(?:var|bool|byte|sbyte|char|decimal|double|float|int|uint|long|ulong|object|short|ushort|string|void|signal|int8|int16|int32|int64|uint8|uint16|uint32|uint64)\\\\b',comment:'var is not really a primitive, but acts like one in most cases'}],'#storage-modifiers':[{token:'storage.modifier.vala',regex:'\\\\b(?:public|private|protected|internal|static|final|sealed|virtual|override|abstract|readonly|volatile|dynamic|async|unsafe|out|ref|weak|owned|unowned|const)\\\\b',comment:'Not sure about unsafe and readonly'}],'#strings':[{token:'punctuation.definition.string.begin.vala',regex:'@\"',push:[{token:'punctuation.definition.string.end.vala',regex:'\"',next:'pop'},{token:'constant.character.escape.vala',regex:'\\\\\\\\.|%[\\\\w\\\\.\\\\-]+|\\\\$(?:\\\\w+|\\\\([\\\\w\\\\s\\\\+\\\\-\\\\*\\\\/]+\\\\))'},{defaultToken:'string.quoted.interpolated.vala'}]},{token:'punctuation.definition.string.begin.vala',regex:'\"',push:[{token:'punctuation.definition.string.end.vala',regex:'\"',next:'pop'},{token:'constant.character.escape.vala',regex:'\\\\\\\\.'},{token:'constant.character.escape.vala',regex:'%[\\\\w\\\\.\\\\-]+'},{defaultToken:'string.quoted.double.vala'}]},{token:'punctuation.definition.string.begin.vala',regex:'\\'',push:[{token:'punctuation.definition.string.end.vala',regex:'\\'',next:'pop'},{token:'constant.character.escape.vala',regex:'\\\\\\\\.'},{defaultToken:'string.quoted.single.vala'}]},{token:'punctuation.definition.string.begin.vala',regex:'\"\"\"',push:[{token:'punctuation.definition.string.end.vala',regex:'\"\"\"',next:'pop'},{token:'constant.character.escape.vala',regex:'%[\\\\w\\\\.\\\\-]+'},{defaultToken:'string.quoted.triple.vala'}]}],'#throws':[{token:'storage.modifier.vala',regex:'throws',push:[{token:'meta.throwables.vala',regex:'(?={|;)',next:'pop'},{include:'#object-types'},{defaultToken:'meta.throwables.vala'}]}],'#values':[{include:'#strings'},{include:'#object-types'},{include:'#constants-and-special-vars'}]};this.normalizeRules();};ValaHighlightRules.metaData={comment:'Based heavily on the Java bundle\\'s language syntax. TODO:\\n* Closures\\n* Delegates\\n* Properties: Better support for properties.\\n* Annotations\\n* Error domains\\n* Named arguments\\n* Array slicing, negative indexes, multidimensional\\n* construct blocks\\n* lock blocks?\\n* regex literals\\n* DocBlock syntax highlighting. (Currently importing javadoc)\\n* Folding rule for comments.\\n',fileTypes:['vala'],foldingStartMarker:'(\\\\{\\\\s*(//.*)?$|^\\\\s*// \\\\{\\\\{\\\\{)',foldingStopMarker:'^\\\\s*(\\\\}|// \\\\}\\\\}\\\\}$)',name:'Vala',scopeName:'source.vala'};oop.inherits(ValaHighlightRules,TextHighlightRules);exports.ValaHighlightRules=ValaHighlightRules;});ace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../../lib/oop\");var Range=acequire(\"../../range\").Range;var BaseFoldMode=acequire(\"./fold_mode\").FoldMode;var FoldMode=exports.FoldMode=function(commentRegex){if(commentRegex){this.foldingStartMarker=new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/,\"|\"+commentRegex.start));this.foldingStopMarker=new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/,\"|\"+commentRegex.end));}};oop.inherits(FoldMode,BaseFoldMode);(function(){this.foldingStartMarker=/(\\{|\\[)[^\\}\\]]*$|^\\s*(\\/\\*)/;this.foldingStopMarker=/^[^\\[\\{]*(\\}|\\])|^[\\s\\*]*(\\*\\/)/;this.singleLineBlockCommentRe=/^\\s*(\\/\\*).*\\*\\/\\s*$/;this.tripleStarBlockCommentRe=/^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;this.startRegionRe=/^\\s*(\\/\\*|\\/\\/)#?region\\b/;this._getFoldWidgetBase=this.getFoldWidget;this.getFoldWidget=function(session,foldStyle,row){var line=session.getLine(row);if(this.singleLineBlockCommentRe.test(line)){if(!this.startRegionRe.test(line)&&!this.tripleStarBlockCommentRe.test(line))return\"\";}var fw=this._getFoldWidgetBase(session,foldStyle,row);if(!fw&&this.startRegionRe.test(line))return\"start\";// lineCommentRegionStart\nreturn fw;};this.getFoldWidgetRange=function(session,foldStyle,row,forceMultiline){var line=session.getLine(row);if(this.startRegionRe.test(line))return this.getCommentRegionBlock(session,line,row);var match=line.match(this.foldingStartMarker);if(match){var i=match.index;if(match[1])return this.openingBracketBlock(session,match[1],row,i);var range=session.getCommentFoldRange(row,i+match[0].length,1);if(range&&!range.isMultiLine()){if(forceMultiline){range=this.getSectionRange(session,row);}else if(foldStyle!=\"all\")range=null;}return range;}if(foldStyle===\"markbegin\")return;var match=line.match(this.foldingStopMarker);if(match){var i=match.index+match[0].length;if(match[1])return this.closingBracketBlock(session,match[1],row,i);return session.getCommentFoldRange(row,i,-1);}};this.getSectionRange=function(session,row){var line=session.getLine(row);var startIndent=line.search(/\\S/);var startRow=row;var startColumn=line.length;row=row+1;var endRow=row;var maxRow=session.getLength();while(++row<maxRow){line=session.getLine(row);var indent=line.search(/\\S/);if(indent===-1)continue;if(startIndent>indent)break;var subRange=this.getFoldWidgetRange(session,\"all\",row);if(subRange){if(subRange.start.row<=startRow){break;}else if(subRange.isMultiLine()){row=subRange.end.row;}else if(startIndent==indent){break;}}endRow=row;}return new Range(startRow,startColumn,endRow,session.getLine(endRow).length);};this.getCommentRegionBlock=function(session,line,row){var startColumn=line.search(/\\s*$/);var maxRow=session.getLength();var startRow=row;var re=/^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;var depth=1;while(++row<maxRow){line=session.getLine(row);var m=re.exec(line);if(!m)continue;if(m[1])depth--;else depth++;if(!depth)break;}var endRow=row;if(endRow>startRow){return new Range(startRow,startColumn,endRow,line.length);}};}).call(FoldMode.prototype);});ace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"],function(acequire,exports,module){\"use strict\";var Range=acequire(\"../range\").Range;var MatchingBraceOutdent=function MatchingBraceOutdent(){};(function(){this.checkOutdent=function(line,input){if(!/^\\s+$/.test(line))return false;return /^\\s*\\}/.test(input);};this.autoOutdent=function(doc,row){var line=doc.getLine(row);var match=line.match(/^(\\s*\\})/);if(!match)return 0;var column=match[1].length;var openBracePos=doc.findMatchingBracket({row:row,column:column});if(!openBracePos||openBracePos.row==row)return 0;var indent=this.$getIndent(doc.getLine(openBracePos.row));doc.replace(new Range(row,0,row,column-1),indent);};this.$getIndent=function(line){return line.match(/^\\s*/)[0];};}).call(MatchingBraceOutdent.prototype);exports.MatchingBraceOutdent=MatchingBraceOutdent;});ace.define(\"ace/mode/vala\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/tokenizer\",\"ace/mode/vala_highlight_rules\",\"ace/mode/folding/cstyle\",\"ace/mode/behaviour/cstyle\",\"ace/mode/folding/cstyle\",\"ace/mode/matching_brace_outdent\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextMode=acequire(\"./text\").Mode;var Tokenizer=acequire(\"../tokenizer\").Tokenizer;var ValaHighlightRules=acequire(\"./vala_highlight_rules\").ValaHighlightRules;var FoldMode=acequire(\"./folding/cstyle\").FoldMode;var CstyleBehaviour=acequire(\"./behaviour/cstyle\").CstyleBehaviour;var CStyleFoldMode=acequire(\"./folding/cstyle\").FoldMode;var MatchingBraceOutdent=acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;var Mode=function Mode(){this.HighlightRules=ValaHighlightRules;this.$outdent=new MatchingBraceOutdent();this.$behaviour=new CstyleBehaviour();this.foldingRules=new CStyleFoldMode();};oop.inherits(Mode,TextMode);(function(){this.lineCommentStart=\"//\";this.blockComment={start:\"/*\",end:\"*/\"};this.getNextLineIndent=function(state,line,tab){var indent=this.$getIndent(line);var tokenizedLine=this.getTokenizer().getLineTokens(line,state);var tokens=tokenizedLine.tokens;var endState=tokenizedLine.state;if(tokens.length&&tokens[tokens.length-1].type==\"comment\"){return indent;}if(state==\"start\"||state==\"no_regex\"){var match=line.match(/^.*(?:\\bcase\\b.*:|[\\{\\(\\[])\\s*$/);if(match){indent+=tab;}}else if(state==\"doc-start\"){if(endState==\"start\"||endState==\"no_regex\"){return\"\";}var match=line.match(/^\\s*(\\/?)\\*/);if(match){if(match[1]){indent+=\" \";}indent+=\"* \";}}return indent;};this.checkOutdent=function(state,line,input){return this.$outdent.checkOutdent(line,input);};this.autoOutdent=function(state,doc,row){this.$outdent.autoOutdent(doc,row);};this.$id=\"ace/mode/vala\";}).call(Mode.prototype);exports.Mode=Mode;});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// vendor/brace/mode/vala.chunk.js","ace.define(\"ace/mode/vala_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar ValaHighlightRules = function() {\n\n    this.$rules = { start: \n       [ { token: \n            [ 'meta.using.vala',\n              'keyword.other.using.vala',\n              'meta.using.vala',\n              'storage.modifier.using.vala',\n              'meta.using.vala',\n              'punctuation.terminator.vala' ],\n           regex: '^(\\\\s*)(using)\\\\b(?:(\\\\s*)([^ ;$]+)(\\\\s*)((?:;)?))?' },\n         { include: '#code' } ],\n      '#all-types': \n       [ { include: '#primitive-arrays' },\n         { include: '#primitive-types' },\n         { include: '#object-types' } ],\n      '#annotations': \n       [ { token: \n            [ 'storage.type.annotation.vala',\n              'punctuation.definition.annotation-arguments.begin.vala' ],\n           regex: '(@[^ (]+)(\\\\()',\n           push: \n            [ { token: 'punctuation.definition.annotation-arguments.end.vala',\n                regex: '\\\\)',\n                next: 'pop' },\n              { token: \n                 [ 'constant.other.key.vala',\n                   'text',\n                   'keyword.operator.assignment.vala' ],\n                regex: '(\\\\w*)(\\\\s*)(=)' },\n              { include: '#code' },\n              { token: 'punctuation.seperator.property.vala', regex: ',' },\n              { defaultToken: 'meta.declaration.annotation.vala' } ] },\n         { token: 'storage.type.annotation.vala', regex: '@\\\\w*' } ],\n      '#anonymous-classes-and-new': \n       [ { token: 'keyword.control.new.vala',\n           regex: '\\\\bnew\\\\b',\n           push_disabled: \n            [ { token: 'text',\n                regex: '(?<=\\\\)|\\\\])(?!\\\\s*{)|(?<=})|(?=;)',\n                TODO: 'FIXME: regexp doesn\\'t have js equivalent',\n                originalRegex: '(?<=\\\\)|\\\\])(?!\\\\s*{)|(?<=})|(?=;)',\n                next: 'pop' },\n              { token: [ 'storage.type.vala', 'text' ],\n                regex: '(\\\\w+)(\\\\s*)(?=\\\\[)',\n                push: \n                 [ { token: 'text', regex: '}|(?=;|\\\\))', next: 'pop' },\n                   { token: 'text',\n                     regex: '\\\\[',\n                     push: \n                      [ { token: 'text', regex: '\\\\]', next: 'pop' },\n                        { include: '#code' } ] },\n                   { token: 'text',\n                     regex: '{',\n                     push: \n                      [ { token: 'text', regex: '(?=})', next: 'pop' },\n                        { include: '#code' } ] } ] },\n              { token: 'text',\n                regex: '(?=\\\\w.*\\\\()',\n                push: \n                 [ { token: 'text',\n                     regex: '(?<=\\\\))',\n                     TODO: 'FIXME: regexp doesn\\'t have js equivalent',\n                     originalRegex: '(?<=\\\\))',\n                     next: 'pop' },\n                   { include: '#object-types' },\n                   { token: 'text',\n                     regex: '\\\\(',\n                     push: \n                      [ { token: 'text', regex: '\\\\)', next: 'pop' },\n                        { include: '#code' } ] } ] },\n              { token: 'meta.inner-class.vala',\n                regex: '{',\n                push: \n                 [ { token: 'meta.inner-class.vala', regex: '}', next: 'pop' },\n                   { include: '#class-body' },\n                   { defaultToken: 'meta.inner-class.vala' } ] } ] } ],\n      '#assertions': \n       [ { token: \n            [ 'keyword.control.assert.vala',\n              'meta.declaration.assertion.vala' ],\n           regex: '\\\\b(assert|acequires|ensures)(\\\\s)',\n           push: \n            [ { token: 'meta.declaration.assertion.vala',\n                regex: '$',\n                next: 'pop' },\n              { token: 'keyword.operator.assert.expression-seperator.vala',\n                regex: ':' },\n              { include: '#code' },\n              { defaultToken: 'meta.declaration.assertion.vala' } ] } ],\n      '#class': \n       [ { token: 'meta.class.vala',\n           regex: '(?=\\\\w?[\\\\w\\\\s]*(?:class|(?:@)?interface|enum|struct|namespace)\\\\s+\\\\w+)',\n           push: \n            [ { token: 'paren.vala',\n                regex: '}',\n                next: 'pop' },\n              { include: '#storage-modifiers' },\n              { include: '#comments' },\n              { token: \n                 [ 'storage.modifier.vala',\n                   'meta.class.identifier.vala',\n                   'entity.name.type.class.vala' ],\n                regex: '(class|(?:@)?interface|enum|struct|namespace)(\\\\s+)([\\\\w\\\\.]+)' },\n              { token: 'storage.modifier.extends.vala',\n                regex: ':',\n                push: \n                 [ { token: 'meta.definition.class.inherited.classes.vala',\n                     regex: '(?={|,)',\n                     next: 'pop' },\n                   { include: '#object-types-inherited' },\n                   { include: '#comments' },\n                   { defaultToken: 'meta.definition.class.inherited.classes.vala' } ] },\n              { token: \n                 [ 'storage.modifier.implements.vala',\n                   'meta.definition.class.implemented.interfaces.vala' ],\n                regex: '(,)(\\\\s)',\n                push: \n                 [ { token: 'meta.definition.class.implemented.interfaces.vala',\n                     regex: '(?=\\\\{)',\n                     next: 'pop' },\n                   { include: '#object-types-inherited' },\n                   { include: '#comments' },\n                   { defaultToken: 'meta.definition.class.implemented.interfaces.vala' } ] },\n              { token: 'paren.vala',\n                regex: '{',\n                push: \n                 [ { token: 'paren.vala', regex: '(?=})', next: 'pop' },\n                   { include: '#class-body' },\n                   { defaultToken: 'meta.class.body.vala' } ] },\n              { defaultToken: 'meta.class.vala' } ],\n           comment: 'attempting to put namespace in here.' } ],\n      '#class-body': \n       [ { include: '#comments' },\n         { include: '#class' },\n         { include: '#enums' },\n         { include: '#methods' },\n         { include: '#annotations' },\n         { include: '#storage-modifiers' },\n         { include: '#code' } ],\n      '#code': \n       [ { include: '#comments' },\n         { include: '#class' },\n         { token: 'text',\n           regex: '{',\n           push: \n            [ { token: 'text', regex: '}', next: 'pop' },\n              { include: '#code' } ] },\n         { include: '#assertions' },\n         { include: '#parens' },\n         { include: '#constants-and-special-vars' },\n         { include: '#anonymous-classes-and-new' },\n         { include: '#keywords' },\n         { include: '#storage-modifiers' },\n         { include: '#strings' },\n         { include: '#all-types' } ],\n      '#comments': \n       [ { token: 'punctuation.definition.comment.vala',\n           regex: '/\\\\*\\\\*/' },\n         { include: 'text.html.javadoc' },\n         { include: '#comments-inline' } ],\n      '#comments-inline': \n       [ { token: 'punctuation.definition.comment.vala',\n           regex: '/\\\\*',\n           push: \n            [ { token: 'punctuation.definition.comment.vala',\n                regex: '\\\\*/',\n                next: 'pop' },\n              { defaultToken: 'comment.block.vala' } ] },\n         { token: \n            [ 'text',\n              'punctuation.definition.comment.vala',\n              'comment.line.double-slash.vala' ],\n           regex: '(\\\\s*)(//)(.*$)' } ],\n      '#constants-and-special-vars': \n       [ { token: 'constant.language.vala',\n           regex: '\\\\b(?:true|false|null)\\\\b' },\n         { token: 'variable.language.vala',\n           regex: '\\\\b(?:this|base)\\\\b' },\n         { token: 'constant.numeric.vala',\n           regex: '\\\\b(?:0(?:x|X)[0-9a-fA-F]*|(?:[0-9]+\\\\.?[0-9]*|\\\\.[0-9]+)(?:(?:e|E)(?:\\\\+|-)?[0-9]+)?)(?:[LlFfUuDd]|UL|ul)?\\\\b' },\n         { token: [ 'keyword.operator.dereference.vala', 'constant.other.vala' ],\n           regex: '((?:\\\\.)?)\\\\b([A-Z][A-Z0-9_]+)(?!<|\\\\.class|\\\\s*\\\\w+\\\\s*=)\\\\b' } ],\n      '#enums': \n       [ { token: 'text',\n           regex: '^(?=\\\\s*[A-Z0-9_]+\\\\s*(?:{|\\\\(|,))',\n           push: \n            [ { token: 'text', regex: '(?=;|})', next: 'pop' },\n              { token: 'constant.other.enum.vala',\n                regex: '\\\\w+',\n                push: \n                 [ { token: 'meta.enum.vala', regex: '(?=,|;|})', next: 'pop' },\n                   { include: '#parens' },\n                   { token: 'text',\n                     regex: '{',\n                     push: \n                      [ { token: 'text', regex: '}', next: 'pop' },\n                        { include: '#class-body' } ] },\n                   { defaultToken: 'meta.enum.vala' } ] } ] } ],\n      '#keywords': \n       [ { token: 'keyword.control.catch-exception.vala',\n           regex: '\\\\b(?:try|catch|finally|throw)\\\\b' },\n         { token: 'keyword.control.vala', regex: '\\\\?|:|\\\\?\\\\?' },\n         { token: 'keyword.control.vala',\n           regex: '\\\\b(?:return|break|case|continue|default|do|while|for|foreach|switch|if|else|in|yield|get|set|value)\\\\b' },\n         { token: 'keyword.operator.vala',\n           regex: '\\\\b(?:typeof|is|as)\\\\b' },\n         { token: 'keyword.operator.comparison.vala',\n           regex: '==|!=|<=|>=|<>|<|>' },\n         { token: 'keyword.operator.assignment.vala', regex: '=' },\n         { token: 'keyword.operator.increment-decrement.vala',\n           regex: '\\\\-\\\\-|\\\\+\\\\+' },\n         { token: 'keyword.operator.arithmetic.vala',\n           regex: '\\\\-|\\\\+|\\\\*|\\\\/|%' },\n         { token: 'keyword.operator.logical.vala', regex: '!|&&|\\\\|\\\\|' },\n         { token: 'keyword.operator.dereference.vala',\n           regex: '\\\\.(?=\\\\S)',\n           originalRegex: '(?<=\\\\S)\\\\.(?=\\\\S)' },\n         { token: 'punctuation.terminator.vala', regex: ';' },\n         { token: 'keyword.operator.ownership', regex: 'owned|unowned' } ],\n      '#methods': \n       [ { token: 'meta.method.vala',\n           regex: '(?!new)(?=\\\\w.*\\\\s+)(?=[^=]+\\\\()',\n           push: \n            [ { token: 'paren.vala', regex: '}|(?=;)', next: 'pop' },\n              { include: '#storage-modifiers' },\n              { token: [ 'entity.name.function.vala', 'meta.method.identifier.vala' ],\n                regex: '([\\\\~\\\\w\\\\.]+)(\\\\s*\\\\()',\n                push: \n                 [ { token: 'meta.method.identifier.vala',\n                     regex: '\\\\)',\n                     next: 'pop' },\n                   { include: '#parameters' },\n                   { defaultToken: 'meta.method.identifier.vala' } ] },\n              { token: 'meta.method.return-type.vala',\n                regex: '(?=\\\\w.*\\\\s+\\\\w+\\\\s*\\\\()',\n                push: \n                 [ { token: 'meta.method.return-type.vala',\n                     regex: '(?=\\\\w+\\\\s*\\\\()',\n                     next: 'pop' },\n                   { include: '#all-types' },\n                   { defaultToken: 'meta.method.return-type.vala' } ] },\n              { include: '#throws' },\n              { token: 'paren.vala',\n                regex: '{',\n                push: \n                 [ { token: 'paren.vala', regex: '(?=})', next: 'pop' },\n                   { include: '#code' },\n                   { defaultToken: 'meta.method.body.vala' } ] },\n              { defaultToken: 'meta.method.vala' } ] } ],\n      '#namespace': \n       [ { token: 'text',\n           regex: '^(?=\\\\s*[A-Z0-9_]+\\\\s*(?:{|\\\\(|,))',\n           push: \n            [ { token: 'text', regex: '(?=;|})', next: 'pop' },\n              { token: 'constant.other.namespace.vala',\n                regex: '\\\\w+',\n                push: \n                 [ { token: 'meta.namespace.vala', regex: '(?=,|;|})', next: 'pop' },\n                   { include: '#parens' },\n                   { token: 'text',\n                     regex: '{',\n                     push: \n                      [ { token: 'text', regex: '}', next: 'pop' },\n                        { include: '#code' } ] },\n                   { defaultToken: 'meta.namespace.vala' } ] } ],\n           comment: 'This is not quite right. See the class grammar right now' } ],\n      '#object-types': \n       [ { token: 'storage.type.generic.vala',\n           regex: '\\\\b(?:[a-z]\\\\w*\\\\.)*[A-Z]+\\\\w*<',\n           push: \n            [ { token: 'storage.type.generic.vala',\n                regex: '>|[^\\\\w\\\\s,\\\\?<\\\\[()\\\\]]',\n                TODO: 'FIXME: regexp doesn\\'t have js equivalent',\n                originalRegex: '>|[^\\\\w\\\\s,\\\\?<\\\\[(?:[,]+)\\\\]]',\n                next: 'pop' },\n              { include: '#object-types' },\n              { token: 'storage.type.generic.vala',\n                regex: '<',\n                push: \n                 [ { token: 'storage.type.generic.vala',\n                     regex: '>|[^\\\\w\\\\s,\\\\[\\\\]<]',\n                     next: 'pop' },\n                   { defaultToken: 'storage.type.generic.vala' } ],\n                comment: 'This is just to support <>\\'s with no actual type prefix' },\n              { defaultToken: 'storage.type.generic.vala' } ] },\n         { token: 'storage.type.object.array.vala',\n           regex: '\\\\b(?:[a-z]\\\\w*\\\\.)*[A-Z]+\\\\w*(?=\\\\[)',\n           push: \n            [ { token: 'storage.type.object.array.vala',\n                regex: '(?=[^\\\\]\\\\s])',\n                next: 'pop' },\n              { token: 'text',\n                regex: '\\\\[',\n                push: \n                 [ { token: 'text', regex: '\\\\]', next: 'pop' },\n                   { include: '#code' } ] },\n              { defaultToken: 'storage.type.object.array.vala' } ] },\n         { token: \n            [ 'storage.type.vala',\n              'keyword.operator.dereference.vala',\n              'storage.type.vala' ],\n           regex: '\\\\b(?:([a-z]\\\\w*)(\\\\.))*([A-Z]+\\\\w*\\\\b)' } ],\n      '#object-types-inherited': \n       [ { token: 'entity.other.inherited-class.vala',\n           regex: '\\\\b(?:[a-z]\\\\w*\\\\.)*[A-Z]+\\\\w*<',\n           push: \n            [ { token: 'entity.other.inherited-class.vala',\n                regex: '>|[^\\\\w\\\\s,<]',\n                next: 'pop' },\n              { include: '#object-types' },\n              { token: 'storage.type.generic.vala',\n                regex: '<',\n                push: \n                 [ { token: 'storage.type.generic.vala',\n                     regex: '>|[^\\\\w\\\\s,<]',\n                     next: 'pop' },\n                   { defaultToken: 'storage.type.generic.vala' } ],\n                comment: 'This is just to support <>\\'s with no actual type prefix' },\n              { defaultToken: 'entity.other.inherited-class.vala' } ] },\n         { token: \n            [ 'entity.other.inherited-class.vala',\n              'keyword.operator.dereference.vala',\n              'entity.other.inherited-class.vala' ],\n           regex: '\\\\b(?:([a-z]\\\\w*)(\\\\.))*([A-Z]+\\\\w*)' } ],\n      '#parameters': \n       [ { token: 'storage.modifier.vala', regex: 'final' },\n         { include: '#primitive-arrays' },\n         { include: '#primitive-types' },\n         { include: '#object-types' },\n         { token: 'variable.parameter.vala', regex: '\\\\w+' } ],\n      '#parens': \n       [ { token: 'text',\n           regex: '\\\\(',\n           push: \n            [ { token: 'text', regex: '\\\\)', next: 'pop' },\n              { include: '#code' } ] } ],\n      '#primitive-arrays': \n       [ { token: 'storage.type.primitive.array.vala',\n           regex: '\\\\b(?:bool|byte|sbyte|char|decimal|double|float|int|uint|long|ulong|object|short|ushort|string|void|int8|int16|int32|int64|uint8|uint16|uint32|uint64)(?:\\\\[\\\\])*\\\\b' } ],\n      '#primitive-types': \n       [ { token: 'storage.type.primitive.vala',\n           regex: '\\\\b(?:var|bool|byte|sbyte|char|decimal|double|float|int|uint|long|ulong|object|short|ushort|string|void|signal|int8|int16|int32|int64|uint8|uint16|uint32|uint64)\\\\b',\n           comment: 'var is not really a primitive, but acts like one in most cases' } ],\n      '#storage-modifiers': \n       [ { token: 'storage.modifier.vala',\n           regex: '\\\\b(?:public|private|protected|internal|static|final|sealed|virtual|override|abstract|readonly|volatile|dynamic|async|unsafe|out|ref|weak|owned|unowned|const)\\\\b',\n           comment: 'Not sure about unsafe and readonly' } ],\n      '#strings': \n       [ { token: 'punctuation.definition.string.begin.vala',\n           regex: '@\"',\n           push: \n            [ { token: 'punctuation.definition.string.end.vala',\n                regex: '\"',\n                next: 'pop' },\n              { token: 'constant.character.escape.vala',\n                regex: '\\\\\\\\.|%[\\\\w\\\\.\\\\-]+|\\\\$(?:\\\\w+|\\\\([\\\\w\\\\s\\\\+\\\\-\\\\*\\\\/]+\\\\))' },\n              { defaultToken: 'string.quoted.interpolated.vala' } ] },\n         { token: 'punctuation.definition.string.begin.vala',\n           regex: '\"',\n           push: \n            [ { token: 'punctuation.definition.string.end.vala',\n                regex: '\"',\n                next: 'pop' },\n              { token: 'constant.character.escape.vala', regex: '\\\\\\\\.' },\n              { token: 'constant.character.escape.vala',\n                regex: '%[\\\\w\\\\.\\\\-]+' },\n              { defaultToken: 'string.quoted.double.vala' } ] },\n         { token: 'punctuation.definition.string.begin.vala',\n           regex: '\\'',\n           push: \n            [ { token: 'punctuation.definition.string.end.vala',\n                regex: '\\'',\n                next: 'pop' },\n              { token: 'constant.character.escape.vala', regex: '\\\\\\\\.' },\n              { defaultToken: 'string.quoted.single.vala' } ] },\n         { token: 'punctuation.definition.string.begin.vala',\n           regex: '\"\"\"',\n           push: \n            [ { token: 'punctuation.definition.string.end.vala',\n                regex: '\"\"\"',\n                next: 'pop' },\n              { token: 'constant.character.escape.vala',\n                regex: '%[\\\\w\\\\.\\\\-]+' },\n              { defaultToken: 'string.quoted.triple.vala' } ] } ],\n      '#throws': \n       [ { token: 'storage.modifier.vala',\n           regex: 'throws',\n           push: \n            [ { token: 'meta.throwables.vala', regex: '(?={|;)', next: 'pop' },\n              { include: '#object-types' },\n              { defaultToken: 'meta.throwables.vala' } ] } ],\n      '#values': \n       [ { include: '#strings' },\n         { include: '#object-types' },\n         { include: '#constants-and-special-vars' } ] }\n    \n    this.normalizeRules();\n};\n\nValaHighlightRules.metaData = { \n    comment: 'Based heavily on the Java bundle\\'s language syntax. TODO:\\n* Closures\\n* Delegates\\n* Properties: Better support for properties.\\n* Annotations\\n* Error domains\\n* Named arguments\\n* Array slicing, negative indexes, multidimensional\\n* construct blocks\\n* lock blocks?\\n* regex literals\\n* DocBlock syntax highlighting. (Currently importing javadoc)\\n* Folding rule for comments.\\n',\n      fileTypes: [ 'vala' ],\n      foldingStartMarker: '(\\\\{\\\\s*(//.*)?$|^\\\\s*// \\\\{\\\\{\\\\{)',\n      foldingStopMarker: '^\\\\s*(\\\\}|// \\\\}\\\\}\\\\}$)',\n      name: 'Vala',\n      scopeName: 'source.vala' }\n\n\noop.inherits(ValaHighlightRules, TextHighlightRules);\n\nexports.ValaHighlightRules = ValaHighlightRules;\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar Range = acequire(\"../../range\").Range;\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    \n    this.foldingStartMarker = /(\\{|\\[)[^\\}\\]]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{]*(\\}|\\])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n    \n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n    \n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n    \n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n    \n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        \n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        \n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n                \n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            \n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n            \n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    \n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            \n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        \n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar Range = acequire(\"../range\").Range;\n\nvar MatchingBraceOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        return line.match(/^\\s*/)[0];\n    };\n\n}).call(MatchingBraceOutdent.prototype);\n\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\n\nace.define(\"ace/mode/vala\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/tokenizer\",\"ace/mode/vala_highlight_rules\",\"ace/mode/folding/cstyle\",\"ace/mode/behaviour/cstyle\",\"ace/mode/folding/cstyle\",\"ace/mode/matching_brace_outdent\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar Tokenizer = acequire(\"../tokenizer\").Tokenizer;\nvar ValaHighlightRules = acequire(\"./vala_highlight_rules\").ValaHighlightRules;\nvar FoldMode = acequire(\"./folding/cstyle\").FoldMode;\nvar CstyleBehaviour = acequire(\"./behaviour/cstyle\").CstyleBehaviour;\nvar CStyleFoldMode = acequire(\"./folding/cstyle\").FoldMode;\nvar MatchingBraceOutdent = acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;\n\nvar Mode = function() {\n    this.HighlightRules = ValaHighlightRules;\n    \n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = new CstyleBehaviour();\n    this.foldingRules = new CStyleFoldMode();\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.lineCommentStart = \"//\";\n    this.blockComment = {start: \"/*\", end: \"*/\"};\n\n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n        var endState = tokenizedLine.state;\n\n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\n            return indent;\n        }\n\n        if (state == \"start\" || state == \"no_regex\") {\n            var match = line.match(/^.*(?:\\bcase\\b.*:|[\\{\\(\\[])\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        } else if (state == \"doc-start\") {\n            if (endState == \"start\" || endState == \"no_regex\") {\n                return \"\";\n            }\n            var match = line.match(/^\\s*(\\/?)\\*/);\n            if (match) {\n                if (match[1]) {\n                    indent += \" \";\n                }\n                indent += \"* \";\n            }\n        }\n\n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n    this.$id = \"ace/mode/vala\"\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n\n\n\n// WEBPACK FOOTER //\n// /Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/vala.js"],"sourceRoot":""}