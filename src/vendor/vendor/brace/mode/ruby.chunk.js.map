{"version":3,"sources":["webpack:///vendor/brace/mode/ruby.chunk.js","webpack:////Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/ruby.js"],"names":["webpackJsonppanneau","445","module","exports","ace","define","acequire","oop","TextHighlightRules","constantOtherSymbol","token","regex","constantNumericHex","qString","qqString","tString","constantNumericFloat","RubyHighlightRules","keywordMapper","this","$keywords","createKeywordMapper","keyword","constant.language","variable.language","support.function","invalid.deprecated","$rules","start","next","onMatch","val","state","stack","nextState","length","unshift","shift","indexOf","push","defaultToken","stateName","value","currentState","tokens","split","splitRegex","type","rules","heredoc","indentedHeredoc","comment","normalizeRules","inherits","Range","MatchingBraceOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","getLine","match","column","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","BaseFoldMode","FoldMode","getFoldWidgetRange","session","foldStyle","range","indentationBlock","re","startLevel","search","startColumn","maxRow","getLength","startRow","endRow","level","endColumn","getFoldWidget","prev","prevIndent","nextIndent","foldWidgets","TextMode","Mode","CstyleBehaviour","HighlightRules","$outdent","$behaviour","foldingRules","lineCommentStart","getNextLineIndent","tab","tokenizedLine","getTokenizer","getLineTokens","startingClassOrMethod","startingDoBlock","startingConditional","prevLine","getTabString","slice","remove","$id"],"mappings":"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","file":"vendor/brace/mode/ruby.chunk.js","sourcesContent":["webpackJsonppanneau([136],{\n\n/***/ 445:\n/***/ (function(module, exports) {\n\nace.define(\"ace/mode/ruby_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextHighlightRules=acequire(\"./text_highlight_rules\").TextHighlightRules;var constantOtherSymbol=exports.constantOtherSymbol={token:\"constant.other.symbol.ruby\",// symbol\nregex:\"[:](?:[A-Za-z_]|[@$](?=[a-zA-Z0-9_]))[a-zA-Z0-9_]*[!=?]?\"};var qString=exports.qString={token:\"string\",// single line\nregex:\"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"};var qqString=exports.qqString={token:\"string\",// single line\nregex:'[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'};var tString=exports.tString={token:\"string\",// backtick string\nregex:\"[`](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[`]\"};var constantNumericHex=exports.constantNumericHex={token:\"constant.numeric\",// hex\nregex:\"0[xX][0-9a-fA-F](?:[0-9a-fA-F]|_(?=[0-9a-fA-F]))*\\\\b\"};var constantNumericFloat=exports.constantNumericFloat={token:\"constant.numeric\",// float\nregex:\"[+-]?\\\\d(?:\\\\d|_(?=\\\\d))*(?:(?:\\\\.\\\\d(?:\\\\d|_(?=\\\\d))*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"};var RubyHighlightRules=function RubyHighlightRules(){var builtinFunctions=\"abort|Array|assert|assert_equal|assert_not_equal|assert_same|assert_not_same|\"+\"assert_nil|assert_not_nil|assert_match|assert_no_match|assert_in_delta|assert_throws|\"+\"assert_raise|assert_nothing_raised|assert_instance_of|assert_kind_of|assert_respond_to|\"+\"assert_operator|assert_send|assert_difference|assert_no_difference|assert_recognizes|\"+\"assert_generates|assert_response|assert_redirected_to|assert_template|assert_select|\"+\"assert_select_email|assert_select_rjs|assert_select_encoded|css_select|at_exit|\"+\"attr|attr_writer|attr_reader|attr_accessor|attr_accessible|autoload|binding|block_given?|callcc|\"+\"caller|catch|chomp|chomp!|chop|chop!|defined?|delete_via_redirect|eval|exec|exit|\"+\"exit!|fail|Float|flunk|follow_redirect!|fork|form_for|form_tag|format|gets|global_variables|gsub|\"+\"gsub!|get_via_redirect|host!|https?|https!|include|Integer|lambda|link_to|\"+\"link_to_unless_current|link_to_function|link_to_remote|load|local_variables|loop|open|open_session|\"+\"p|print|printf|proc|putc|puts|post_via_redirect|put_via_redirect|raise|rand|\"+\"raw|readline|readlines|redirect?|request_via_redirect|acequire|scan|select|\"+\"set_trace_func|sleep|split|sprintf|srand|String|stylesheet_link_tag|syscall|system|sub|sub!|test|\"+\"throw|trace_var|trap|untrace_var|atan2|cos|exp|frexp|ldexp|log|log10|sin|sqrt|tan|\"+\"render|javascript_include_tag|csrf_meta_tag|label_tag|text_field_tag|submit_tag|check_box_tag|\"+\"content_tag|radio_button_tag|text_area_tag|password_field_tag|hidden_field_tag|\"+\"fields_for|select_tag|options_for_select|options_from_collection_for_select|collection_select|\"+\"time_zone_select|select_date|select_time|select_datetime|date_select|time_select|datetime_select|\"+\"select_year|select_month|select_day|select_hour|select_minute|select_second|file_field_tag|\"+\"file_field|respond_to|skip_before_filter|around_filter|after_filter|verify|\"+\"protect_from_forgery|rescue_from|helper_method|redirect_to|before_filter|\"+\"send_data|send_file|validates_presence_of|validates_uniqueness_of|validates_length_of|\"+\"validates_format_of|validates_acceptance_of|validates_associated|validates_exclusion_of|\"+\"validates_inclusion_of|validates_numericality_of|validates_with|validates_each|\"+\"authenticate_or_request_with_http_basic|authenticate_or_request_with_http_digest|\"+\"filter_parameter_logging|match|get|post|resources|redirect|scope|assert_routing|\"+\"translate|localize|extract_locale_from_tld|caches_page|expire_page|caches_action|expire_action|\"+\"cache|expire_fragment|expire_cache_for|observe|cache_sweeper|\"+\"has_many|has_one|belongs_to|has_and_belongs_to_many\";var keywords=\"alias|and|BEGIN|begin|break|case|class|def|defined|do|else|elsif|END|end|ensure|\"+\"__FILE__|finally|for|gem|if|in|__LINE__|module|next|not|or|private|protected|public|\"+\"redo|rescue|retry|return|super|then|undef|unless|until|when|while|yield\";var buildinConstants=\"true|TRUE|false|FALSE|nil|NIL|ARGF|ARGV|DATA|ENV|RUBY_PLATFORM|RUBY_RELEASE_DATE|\"+\"RUBY_VERSION|STDERR|STDIN|STDOUT|TOPLEVEL_BINDING\";var builtinVariables=\"$DEBUG|$defout|$FILENAME|$LOAD_PATH|$SAFE|$stdin|$stdout|$stderr|$VERBOSE|\"+\"$!|root_url|flash|session|cookies|params|request|response|logger|self\";var keywordMapper=this.$keywords=this.createKeywordMapper({\"keyword\":keywords,\"constant.language\":buildinConstants,\"variable.language\":builtinVariables,\"support.function\":builtinFunctions,\"invalid.deprecated\":\"debugger\"// TODO is this a remnant from js mode?\n},\"identifier\");this.$rules={\"start\":[{token:\"comment\",regex:\"#.*$\"},{token:\"comment\",// multi line comment\nregex:\"^=begin(?:$|\\\\s.*$)\",next:\"comment\"},{token:\"string.regexp\",regex:\"[/](?:(?:\\\\[(?:\\\\\\\\]|[^\\\\]])+\\\\])|(?:\\\\\\\\/|[^\\\\]/]))*[/]\\\\w*\\\\s*(?=[).,;]|$)\"},[{regex:\"[{}]\",onMatch:function onMatch(val,state,stack){this.next=val==\"{\"?this.nextState:\"\";if(val==\"{\"&&stack.length){stack.unshift(\"start\",state);return\"paren.lparen\";}if(val==\"}\"&&stack.length){stack.shift();this.next=stack.shift();if(this.next.indexOf(\"string\")!=-1)return\"paren.end\";}return val==\"{\"?\"paren.lparen\":\"paren.rparen\";},nextState:\"start\"},{token:\"string.start\",regex:/\"/,push:[{token:\"constant.language.escape\",regex:/\\\\(?:[nsrtvfbae'\"\\\\]|c.|C-.|M-.(?:\\\\C-.)?|[0-7]{3}|x[\\da-fA-F]{2}|u[\\da-fA-F]{4})/},{token:\"paren.start\",regex:/#{/,push:\"start\"},{token:\"string.end\",regex:/\"/,next:\"pop\"},{defaultToken:\"string\"}]},{token:\"string.start\",regex:/`/,push:[{token:\"constant.language.escape\",regex:/\\\\(?:[nsrtvfbae'\"\\\\]|c.|C-.|M-.(?:\\\\C-.)?|[0-7]{3}|x[\\da-fA-F]{2}|u[\\da-fA-F]{4})/},{token:\"paren.start\",regex:/#{/,push:\"start\"},{token:\"string.end\",regex:/`/,next:\"pop\"},{defaultToken:\"string\"}]},{token:\"string.start\",regex:/'/,push:[{token:\"constant.language.escape\",regex:/\\\\['\\\\]/},{token:\"string.end\",regex:/'/,next:\"pop\"},{defaultToken:\"string\"}]}],{token:\"text\",// namespaces aren't symbols\nregex:\"::\"},{token:\"variable.instance\",// instance variable\nregex:\"@{1,2}[a-zA-Z_\\\\d]+\"},{token:\"support.class\",// class name\nregex:\"[A-Z][a-zA-Z_\\\\d]+\"},constantOtherSymbol,constantNumericHex,constantNumericFloat,{token:\"constant.language.boolean\",regex:\"(?:true|false)\\\\b\"},{token:keywordMapper,regex:\"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"},{token:\"punctuation.separator.key-value\",regex:\"=>\"},{stateName:\"heredoc\",onMatch:function onMatch(value,currentState,stack){var next=value[2]=='-'?\"indentedHeredoc\":\"heredoc\";var tokens=value.split(this.splitRegex);stack.push(next,tokens[3]);return[{type:\"constant\",value:tokens[1]},{type:\"string\",value:tokens[2]},{type:\"support.class\",value:tokens[3]},{type:\"string\",value:tokens[4]}];},regex:\"(<<-?)(['\\\"`]?)([\\\\w]+)(['\\\"`]?)\",rules:{heredoc:[{onMatch:function onMatch(value,currentState,stack){if(value===stack[1]){stack.shift();stack.shift();this.next=stack[0]||\"start\";return\"support.class\";}this.next=\"\";return\"string\";},regex:\".*$\",next:\"start\"}],indentedHeredoc:[{token:\"string\",regex:\"^ +\"},{onMatch:function onMatch(value,currentState,stack){if(value===stack[1]){stack.shift();stack.shift();this.next=stack[0]||\"start\";return\"support.class\";}this.next=\"\";return\"string\";},regex:\".*$\",next:\"start\"}]}},{regex:\"$\",token:\"empty\",next:function next(currentState,stack){if(stack[0]===\"heredoc\"||stack[0]===\"indentedHeredoc\")return stack[0];return currentState;}},{token:\"string.character\",regex:\"\\\\B\\\\?.\"},{token:\"keyword.operator\",regex:\"!|\\\\$|%|&|\\\\*|\\\\-\\\\-|\\\\-|\\\\+\\\\+|\\\\+|~|===|==|=|!=|!==|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\\\|\\\\||\\\\?\\\\:|\\\\*=|%=|\\\\+=|\\\\-=|&=|\\\\^=|\\\\b(?:in|instanceof|new|delete|typeof|void)\"},{token:\"paren.lparen\",regex:\"[[({]\"},{token:\"paren.rparen\",regex:\"[\\\\])}]\"},{token:\"text\",regex:\"\\\\s+\"}],\"comment\":[{token:\"comment\",// closing comment\nregex:\"^=end(?:$|\\\\s.*$)\",next:\"start\"},{token:\"comment\",// comment spanning whole line\nregex:\".+\"}]};this.normalizeRules();};oop.inherits(RubyHighlightRules,TextHighlightRules);exports.RubyHighlightRules=RubyHighlightRules;});ace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"],function(acequire,exports,module){\"use strict\";var Range=acequire(\"../range\").Range;var MatchingBraceOutdent=function MatchingBraceOutdent(){};(function(){this.checkOutdent=function(line,input){if(!/^\\s+$/.test(line))return false;return /^\\s*\\}/.test(input);};this.autoOutdent=function(doc,row){var line=doc.getLine(row);var match=line.match(/^(\\s*\\})/);if(!match)return 0;var column=match[1].length;var openBracePos=doc.findMatchingBracket({row:row,column:column});if(!openBracePos||openBracePos.row==row)return 0;var indent=this.$getIndent(doc.getLine(openBracePos.row));doc.replace(new Range(row,0,row,column-1),indent);};this.$getIndent=function(line){return line.match(/^\\s*/)[0];};}).call(MatchingBraceOutdent.prototype);exports.MatchingBraceOutdent=MatchingBraceOutdent;});ace.define(\"ace/mode/folding/coffee\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../../lib/oop\");var BaseFoldMode=acequire(\"./fold_mode\").FoldMode;var Range=acequire(\"../../range\").Range;var FoldMode=exports.FoldMode=function(){};oop.inherits(FoldMode,BaseFoldMode);(function(){this.getFoldWidgetRange=function(session,foldStyle,row){var range=this.indentationBlock(session,row);if(range)return range;var re=/\\S/;var line=session.getLine(row);var startLevel=line.search(re);if(startLevel==-1||line[startLevel]!=\"#\")return;var startColumn=line.length;var maxRow=session.getLength();var startRow=row;var endRow=row;while(++row<maxRow){line=session.getLine(row);var level=line.search(re);if(level==-1)continue;if(line[level]!=\"#\")break;endRow=row;}if(endRow>startRow){var endColumn=session.getLine(endRow).length;return new Range(startRow,startColumn,endRow,endColumn);}};this.getFoldWidget=function(session,foldStyle,row){var line=session.getLine(row);var indent=line.search(/\\S/);var next=session.getLine(row+1);var prev=session.getLine(row-1);var prevIndent=prev.search(/\\S/);var nextIndent=next.search(/\\S/);if(indent==-1){session.foldWidgets[row-1]=prevIndent!=-1&&prevIndent<nextIndent?\"start\":\"\";return\"\";}if(prevIndent==-1){if(indent==nextIndent&&line[indent]==\"#\"&&next[indent]==\"#\"){session.foldWidgets[row-1]=\"\";session.foldWidgets[row+1]=\"\";return\"start\";}}else if(prevIndent==indent&&line[indent]==\"#\"&&prev[indent]==\"#\"){if(session.getLine(row-2).search(/\\S/)==-1){session.foldWidgets[row-1]=\"start\";session.foldWidgets[row+1]=\"\";return\"\";}}if(prevIndent!=-1&&prevIndent<indent)session.foldWidgets[row-1]=\"start\";else session.foldWidgets[row-1]=\"\";if(indent<nextIndent)return\"start\";else return\"\";};}).call(FoldMode.prototype);});ace.define(\"ace/mode/ruby\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/ruby_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/range\",\"ace/mode/behaviour/cstyle\",\"ace/mode/folding/coffee\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextMode=acequire(\"./text\").Mode;var RubyHighlightRules=acequire(\"./ruby_highlight_rules\").RubyHighlightRules;var MatchingBraceOutdent=acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;var Range=acequire(\"../range\").Range;var CstyleBehaviour=acequire(\"./behaviour/cstyle\").CstyleBehaviour;var FoldMode=acequire(\"./folding/coffee\").FoldMode;var Mode=function Mode(){this.HighlightRules=RubyHighlightRules;this.$outdent=new MatchingBraceOutdent();this.$behaviour=new CstyleBehaviour();this.foldingRules=new FoldMode();};oop.inherits(Mode,TextMode);(function(){this.lineCommentStart=\"#\";this.getNextLineIndent=function(state,line,tab){var indent=this.$getIndent(line);var tokenizedLine=this.getTokenizer().getLineTokens(line,state);var tokens=tokenizedLine.tokens;if(tokens.length&&tokens[tokens.length-1].type==\"comment\"){return indent;}if(state==\"start\"){var match=line.match(/^.*[\\{\\(\\[]\\s*$/);var startingClassOrMethod=line.match(/^\\s*(class|def|module)\\s.*$/);var startingDoBlock=line.match(/.*do(\\s*|\\s+\\|.*\\|\\s*)$/);var startingConditional=line.match(/^\\s*(if|else|when)\\s*/);if(match||startingClassOrMethod||startingDoBlock||startingConditional){indent+=tab;}}return indent;};this.checkOutdent=function(state,line,input){return /^\\s+(end|else)$/.test(line+input)||this.$outdent.checkOutdent(line,input);};this.autoOutdent=function(state,session,row){var line=session.getLine(row);if(/}/.test(line))return this.$outdent.autoOutdent(session,row);var indent=this.$getIndent(line);var prevLine=session.getLine(row-1);var prevIndent=this.$getIndent(prevLine);var tab=session.getTabString();if(prevIndent.length<=indent.length){if(indent.slice(-tab.length)==tab)session.remove(new Range(row,indent.length-tab.length,row,indent.length));}};this.$id=\"ace/mode/ruby\";}).call(Mode.prototype);exports.Mode=Mode;});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// vendor/brace/mode/ruby.chunk.js","ace.define(\"ace/mode/ruby_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\nvar constantOtherSymbol = exports.constantOtherSymbol = {\n    token : \"constant.other.symbol.ruby\", // symbol\n    regex : \"[:](?:[A-Za-z_]|[@$](?=[a-zA-Z0-9_]))[a-zA-Z0-9_]*[!=?]?\"\n};\n\nvar qString = exports.qString = {\n    token : \"string\", // single line\n    regex : \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n};\n\nvar qqString = exports.qqString = {\n    token : \"string\", // single line\n    regex : '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n};\n\nvar tString = exports.tString = {\n    token : \"string\", // backtick string\n    regex : \"[`](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[`]\"\n};\n\nvar constantNumericHex = exports.constantNumericHex = {\n    token : \"constant.numeric\", // hex\n    regex : \"0[xX][0-9a-fA-F](?:[0-9a-fA-F]|_(?=[0-9a-fA-F]))*\\\\b\"\n};\n\nvar constantNumericFloat = exports.constantNumericFloat = {\n    token : \"constant.numeric\", // float\n    regex : \"[+-]?\\\\d(?:\\\\d|_(?=\\\\d))*(?:(?:\\\\.\\\\d(?:\\\\d|_(?=\\\\d))*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n};\n\nvar RubyHighlightRules = function() {\n\n    var builtinFunctions = (\n        \"abort|Array|assert|assert_equal|assert_not_equal|assert_same|assert_not_same|\" +\n        \"assert_nil|assert_not_nil|assert_match|assert_no_match|assert_in_delta|assert_throws|\" +\n        \"assert_raise|assert_nothing_raised|assert_instance_of|assert_kind_of|assert_respond_to|\" +\n        \"assert_operator|assert_send|assert_difference|assert_no_difference|assert_recognizes|\" +\n        \"assert_generates|assert_response|assert_redirected_to|assert_template|assert_select|\" +\n        \"assert_select_email|assert_select_rjs|assert_select_encoded|css_select|at_exit|\" +\n        \"attr|attr_writer|attr_reader|attr_accessor|attr_accessible|autoload|binding|block_given?|callcc|\" +\n        \"caller|catch|chomp|chomp!|chop|chop!|defined?|delete_via_redirect|eval|exec|exit|\" +\n        \"exit!|fail|Float|flunk|follow_redirect!|fork|form_for|form_tag|format|gets|global_variables|gsub|\" +\n        \"gsub!|get_via_redirect|host!|https?|https!|include|Integer|lambda|link_to|\" +\n        \"link_to_unless_current|link_to_function|link_to_remote|load|local_variables|loop|open|open_session|\" +\n        \"p|print|printf|proc|putc|puts|post_via_redirect|put_via_redirect|raise|rand|\" +\n        \"raw|readline|readlines|redirect?|request_via_redirect|acequire|scan|select|\" +\n        \"set_trace_func|sleep|split|sprintf|srand|String|stylesheet_link_tag|syscall|system|sub|sub!|test|\" +\n        \"throw|trace_var|trap|untrace_var|atan2|cos|exp|frexp|ldexp|log|log10|sin|sqrt|tan|\" +\n        \"render|javascript_include_tag|csrf_meta_tag|label_tag|text_field_tag|submit_tag|check_box_tag|\" +\n        \"content_tag|radio_button_tag|text_area_tag|password_field_tag|hidden_field_tag|\" +\n        \"fields_for|select_tag|options_for_select|options_from_collection_for_select|collection_select|\" +\n        \"time_zone_select|select_date|select_time|select_datetime|date_select|time_select|datetime_select|\" +\n        \"select_year|select_month|select_day|select_hour|select_minute|select_second|file_field_tag|\" +\n        \"file_field|respond_to|skip_before_filter|around_filter|after_filter|verify|\" +\n        \"protect_from_forgery|rescue_from|helper_method|redirect_to|before_filter|\" +\n        \"send_data|send_file|validates_presence_of|validates_uniqueness_of|validates_length_of|\" +\n        \"validates_format_of|validates_acceptance_of|validates_associated|validates_exclusion_of|\" +\n        \"validates_inclusion_of|validates_numericality_of|validates_with|validates_each|\" +\n        \"authenticate_or_request_with_http_basic|authenticate_or_request_with_http_digest|\" +\n        \"filter_parameter_logging|match|get|post|resources|redirect|scope|assert_routing|\" +\n        \"translate|localize|extract_locale_from_tld|caches_page|expire_page|caches_action|expire_action|\" +\n        \"cache|expire_fragment|expire_cache_for|observe|cache_sweeper|\" +\n        \"has_many|has_one|belongs_to|has_and_belongs_to_many\"\n    );\n\n    var keywords = (\n        \"alias|and|BEGIN|begin|break|case|class|def|defined|do|else|elsif|END|end|ensure|\" +\n        \"__FILE__|finally|for|gem|if|in|__LINE__|module|next|not|or|private|protected|public|\" +\n        \"redo|rescue|retry|return|super|then|undef|unless|until|when|while|yield\"\n    );\n\n    var buildinConstants = (\n        \"true|TRUE|false|FALSE|nil|NIL|ARGF|ARGV|DATA|ENV|RUBY_PLATFORM|RUBY_RELEASE_DATE|\" +\n        \"RUBY_VERSION|STDERR|STDIN|STDOUT|TOPLEVEL_BINDING\"\n    );\n\n    var builtinVariables = (\n        \"$DEBUG|$defout|$FILENAME|$LOAD_PATH|$SAFE|$stdin|$stdout|$stderr|$VERBOSE|\" +\n        \"$!|root_url|flash|session|cookies|params|request|response|logger|self\"\n    );\n\n    var keywordMapper = this.$keywords = this.createKeywordMapper({\n        \"keyword\": keywords,\n        \"constant.language\": buildinConstants,\n        \"variable.language\": builtinVariables,\n        \"support.function\": builtinFunctions,\n        \"invalid.deprecated\": \"debugger\" // TODO is this a remnant from js mode?\n    }, \"identifier\");\n\n    this.$rules = {\n        \"start\" : [\n            {\n                token : \"comment\",\n                regex : \"#.*$\"\n            }, {\n                token : \"comment\", // multi line comment\n                regex : \"^=begin(?:$|\\\\s.*$)\",\n                next : \"comment\"\n            }, {\n                token : \"string.regexp\",\n                regex : \"[/](?:(?:\\\\[(?:\\\\\\\\]|[^\\\\]])+\\\\])|(?:\\\\\\\\/|[^\\\\]/]))*[/]\\\\w*\\\\s*(?=[).,;]|$)\"\n            },\n\n            [{\n                regex: \"[{}]\", onMatch: function(val, state, stack) {\n                    this.next = val == \"{\" ? this.nextState : \"\";\n                    if (val == \"{\" && stack.length) {\n                        stack.unshift(\"start\", state);\n                        return \"paren.lparen\";\n                    }\n                    if (val == \"}\" && stack.length) {\n                        stack.shift();\n                        this.next = stack.shift();\n                        if (this.next.indexOf(\"string\") != -1)\n                            return \"paren.end\";\n                    }\n                    return val == \"{\" ? \"paren.lparen\" : \"paren.rparen\";\n                },\n                nextState: \"start\"\n            }, {\n                token : \"string.start\",\n                regex : /\"/,\n                push  : [{\n                    token : \"constant.language.escape\",\n                    regex : /\\\\(?:[nsrtvfbae'\"\\\\]|c.|C-.|M-.(?:\\\\C-.)?|[0-7]{3}|x[\\da-fA-F]{2}|u[\\da-fA-F]{4})/\n                }, {\n                    token : \"paren.start\",\n                    regex : /#{/,\n                    push  : \"start\"\n                }, {\n                    token : \"string.end\",\n                    regex : /\"/,\n                    next  : \"pop\"\n                }, {\n                    defaultToken: \"string\"\n                }]\n            }, {\n                token : \"string.start\",\n                regex : /`/,\n                push  : [{\n                    token : \"constant.language.escape\",\n                    regex : /\\\\(?:[nsrtvfbae'\"\\\\]|c.|C-.|M-.(?:\\\\C-.)?|[0-7]{3}|x[\\da-fA-F]{2}|u[\\da-fA-F]{4})/\n                }, {\n                    token : \"paren.start\",\n                    regex : /#{/,\n                    push  : \"start\"\n                }, {\n                    token : \"string.end\",\n                    regex : /`/,\n                    next  : \"pop\"\n                }, {\n                    defaultToken: \"string\"\n                }]\n            }, {\n                token : \"string.start\",\n                regex : /'/,\n                push  : [{\n                    token : \"constant.language.escape\",\n                    regex : /\\\\['\\\\]/\n                },  {\n                    token : \"string.end\",\n                    regex : /'/,\n                    next  : \"pop\"\n                }, {\n                    defaultToken: \"string\"\n                }]\n            }],\n\n            {\n                token : \"text\", // namespaces aren't symbols\n                regex : \"::\"\n            }, {\n                token : \"variable.instance\", // instance variable\n                regex : \"@{1,2}[a-zA-Z_\\\\d]+\"\n            }, {\n                token : \"support.class\", // class name\n                regex : \"[A-Z][a-zA-Z_\\\\d]+\"\n            },\n\n            constantOtherSymbol,\n            constantNumericHex,\n            constantNumericFloat,\n\n            {\n                token : \"constant.language.boolean\",\n                regex : \"(?:true|false)\\\\b\"\n            }, {\n                token : keywordMapper,\n                regex : \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n            }, {\n                token : \"punctuation.separator.key-value\",\n                regex : \"=>\"\n            }, {\n                stateName: \"heredoc\",\n                onMatch : function(value, currentState, stack) {\n                    var next = value[2] == '-' ? \"indentedHeredoc\" : \"heredoc\";\n                    var tokens = value.split(this.splitRegex);\n                    stack.push(next, tokens[3]);\n                    return [\n                        {type:\"constant\", value: tokens[1]},\n                        {type:\"string\", value: tokens[2]},\n                        {type:\"support.class\", value: tokens[3]},\n                        {type:\"string\", value: tokens[4]}\n                    ];\n                },\n                regex : \"(<<-?)(['\\\"`]?)([\\\\w]+)(['\\\"`]?)\",\n                rules: {\n                    heredoc: [{\n                        onMatch:  function(value, currentState, stack) {\n                            if (value === stack[1]) {\n                                stack.shift();\n                                stack.shift();\n                                this.next = stack[0] || \"start\";\n                                return \"support.class\";\n                            }\n                            this.next = \"\";\n                            return \"string\";\n                        },\n                        regex: \".*$\",\n                        next: \"start\"\n                    }],\n                    indentedHeredoc: [{\n                        token: \"string\",\n                        regex: \"^ +\"\n                    }, {\n                        onMatch:  function(value, currentState, stack) {\n                            if (value === stack[1]) {\n                                stack.shift();\n                                stack.shift();\n                                this.next = stack[0] || \"start\";\n                                return \"support.class\";\n                            }\n                            this.next = \"\";\n                            return \"string\";\n                        },\n                        regex: \".*$\",\n                        next: \"start\"\n                    }]\n                }\n            }, {\n                regex : \"$\",\n                token : \"empty\",\n                next : function(currentState, stack) {\n                    if (stack[0] === \"heredoc\" || stack[0] === \"indentedHeredoc\")\n                        return stack[0];\n                    return currentState;\n                }\n            }, {\n               token : \"string.character\",\n               regex : \"\\\\B\\\\?.\"\n            }, {\n                token : \"keyword.operator\",\n                regex : \"!|\\\\$|%|&|\\\\*|\\\\-\\\\-|\\\\-|\\\\+\\\\+|\\\\+|~|===|==|=|!=|!==|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\\\|\\\\||\\\\?\\\\:|\\\\*=|%=|\\\\+=|\\\\-=|&=|\\\\^=|\\\\b(?:in|instanceof|new|delete|typeof|void)\"\n            }, {\n                token : \"paren.lparen\",\n                regex : \"[[({]\"\n            }, {\n                token : \"paren.rparen\",\n                regex : \"[\\\\])}]\"\n            }, {\n                token : \"text\",\n                regex : \"\\\\s+\"\n            }\n        ],\n        \"comment\" : [\n            {\n                token : \"comment\", // closing comment\n                regex : \"^=end(?:$|\\\\s.*$)\",\n                next : \"start\"\n            }, {\n                token : \"comment\", // comment spanning whole line\n                regex : \".+\"\n            }\n        ]\n    };\n\n    this.normalizeRules();\n};\n\noop.inherits(RubyHighlightRules, TextHighlightRules);\n\nexports.RubyHighlightRules = RubyHighlightRules;\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar Range = acequire(\"../range\").Range;\n\nvar MatchingBraceOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        return line.match(/^\\s*/)[0];\n    };\n\n}).call(MatchingBraceOutdent.prototype);\n\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\n\nace.define(\"ace/mode/folding/coffee\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\nvar Range = acequire(\"../../range\").Range;\n\nvar FoldMode = exports.FoldMode = function() {};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var range = this.indentationBlock(session, row);\n        if (range)\n            return range;\n\n        var re = /\\S/;\n        var line = session.getLine(row);\n        var startLevel = line.search(re);\n        if (startLevel == -1 || line[startLevel] != \"#\")\n            return;\n\n        var startColumn = line.length;\n        var maxRow = session.getLength();\n        var startRow = row;\n        var endRow = row;\n\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var level = line.search(re);\n\n            if (level == -1)\n                continue;\n\n            if (line[level] != \"#\")\n                break;\n\n            endRow = row;\n        }\n\n        if (endRow > startRow) {\n            var endColumn = session.getLine(endRow).length;\n            return new Range(startRow, startColumn, endRow, endColumn);\n        }\n    };\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        var next = session.getLine(row + 1);\n        var prev = session.getLine(row - 1);\n        var prevIndent = prev.search(/\\S/);\n        var nextIndent = next.search(/\\S/);\n\n        if (indent == -1) {\n            session.foldWidgets[row - 1] = prevIndent!= -1 && prevIndent < nextIndent ? \"start\" : \"\";\n            return \"\";\n        }\n        if (prevIndent == -1) {\n            if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n                session.foldWidgets[row - 1] = \"\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"start\";\n            }\n        } else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n            if (session.getLine(row - 2).search(/\\S/) == -1) {\n                session.foldWidgets[row - 1] = \"start\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"\";\n            }\n        }\n\n        if (prevIndent!= -1 && prevIndent < indent)\n            session.foldWidgets[row - 1] = \"start\";\n        else\n            session.foldWidgets[row - 1] = \"\";\n\n        if (indent < nextIndent)\n            return \"start\";\n        else\n            return \"\";\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/ruby\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/ruby_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/range\",\"ace/mode/behaviour/cstyle\",\"ace/mode/folding/coffee\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar RubyHighlightRules = acequire(\"./ruby_highlight_rules\").RubyHighlightRules;\nvar MatchingBraceOutdent = acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar Range = acequire(\"../range\").Range;\nvar CstyleBehaviour = acequire(\"./behaviour/cstyle\").CstyleBehaviour;\nvar FoldMode = acequire(\"./folding/coffee\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = RubyHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = new CstyleBehaviour();\n    this.foldingRules = new FoldMode();\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n\n\n    this.lineCommentStart = \"#\";\n\n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n\n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\n            return indent;\n        }\n\n        if (state == \"start\") {\n            var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\n            var startingClassOrMethod = line.match(/^\\s*(class|def|module)\\s.*$/);\n            var startingDoBlock = line.match(/.*do(\\s*|\\s+\\|.*\\|\\s*)$/);\n            var startingConditional = line.match(/^\\s*(if|else|when)\\s*/)\n            if (match || startingClassOrMethod || startingDoBlock || startingConditional) {\n                indent += tab;\n            }\n        }\n\n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        return /^\\s+(end|else)$/.test(line + input) || this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function(state, session, row) {\n        var line = session.getLine(row);\n        if (/}/.test(line))\n            return this.$outdent.autoOutdent(session, row);\n        var indent = this.$getIndent(line);\n        var prevLine = session.getLine(row - 1);\n        var prevIndent = this.$getIndent(prevLine);\n        var tab = session.getTabString();\n        if (prevIndent.length <= indent.length) {\n            if (indent.slice(-tab.length) == tab)\n                session.remove(new Range(row, indent.length-tab.length, row, indent.length));\n        }\n    };\n\n    this.$id = \"ace/mode/ruby\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n\n\n\n// WEBPACK FOOTER //\n// /Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/ruby.js"],"sourceRoot":""}