{"version":3,"sources":["webpack:///vendor/brace/mode/haskell_cabal.chunk.js","webpack:////Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/haskell_cabal.js"],"names":["webpackJsonppanneau","384","module","exports","ace","define","acequire","oop","TextHighlightRules","CabalHighlightRules","this","$rules","start","token","regex","inherits","BaseFoldMode","FoldMode","Range","isHeading","session","row","getTokens","type","lastIndexOf","getFoldWidget","foldStyle","test","getLine","maxRow","getLength","getFoldWidgetRange","line","startColumn","length","startRow","endRow","endColumn","call","prototype","TextMode","Mode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","blockComment","$id"],"mappings":"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","file":"vendor/brace/mode/haskell_cabal.chunk.js","sourcesContent":["webpackJsonppanneau([185],{\n\n/***/ 384:\n/***/ (function(module, exports) {\n\nace.define(\"ace/mode/haskell_cabal_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextHighlightRules=acequire(\"./text_highlight_rules\").TextHighlightRules;var CabalHighlightRules=function CabalHighlightRules(){this.$rules={\"start\":[{token:\"comment\",regex:\"^\\\\s*--.*$\"},{token:[\"keyword\"],regex:/^(\\s*\\w.*?)(:(?:\\s+|$))/},{token:\"constant.numeric\",// float\nregex:/[\\d_]+(?:(?:[\\.\\d_]*)?)/},{token:\"constant.language.boolean\",regex:\"(?:true|false|TRUE|FALSE|True|False|yes|no)\\\\b\"},{token:\"markup.heading\",regex:/^(\\w.*)$/}]};};oop.inherits(CabalHighlightRules,TextHighlightRules);exports.CabalHighlightRules=CabalHighlightRules;});ace.define(\"ace/mode/folding/haskell_cabal\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../../lib/oop\");var BaseFoldMode=acequire(\"./fold_mode\").FoldMode;var Range=acequire(\"../../range\").Range;var FoldMode=exports.FoldMode=function(){};oop.inherits(FoldMode,BaseFoldMode);(function(){this.isHeading=function(session,row){var heading=\"markup.heading\";var token=session.getTokens(row)[0];return row==0||token&&token.type.lastIndexOf(heading,0)===0;};this.getFoldWidget=function(session,foldStyle,row){if(this.isHeading(session,row)){return\"start\";}else if(foldStyle===\"markbeginend\"&&!/^\\s*$/.test(session.getLine(row))){var maxRow=session.getLength();while(++row<maxRow){if(!/^\\s*$/.test(session.getLine(row))){break;}}if(row==maxRow||this.isHeading(session,row)){return\"end\";}}return\"\";};this.getFoldWidgetRange=function(session,foldStyle,row){var line=session.getLine(row);var startColumn=line.length;var maxRow=session.getLength();var startRow=row;var endRow=row;if(this.isHeading(session,row)){while(++row<maxRow){if(this.isHeading(session,row)){row--;break;}}endRow=row;if(endRow>startRow){while(endRow>startRow&&/^\\s*$/.test(session.getLine(endRow))){endRow--;}}if(endRow>startRow){var endColumn=session.getLine(endRow).length;return new Range(startRow,startColumn,endRow,endColumn);}}else if(this.getFoldWidget(session,foldStyle,row)===\"end\"){var endRow=row;var endColumn=session.getLine(endRow).length;while(--row>=0){if(this.isHeading(session,row)){break;}}var line=session.getLine(row);var startColumn=line.length;return new Range(row,startColumn,endRow,endColumn);}};}).call(FoldMode.prototype);});ace.define(\"ace/mode/haskell_cabal\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/haskell_cabal_highlight_rules\",\"ace/mode/folding/haskell_cabal\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextMode=acequire(\"./text\").Mode;var CabalHighlightRules=acequire(\"./haskell_cabal_highlight_rules\").CabalHighlightRules;var FoldMode=acequire(\"./folding/haskell_cabal\").FoldMode;var Mode=function Mode(){this.HighlightRules=CabalHighlightRules;this.foldingRules=new FoldMode();this.$behaviour=this.$defaultBehaviour;};oop.inherits(Mode,TextMode);(function(){this.lineCommentStart=\"--\";this.blockComment=null;this.$id=\"ace/mode/haskell_cabal\";}).call(Mode.prototype);exports.Mode=Mode;});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// vendor/brace/mode/haskell_cabal.chunk.js","ace.define(\"ace/mode/haskell_cabal_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar CabalHighlightRules = function() {\n    this.$rules = {\n        \"start\" : [\n            {\n                token : \"comment\",\n                regex : \"^\\\\s*--.*$\"\n            }, {\n                token: [\"keyword\"],\n                regex: /^(\\s*\\w.*?)(:(?:\\s+|$))/\n            }, {\n                token : \"constant.numeric\", // float\n                regex : /[\\d_]+(?:(?:[\\.\\d_]*)?)/\n            }, {\n                token : \"constant.language.boolean\",\n                regex : \"(?:true|false|TRUE|FALSE|True|False|yes|no)\\\\b\"\n            }, {\n                token : \"markup.heading\",\n                regex : /^(\\w.*)$/\n            }\n        ]};\n\n};\n\noop.inherits(CabalHighlightRules, TextHighlightRules);\n\nexports.CabalHighlightRules = CabalHighlightRules;\n});\n\nace.define(\"ace/mode/folding/haskell_cabal\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\nvar Range = acequire(\"../../range\").Range;\n\nvar FoldMode = exports.FoldMode = function() {};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n  this.isHeading = function (session,row) {\n      var heading = \"markup.heading\";\n      var token = session.getTokens(row)[0];\n      return row==0 || (token && token.type.lastIndexOf(heading, 0) === 0);\n  };\n\n  this.getFoldWidget = function(session, foldStyle, row) {\n      if (this.isHeading(session,row)){\n        return \"start\";\n      } else if (foldStyle === \"markbeginend\" && !(/^\\s*$/.test(session.getLine(row)))){\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n          if (!(/^\\s*$/.test(session.getLine(row)))){\n              break;\n          }\n        }\n        if (row==maxRow || this.isHeading(session,row)){\n          return \"end\";\n        }\n      }\n      return \"\";\n  };\n\n\n  this.getFoldWidgetRange = function(session, foldStyle, row) {\n      var line = session.getLine(row);\n      var startColumn = line.length;\n      var maxRow = session.getLength();\n      var startRow = row;\n      var endRow = row;\n      if (this.isHeading(session,row)) {\n          while (++row < maxRow) {\n              if (this.isHeading(session,row)){\n                row--;\n                break;\n              }\n          }\n\n          endRow = row;\n          if (endRow > startRow) {\n              while (endRow > startRow && /^\\s*$/.test(session.getLine(endRow)))\n                  endRow--;\n          }\n\n          if (endRow > startRow) {\n              var endColumn = session.getLine(endRow).length;\n              return new Range(startRow, startColumn, endRow, endColumn);\n          }\n      } else if (this.getFoldWidget(session, foldStyle, row)===\"end\"){\n        var endRow = row;\n        var endColumn = session.getLine(endRow).length;\n        while (--row>=0){\n          if (this.isHeading(session,row)){\n            break;\n          }\n        }\n        var line = session.getLine(row);\n        var startColumn = line.length;\n        return new Range(row, startColumn, endRow, endColumn);\n      }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/haskell_cabal\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/haskell_cabal_highlight_rules\",\"ace/mode/folding/haskell_cabal\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar CabalHighlightRules = acequire(\"./haskell_cabal_highlight_rules\").CabalHighlightRules;\nvar FoldMode = acequire(\"./folding/haskell_cabal\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = CabalHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.lineCommentStart = \"--\";\n    this.blockComment = null;\n    this.$id = \"ace/mode/haskell_cabal\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n\n\n\n// WEBPACK FOOTER //\n// /Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/haskell_cabal.js"],"sourceRoot":""}