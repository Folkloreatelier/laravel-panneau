{"version":3,"sources":["webpack:///vendor/brace/mode/gherkin.chunk.js","webpack:////Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/gherkin.js"],"names":["webpackJsonppanneau","251","module","exports","ace","define","acequire","oop","TextHighlightRules","stringEscape","GherkinHighlightRules","languages","name","labels","keywords","map","l","join","this","$rules","start","token","regex","next","qqstring3","defaultToken","qqstring","table-item","normalizeRules","inherits","TextMode","Mode","HighlightRules","$behaviour","$defaultBehaviour","lineCommentStart","$id","getNextLineIndent","state","line","tab","indent","$getIndent","tokenizedLine","getTokenizer","getLineTokens","tokens","console","log","match","length","type","call","prototype"],"mappings":"AAAAA,qBAAqB,MAEfC,IACA,SAAUC,EAAQC,GCHxBC,IAAIC,OAAO,oCAAoC,UAAU,UAAU,SAAS,cAAc,iCAAkC,SAASC,EAAUH,EAASD,GAExJ,GAAIK,GAAMD,EAAS,cACfE,EAAqBF,EAAS,0BAA0BE,mBACxDC,EAAgB,kFAEhBC,EAAwB,WACxB,GAAIC,KACAC,KAAM,KACNC,OAAQ,oDACRC,SAAU,4BAGVD,EAASF,EAAUI,IAAI,SAASC,GAChC,MAAOA,GAAEH,SACVI,KAAK,KACJH,EAAWH,EAAUI,IAAI,SAASC,GAClC,MAAOA,GAAEF,WACVG,KAAK,IACRC,MAAKC,QACDC,QACIC,MAAO,mBACPC,MAAO,4BAEPD,MAAQ,UACRC,MAAQ,SAERD,MAAQ,UACRC,MAAQ,MAAQT,EAAS,SAAWC,EAAW,SAE/CO,MAAQ,UACRC,MAAQ,QAERD,MAAQ,SACRC,MAAQ,OACRC,KAAO,cAEPF,MAAQ,SACRC,MAAQ,IACRC,KAAO,aAEPF,MAAQ,OACRC,MAAQ,kBACRC,OACIF,MAAQ,OACRC,MAAQ,SAERD,MAAQ,qBACRC,MAAQ,YAERD,MAAQ,QACRC,MAAQ,GACRC,KAAO,YAGXF,MAAQ,UACRC,MAAQ,YAERD,MAAQ,UACRC,MAAQ,WACRC,KAAO,eAEPF,MAAQ,UACRC,MAAQ,OACRC,KAAO,UAEXC,YACIH,MAAQ,2BACRC,MAAQb,IAERY,MAAQ,SACRC,MAAQ,OACRC,KAAO,UAEPE,aAAe,WAEnBC,WACIL,MAAQ,2BACRC,MAAQb,IAERY,MAAQ,SACRC,MAAQ,QACRC,KAAQ,aAERF,MAAQ,SACRC,MAAQ,MACRC,KAAQ,UAERE,aAAc,WAElBE,eACIN,MAAQ,UACRC,MAAQ,IACRC,KAAO,UAEPF,MAAQ,UACRC,MAAQ,OAERD,MAAQ,SACRC,MAAQ,QAERG,aAAe,YAGvBP,KAAKU,iBAGTrB,GAAIsB,SAASnB,EAAuBF,GAEpCL,EAAQO,sBAAwBA,IAGhCN,IAAIC,OAAO,oBAAoB,UAAU,UAAU,SAAS,cAAc,gBAAgB,oCAAqC,SAASC,EAAUH,EAASD,GAE3J,GAAIK,GAAMD,EAAS,cACfwB,EAAWxB,EAAS,UAAUyB,KAC9BrB,EAAwBJ,EAAS,6BAA6BI,sBAE9DqB,EAAO,WACPb,KAAKc,eAAiBtB,EACtBQ,KAAKe,WAAaf,KAAKgB,kBAE3B3B,GAAIsB,SAASE,EAAMD,GAEnB,WACIZ,KAAKiB,iBAAmB,IACxBjB,KAAKkB,IAAM,mBAEXlB,KAAKmB,kBAAoB,SAASC,EAAOC,EAAMC,GAC3C,GAAIC,GAASvB,KAAKwB,WAAWH,GAGzBI,EAAgBzB,KAAK0B,eAAeC,cAAcN,EAAMD,GACxDQ,EAASH,EAAcG,MAQ3B,OANAC,SAAQC,IAAIV,GAETC,EAAKU,MAAM,aACVR,GAAU,MAGVK,EAAOI,QAA0C,WAAhCJ,EAAOA,EAAOI,OAAO,GAAGC,KAClCV,GAIE,SAATH,IACIC,EAAKU,MAAM,oDACXR,GAlBK,KAmBCF,EAAKU,MAAM,gCACjBR,GApBK,KAqBCF,EAAKU,MAAM,WACjBR,GAAU,OAKXA,KAEZW,KAAKrB,EAAKsB,WAEblD,EAAQ4B,KAAOA","file":"vendor/brace/mode/gherkin.chunk.js","sourcesContent":["webpackJsonppanneau([191],{\n\n/***/ 251:\n/***/ (function(module, exports) {\n\nace.define(\"ace/mode/gherkin_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],function(acequire,exports,module){var oop=acequire(\"../lib/oop\");var TextHighlightRules=acequire(\"./text_highlight_rules\").TextHighlightRules;var stringEscape=\"\\\\\\\\(x[0-9A-Fa-f]{2}|[0-7]{3}|[\\\\\\\\abfnrtv'\\\"]|U[0-9A-Fa-f]{8}|u[0-9A-Fa-f]{4})\";var GherkinHighlightRules=function GherkinHighlightRules(){var languages=[{name:\"en\",labels:\"Feature|Background|Scenario(?: Outline)?|Examples\",keywords:\"Given|When|Then|And|But\"}];var labels=languages.map(function(l){return l.labels;}).join(\"|\");var keywords=languages.map(function(l){return l.keywords;}).join(\"|\");this.$rules={start:[{token:\"constant.numeric\",regex:\"(?:(?:[1-9]\\\\d*)|(?:0))\"},{token:\"comment\",regex:\"#.*$\"},{token:\"keyword\",regex:\"(?:\"+labels+\"):|(?:\"+keywords+\")\\\\b\"},{token:\"keyword\",regex:\"\\\\*\"},{token:\"string\",// multi line \"\"\" string start\nregex:'\"{3}',next:\"qqstring3\"},{token:\"string\",// \" string\nregex:'\"',next:\"qqstring\"},{token:\"text\",regex:\"^\\\\s*(?=@[\\\\w])\",next:[{token:\"text\",regex:\"\\\\s+\"},{token:\"variable.parameter\",regex:\"@[\\\\w]+\"},{token:\"empty\",regex:\"\",next:\"start\"}]},{token:\"comment\",regex:\"<[^>]+>\"},{token:\"comment\",regex:\"\\\\|(?=.)\",next:\"table-item\"},{token:\"comment\",regex:\"\\\\|$\",next:\"start\"}],\"qqstring3\":[{token:\"constant.language.escape\",regex:stringEscape},{token:\"string\",// multi line \"\"\" string end\nregex:'\"{3}',next:\"start\"},{defaultToken:\"string\"}],\"qqstring\":[{token:\"constant.language.escape\",regex:stringEscape},{token:\"string\",regex:\"\\\\\\\\$\",next:\"qqstring\"},{token:\"string\",regex:'\"|$',next:\"start\"},{defaultToken:\"string\"}],\"table-item\":[{token:\"comment\",regex:/$/,next:\"start\"},{token:\"comment\",regex:/\\|/},{token:\"string\",regex:/\\\\./},{defaultToken:\"string\"}]};this.normalizeRules();};oop.inherits(GherkinHighlightRules,TextHighlightRules);exports.GherkinHighlightRules=GherkinHighlightRules;});ace.define(\"ace/mode/gherkin\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/gherkin_highlight_rules\"],function(acequire,exports,module){var oop=acequire(\"../lib/oop\");var TextMode=acequire(\"./text\").Mode;var GherkinHighlightRules=acequire(\"./gherkin_highlight_rules\").GherkinHighlightRules;var Mode=function Mode(){this.HighlightRules=GherkinHighlightRules;this.$behaviour=this.$defaultBehaviour;};oop.inherits(Mode,TextMode);(function(){this.lineCommentStart=\"#\";this.$id=\"ace/mode/gherkin\";this.getNextLineIndent=function(state,line,tab){var indent=this.$getIndent(line);var space2=\"  \";var tokenizedLine=this.getTokenizer().getLineTokens(line,state);var tokens=tokenizedLine.tokens;console.log(state);if(line.match(\"[ ]*\\\\|\")){indent+=\"| \";}if(tokens.length&&tokens[tokens.length-1].type==\"comment\"){return indent;}if(state==\"start\"){if(line.match(\"Scenario:|Feature:|Scenario Outline:|Background:\")){indent+=space2;}else if(line.match(\"(Given|Then).+(:)$|Examples:\")){indent+=space2;}else if(line.match(\"\\\\*.+\")){indent+=\"* \";}}return indent;};}).call(Mode.prototype);exports.Mode=Mode;});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// vendor/brace/mode/gherkin.chunk.js","ace.define(\"ace/mode/gherkin_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\nvar stringEscape =  \"\\\\\\\\(x[0-9A-Fa-f]{2}|[0-7]{3}|[\\\\\\\\abfnrtv'\\\"]|U[0-9A-Fa-f]{8}|u[0-9A-Fa-f]{4})\";\n\nvar GherkinHighlightRules = function() {\n    var languages = [{\n        name: \"en\",\n        labels: \"Feature|Background|Scenario(?: Outline)?|Examples\",\n        keywords: \"Given|When|Then|And|But\"\n    }];\n    \n    var labels = languages.map(function(l) {\n        return l.labels;\n    }).join(\"|\");\n    var keywords = languages.map(function(l) {\n        return l.keywords;\n    }).join(\"|\");\n    this.$rules = {\n        start : [{\n            token: \"constant.numeric\",\n            regex: \"(?:(?:[1-9]\\\\d*)|(?:0))\"\n        }, {\n            token : \"comment\",\n            regex : \"#.*$\"\n        }, {\n            token : \"keyword\",\n            regex : \"(?:\" + labels + \"):|(?:\" + keywords + \")\\\\b\"\n        }, {\n            token : \"keyword\",\n            regex : \"\\\\*\"\n        }, {\n            token : \"string\",           // multi line \"\"\" string start\n            regex : '\"{3}',\n            next : \"qqstring3\"\n        }, {\n            token : \"string\",           // \" string\n            regex : '\"',\n            next : \"qqstring\"\n        }, {\n            token : \"text\",\n            regex : \"^\\\\s*(?=@[\\\\w])\",\n            next : [{\n                token : \"text\",\n                regex : \"\\\\s+\"\n            }, {\n                token : \"variable.parameter\",\n                regex : \"@[\\\\w]+\"\n            }, {\n                token : \"empty\",\n                regex : \"\",\n                next : \"start\"\n            }]\n        }, {\n            token : \"comment\",\n            regex : \"<[^>]+>\"\n        }, {\n            token : \"comment\",\n            regex : \"\\\\|(?=.)\",\n            next : \"table-item\"\n        }, {\n            token : \"comment\",\n            regex : \"\\\\|$\",\n            next : \"start\"\n        }],\n        \"qqstring3\" : [ {\n            token : \"constant.language.escape\",\n            regex : stringEscape\n        }, {\n            token : \"string\", // multi line \"\"\" string end\n            regex : '\"{3}',\n            next : \"start\"\n        }, {\n            defaultToken : \"string\"\n        }],\n        \"qqstring\" : [{\n            token : \"constant.language.escape\",\n            regex : stringEscape\n        }, {\n            token : \"string\",\n            regex : \"\\\\\\\\$\",\n            next  : \"qqstring\"\n        }, {\n            token : \"string\",\n            regex : '\"|$',\n            next  : \"start\"\n        }, {\n            defaultToken: \"string\"\n        }],\n        \"table-item\" : [{\n            token : \"comment\",\n            regex : /$/,\n            next : \"start\"\n        }, {\n            token : \"comment\",\n            regex : /\\|/\n        }, {\n            token : \"string\",\n            regex : /\\\\./\n        }, {\n            defaultToken : \"string\"\n        }]\n    };\n    this.normalizeRules();\n}\n\noop.inherits(GherkinHighlightRules, TextHighlightRules);\n\nexports.GherkinHighlightRules = GherkinHighlightRules;\n});\n\nace.define(\"ace/mode/gherkin\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/gherkin_highlight_rules\"], function(acequire, exports, module) {\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar GherkinHighlightRules = acequire(\"./gherkin_highlight_rules\").GherkinHighlightRules;\n\nvar Mode = function() {\n    this.HighlightRules = GherkinHighlightRules;\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.lineCommentStart = \"#\";\n    this.$id = \"ace/mode/gherkin\";\n\n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n        var space2 = \"  \";\n\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n        \n        console.log(state)\n        \n        if(line.match(\"[ ]*\\\\|\")) {\n            indent += \"| \";\n        }\n\n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\n            return indent;\n        }\n        \n\n        if (state == \"start\") {\n            if (line.match(\"Scenario:|Feature:|Scenario Outline:|Background:\")) {\n                indent += space2;\n            } else if(line.match(\"(Given|Then).+(:)$|Examples:\")) {\n                indent += space2;\n            } else if(line.match(\"\\\\*.+\")) {\n                indent += \"* \";\n            } \n        }\n        \n\n        return indent;\n    };\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n\n\n\n// WEBPACK FOOTER //\n// /Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/gherkin.js"],"sourceRoot":""}