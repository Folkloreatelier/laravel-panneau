{"version":3,"sources":["webpack:///vendor/brace/mode/lean.chunk.js","webpack:////Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/lean.js"],"names":["webpackJsonppanneau","403","module","exports","ace","define","acequire","oop","TextHighlightRules","DocCommentHighlightRules","this","$rules","start","token","regex","getTagRule","defaultToken","caseInsensitive","inherits","getStartRule","next","getEndRule","leanHighlightRules","keywordControls","join","nameProviders","storageType","storageModifiers","keywordOperators","keywordMapper","$keywords","createKeywordMapper","keyword.control","storage.type","keyword.operator","variable.language","identifierRe","operatorRe","RegExp","stateName","comment","embedRules","normalizeRules","Range","MatchingBraceOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","getLine","match","column","length","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","TextMode","Mode","HighlightRules","$outdent","lineCommentStart","blockComment","end","getNextLineIndent","state","tab","tokenizedLine","getTokenizer","getLineTokens","tokens","endState","type","$id"],"mappings":"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","file":"vendor/brace/mode/lean.chunk.js","sourcesContent":["webpackJsonppanneau([172],{\n\n/***/ 403:\n/***/ (function(module, exports) {\n\nace.define(\"ace/mode/doc_comment_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextHighlightRules=acequire(\"./text_highlight_rules\").TextHighlightRules;var DocCommentHighlightRules=function DocCommentHighlightRules(){this.$rules={\"start\":[{token:\"comment.doc.tag\",regex:\"@[\\\\w\\\\d_]+\"// TODO: fix email addresses\n},DocCommentHighlightRules.getTagRule(),{defaultToken:\"comment.doc\",caseInsensitive:true}]};};oop.inherits(DocCommentHighlightRules,TextHighlightRules);DocCommentHighlightRules.getTagRule=function(start){return{token:\"comment.doc.tag.storage.type\",regex:\"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"};};DocCommentHighlightRules.getStartRule=function(start){return{token:\"comment.doc\",// doc comment\nregex:\"\\\\/\\\\*(?=\\\\*)\",next:start};};DocCommentHighlightRules.getEndRule=function(start){return{token:\"comment.doc\",// closing comment\nregex:\"\\\\*\\\\/\",next:start};};exports.DocCommentHighlightRules=DocCommentHighlightRules;});ace.define(\"ace/mode/lean_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/doc_comment_highlight_rules\",\"ace/mode/text_highlight_rules\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var DocCommentHighlightRules=acequire(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;var TextHighlightRules=acequire(\"./text_highlight_rules\").TextHighlightRules;var leanHighlightRules=function leanHighlightRules(){var keywordControls=[\"add_rewrite\",\"alias\",\"as\",\"assume\",\"attribute\",\"begin\",\"by\",\"calc\",\"calc_refl\",\"calc_subst\",\"calc_trans\",\"check\",\"classes\",\"coercions\",\"conjecture\",\"constants\",\"context\",\"corollary\",\"else\",\"end\",\"environment\",\"eval\",\"example\",\"exists\",\"exit\",\"export\",\"exposing\",\"extends\",\"fields\",\"find_decl\",\"forall\",\"from\",\"fun\",\"have\",\"help\",\"hiding\",\"if\",\"import\",\"in\",\"infix\",\"infixl\",\"infixr\",\"instances\",\"let\",\"local\",\"match\",\"namespace\",\"notation\",\"obtain\",\"obtains\",\"omit\",\"opaque\",\"open\",\"options\",\"parameter\",\"parameters\",\"postfix\",\"precedence\",\"prefix\",\"premise\",\"premises\",\"print\",\"private\",\"proof\",\"protected\",\"qed\",\"raw\",\"renaming\",\"section\",\"set_option\",\"show\",\"tactic_hint\",\"take\",\"then\",\"universe\",\"universes\",\"using\",\"variable\",\"variables\",\"with\"].join(\"|\");var nameProviders=[\"inductive\",\"structure\",\"record\",\"theorem\",\"axiom\",\"axioms\",\"lemma\",\"hypothesis\",\"definition\",\"constant\"].join(\"|\");var storageType=[\"Prop\",\"Type\",\"Type'\",\"Type₊\",\"Type₁\",\"Type₂\",\"Type₃\"].join(\"|\");var storageModifiers=\"\\\\[(\"+[\"abbreviations\",\"all-transparent\",\"begin-end-hints\",\"class\",\"classes\",\"coercion\",\"coercions\",\"declarations\",\"decls\",\"instance\",\"irreducible\",\"multiple-instances\",\"notation\",\"notations\",\"parsing-only\",\"persistent\",\"reduce-hints\",\"reducible\",\"tactic-hints\",\"visible\",\"wf\",\"whnf\"].join(\"|\")+\")\\\\]\";var keywordOperators=[].join(\"|\");var keywordMapper=this.$keywords=this.createKeywordMapper({\"keyword.control\":keywordControls,\"storage.type\":storageType,\"keyword.operator\":keywordOperators,\"variable.language\":\"sorry\"},\"identifier\");var identifierRe=\"[A-Za-z_\\u03B1-\\u03BA\\u03BC-\\u03FB\\u1F00-\\u1FFE\\u2100-\\u214F][A-Za-z0-9_'\\u03B1-\\u03BA\\u03BC-\\u03FB\\u1F00-\\u1FFE\\u2070-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2100-\\u214F]*\";var operatorRe=new RegExp([\"#\",\"@\",\"->\",\"∼\",\"↔\",\"/\",\"==\",\"=\",\":=\",\"<->\",\"/\\\\\",\"\\\\/\",\"∧\",\"∨\",\"≠\",\"<\",\">\",\"≤\",\"≥\",\"¬\",\"<=\",\">=\",\"⁻¹\",\"⬝\",\"▸\",\"\\\\+\",\"\\\\*\",\"-\",\"/\",\"λ\",\"→\",\"∃\",\"∀\",\":=\"].join(\"|\"));this.$rules={\"start\":[{token:\"comment\",// single line comment \"--\"\nregex:\"--.*$\"},DocCommentHighlightRules.getStartRule(\"doc-start\"),{token:\"comment\",// multi line comment \"/-\"\nregex:\"\\\\/-\",next:\"comment\"},{stateName:\"qqstring\",token:\"string.start\",regex:'\"',next:[{token:\"string.end\",regex:'\"',next:\"start\"},{token:\"constant.language.escape\",regex:/\\\\[n\"\\\\]/},{defaultToken:\"string\"}]},{token:\"keyword.control\",regex:nameProviders,next:[{token:\"variable.language\",regex:identifierRe,next:\"start\"}]},{token:\"constant.numeric\",// hex\nregex:\"0[xX][0-9a-fA-F]+(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\\\\b\"},{token:\"constant.numeric\",// float\nregex:\"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\\\\b\"},{token:\"storage.modifier\",regex:storageModifiers},{token:keywordMapper,regex:identifierRe},{token:\"operator\",regex:operatorRe},{token:\"punctuation.operator\",regex:\"\\\\?|\\\\:|\\\\,|\\\\;|\\\\.\"},{token:\"paren.lparen\",regex:\"[[({]\"},{token:\"paren.rparen\",regex:\"[\\\\])}]\"},{token:\"text\",regex:\"\\\\s+\"}],\"comment\":[{token:\"comment\",regex:\"-/\",next:\"start\"},{defaultToken:\"comment\"}]};this.embedRules(DocCommentHighlightRules,\"doc-\",[DocCommentHighlightRules.getEndRule(\"start\")]);this.normalizeRules();};oop.inherits(leanHighlightRules,TextHighlightRules);exports.leanHighlightRules=leanHighlightRules;});ace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"],function(acequire,exports,module){\"use strict\";var Range=acequire(\"../range\").Range;var MatchingBraceOutdent=function MatchingBraceOutdent(){};(function(){this.checkOutdent=function(line,input){if(!/^\\s+$/.test(line))return false;return /^\\s*\\}/.test(input);};this.autoOutdent=function(doc,row){var line=doc.getLine(row);var match=line.match(/^(\\s*\\})/);if(!match)return 0;var column=match[1].length;var openBracePos=doc.findMatchingBracket({row:row,column:column});if(!openBracePos||openBracePos.row==row)return 0;var indent=this.$getIndent(doc.getLine(openBracePos.row));doc.replace(new Range(row,0,row,column-1),indent);};this.$getIndent=function(line){return line.match(/^\\s*/)[0];};}).call(MatchingBraceOutdent.prototype);exports.MatchingBraceOutdent=MatchingBraceOutdent;});ace.define(\"ace/mode/lean\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/lean_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/range\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextMode=acequire(\"./text\").Mode;var leanHighlightRules=acequire(\"./lean_highlight_rules\").leanHighlightRules;var MatchingBraceOutdent=acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;var Range=acequire(\"../range\").Range;var Mode=function Mode(){this.HighlightRules=leanHighlightRules;this.$outdent=new MatchingBraceOutdent();};oop.inherits(Mode,TextMode);(function(){this.lineCommentStart=\"--\";this.blockComment={start:\"/-\",end:\"-/\"};this.getNextLineIndent=function(state,line,tab){var indent=this.$getIndent(line);var tokenizedLine=this.getTokenizer().getLineTokens(line,state);var tokens=tokenizedLine.tokens;var endState=tokenizedLine.state;if(tokens.length&&tokens[tokens.length-1].type==\"comment\"){return indent;}if(state==\"start\"){var match=line.match(/^.*[\\{\\(\\[]\\s*$/);if(match){indent+=tab;}}else if(state==\"doc-start\"){if(endState==\"start\"){return\"\";}var match=line.match(/^\\s*(\\/?)\\*/);if(match){if(match[1]){indent+=\" \";}indent+=\"- \";}}return indent;};this.checkOutdent=function(state,line,input){return this.$outdent.checkOutdent(line,input);};this.autoOutdent=function(state,doc,row){this.$outdent.autoOutdent(doc,row);};this.$id=\"ace/mode/lean\";}).call(Mode.prototype);exports.Mode=Mode;});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// vendor/brace/mode/lean.chunk.js","ace.define(\"ace/mode/doc_comment_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar DocCommentHighlightRules = function() {\n    this.$rules = {\n        \"start\" : [ {\n            token : \"comment.doc.tag\",\n            regex : \"@[\\\\w\\\\d_]+\" // TODO: fix email addresses\n        }, \n        DocCommentHighlightRules.getTagRule(),\n        {\n            defaultToken : \"comment.doc\",\n            caseInsensitive: true\n        }]\n    };\n};\n\noop.inherits(DocCommentHighlightRules, TextHighlightRules);\n\nDocCommentHighlightRules.getTagRule = function(start) {\n    return {\n        token : \"comment.doc.tag.storage.type\",\n        regex : \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n}\n\nDocCommentHighlightRules.getStartRule = function(start) {\n    return {\n        token : \"comment.doc\", // doc comment\n        regex : \"\\\\/\\\\*(?=\\\\*)\",\n        next  : start\n    };\n};\n\nDocCommentHighlightRules.getEndRule = function (start) {\n    return {\n        token : \"comment.doc\", // closing comment\n        regex : \"\\\\*\\\\/\",\n        next  : start\n    };\n};\n\n\nexports.DocCommentHighlightRules = DocCommentHighlightRules;\n\n});\n\nace.define(\"ace/mode/lean_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/doc_comment_highlight_rules\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar DocCommentHighlightRules = acequire(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar leanHighlightRules = function() {\n\n    var keywordControls = (\n        [ \"add_rewrite\", \"alias\", \"as\", \"assume\", \"attribute\",\n          \"begin\", \"by\", \"calc\", \"calc_refl\", \"calc_subst\", \"calc_trans\", \"check\",\n          \"classes\", \"coercions\", \"conjecture\", \"constants\", \"context\",\n          \"corollary\", \"else\", \"end\", \"environment\", \"eval\", \"example\",\n          \"exists\", \"exit\", \"export\", \"exposing\", \"extends\", \"fields\", \"find_decl\",\n          \"forall\", \"from\", \"fun\", \"have\", \"help\", \"hiding\", \"if\",\n          \"import\", \"in\", \"infix\", \"infixl\", \"infixr\", \"instances\",\n          \"let\", \"local\", \"match\", \"namespace\", \"notation\", \"obtain\", \"obtains\",\n          \"omit\", \"opaque\", \"open\", \"options\", \"parameter\", \"parameters\", \"postfix\",\n          \"precedence\", \"prefix\", \"premise\", \"premises\", \"print\", \"private\", \"proof\",\n          \"protected\", \"qed\", \"raw\", \"renaming\", \"section\", \"set_option\",\n          \"show\", \"tactic_hint\", \"take\", \"then\", \"universe\",\n          \"universes\", \"using\", \"variable\", \"variables\", \"with\"].join(\"|\")\n    );\n\n    var nameProviders = (\n        [\"inductive\", \"structure\", \"record\", \"theorem\", \"axiom\",\n         \"axioms\", \"lemma\", \"hypothesis\", \"definition\", \"constant\"].join(\"|\")\n    );\n\n    var storageType = (\n        [\"Prop\", \"Type\", \"Type'\", \"Type₊\", \"Type₁\", \"Type₂\", \"Type₃\"].join(\"|\")\n    );\n\n    var storageModifiers = (\n        \"\\\\[(\" +\n            [\"abbreviations\", \"all-transparent\", \"begin-end-hints\", \"class\", \"classes\", \"coercion\",\n             \"coercions\", \"declarations\", \"decls\", \"instance\", \"irreducible\",\n             \"multiple-instances\", \"notation\", \"notations\", \"parsing-only\", \"persistent\",\n             \"reduce-hints\", \"reducible\", \"tactic-hints\", \"visible\", \"wf\", \"whnf\"\n            ].join(\"|\") +\n            \")\\\\]\"\n    );\n\n    var keywordOperators = (\n        [].join(\"|\")\n    );\n\n    var keywordMapper = this.$keywords = this.createKeywordMapper({\n        \"keyword.control\" : keywordControls,\n        \"storage.type\" : storageType,\n        \"keyword.operator\" : keywordOperators,\n        \"variable.language\": \"sorry\"\n    }, \"identifier\");\n\n    var identifierRe = \"[A-Za-z_\\u03b1-\\u03ba\\u03bc-\\u03fb\\u1f00-\\u1ffe\\u2100-\\u214f][A-Za-z0-9_'\\u03b1-\\u03ba\\u03bc-\\u03fb\\u1f00-\\u1ffe\\u2070-\\u2079\\u207f-\\u2089\\u2090-\\u209c\\u2100-\\u214f]*\";\n    var operatorRe = new RegExp([\"#\", \"@\", \"->\", \"∼\", \"↔\", \"/\", \"==\", \"=\", \":=\", \"<->\",\n                                 \"/\\\\\", \"\\\\/\", \"∧\", \"∨\", \"≠\", \"<\", \">\", \"≤\", \"≥\", \"¬\",\n                                 \"<=\", \">=\", \"⁻¹\", \"⬝\", \"▸\", \"\\\\+\", \"\\\\*\", \"-\", \"/\",\n                                 \"λ\", \"→\", \"∃\", \"∀\", \":=\"].join(\"|\"));\n\n    this.$rules = {\n        \"start\" : [\n            {\n                token : \"comment\", // single line comment \"--\"\n                regex : \"--.*$\"\n            },\n            DocCommentHighlightRules.getStartRule(\"doc-start\"),\n            {\n                token : \"comment\", // multi line comment \"/-\"\n                regex : \"\\\\/-\",\n                next : \"comment\"\n            }, {\n                stateName: \"qqstring\",\n                token : \"string.start\", regex : '\"', next : [\n                    {token : \"string.end\", regex : '\"', next : \"start\"},\n                    {token : \"constant.language.escape\", regex : /\\\\[n\"\\\\]/},\n                    {defaultToken: \"string\"}\n                ]\n            }, {\n                token : \"keyword.control\", regex : nameProviders, next : [\n                    {token : \"variable.language\", regex : identifierRe, next : \"start\"} ]\n            }, {\n                token : \"constant.numeric\", // hex\n                regex : \"0[xX][0-9a-fA-F]+(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\\\\b\"\n            }, {\n                token : \"constant.numeric\", // float\n                regex : \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\\\\b\"\n            }, {\n                token : \"storage.modifier\",\n                regex : storageModifiers\n            }, {\n                token : keywordMapper,\n                regex : identifierRe\n            }, {\n                token : \"operator\",\n                regex : operatorRe\n            }, {\n              token : \"punctuation.operator\",\n              regex : \"\\\\?|\\\\:|\\\\,|\\\\;|\\\\.\"\n            }, {\n                token : \"paren.lparen\",\n                regex : \"[[({]\"\n            }, {\n                token : \"paren.rparen\",\n                regex : \"[\\\\])}]\"\n            }, {\n                token : \"text\",\n                regex : \"\\\\s+\"\n            }\n        ],\n        \"comment\" : [ {token: \"comment\", regex: \"-/\", next: \"start\"},\n                      {defaultToken: \"comment\"} ]\n    };\n\n    this.embedRules(DocCommentHighlightRules, \"doc-\",\n        [ DocCommentHighlightRules.getEndRule(\"start\") ]);\n    this.normalizeRules();\n};\n\noop.inherits(leanHighlightRules, TextHighlightRules);\n\nexports.leanHighlightRules = leanHighlightRules;\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar Range = acequire(\"../range\").Range;\n\nvar MatchingBraceOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        return line.match(/^\\s*/)[0];\n    };\n\n}).call(MatchingBraceOutdent.prototype);\n\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\n\nace.define(\"ace/mode/lean\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/lean_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar leanHighlightRules = acequire(\"./lean_highlight_rules\").leanHighlightRules;\nvar MatchingBraceOutdent = acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar Range = acequire(\"../range\").Range;\n\nvar Mode = function() {\n    this.HighlightRules = leanHighlightRules;\n\n    this.$outdent = new MatchingBraceOutdent();\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n\n    this.lineCommentStart = \"--\";\n    this.blockComment = {start: \"/-\", end: \"-/\"};\n\n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n        var endState = tokenizedLine.state;\n\n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\n            return indent;\n        }\n\n        if (state == \"start\") {\n            var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        } else if (state == \"doc-start\") {\n            if (endState == \"start\") {\n                return \"\";\n            }\n            var match = line.match(/^\\s*(\\/?)\\*/);\n            if (match) {\n                if (match[1]) {\n                    indent += \" \";\n                }\n                indent += \"- \";\n            }\n        }\n\n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.$id = \"ace/mode/lean\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n\n\n\n// WEBPACK FOOTER //\n// /Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/lean.js"],"sourceRoot":""}