{"version":3,"sources":["webpack:///vendor/brace/mode/elm.chunk.js","webpack:////Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/elm.js"],"names":["webpackJsonppanneau","369","module","exports","ace","define","acequire","oop","TextHighlightRules","ElmHighlightRules","keywordMapper","this","createKeywordMapper","keyword","escapeRe","smallRe","source","largeRe","idRe","$rules","start","token","regex","next","value","length","onMatch","currentState","stack","markdown","defaultToken","blockComment","push","docComment","string","stringGap","normalizeRules","inherits","Range","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","replace","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","match","i","index","openingBracketBlock","range","getCommentFoldRange","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","TextMode","Mode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","nestable","$id"],"mappings":"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","file":"vendor/brace/mode/elm.chunk.js","sourcesContent":["webpackJsonppanneau([197],{\n\n/***/ 369:\n/***/ (function(module, exports) {\n\nace.define(\"ace/mode/elm_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextHighlightRules=acequire(\"./text_highlight_rules\").TextHighlightRules;var ElmHighlightRules=function ElmHighlightRules(){var keywordMapper=this.createKeywordMapper({\"keyword\":\"as|case|class|data|default|deriving|do|else|export|foreign|\"+\"hiding|jsevent|if|import|in|infix|infixl|infixr|instance|let|\"+\"module|newtype|of|open|then|type|where|_|port|\\u03BB\"},\"identifier\");var escapeRe=/\\\\(\\d+|['\"\\\\&trnbvf])/;var smallRe=/[a-z_]/.source;var largeRe=/[A-Z]/.source;var idRe=/[a-z_A-Z0-9']/.source;this.$rules={start:[{token:\"string.start\",regex:'\"',next:\"string\"},{token:\"string.character\",regex:\"'(?:\"+escapeRe.source+\"|.)'?\"},{regex:/0(?:[xX][0-9A-Fa-f]+|[oO][0-7]+)|\\d+(\\.\\d+)?([eE][-+]?\\d*)?/,token:\"constant.numeric\"},{token:\"comment\",regex:\"--.*\"},{token:\"keyword\",regex:/\\.\\.|\\||:|=|\\\\|\"|->|<-|\\u2192/},{token:\"keyword.operator\",regex:/[-!#$%&*+.\\/<=>?@\\\\^|~:\\u03BB\\u2192]+/},{token:\"operator.punctuation\",regex:/[,;`]/},{regex:largeRe+idRe+\"+\\\\.?\",token:function token(value){if(value[value.length-1]==\".\")return\"entity.name.function\";return\"constant.language\";}},{regex:\"^\"+smallRe+idRe+\"+\",token:function token(value){return\"constant.language\";}},{token:keywordMapper,regex:\"[\\\\w\\\\xff-\\\\u218e\\\\u2455-\\\\uffff]+\\\\b\"},{regex:\"{-#?\",token:\"comment.start\",onMatch:function onMatch(value,currentState,stack){this.next=value.length==2?\"blockComment\":\"docComment\";return this.token;}},{token:\"variable.language\",regex:/\\[markdown\\|/,next:\"markdown\"},{token:\"paren.lparen\",regex:/[\\[({]/},{token:\"paren.rparen\",regex:/[\\])}]/}],markdown:[{regex:/\\|\\]/,next:\"start\"},{defaultToken:\"string\"}],blockComment:[{regex:\"{-\",token:\"comment.start\",push:\"blockComment\"},{regex:\"-}\",token:\"comment.end\",next:\"pop\"},{defaultToken:\"comment\"}],docComment:[{regex:\"{-\",token:\"comment.start\",push:\"docComment\"},{regex:\"-}\",token:\"comment.end\",next:\"pop\"},{defaultToken:\"doc.comment\"}],string:[{token:\"constant.language.escape\",regex:escapeRe},{token:\"text\",regex:/\\\\(\\s|$)/,next:\"stringGap\"},{token:\"string.end\",regex:'\"',next:\"start\"},{defaultToken:\"string\"}],stringGap:[{token:\"text\",regex:/\\\\/,next:\"string\"},{token:\"error\",regex:\"\",next:\"start\"}]};this.normalizeRules();};oop.inherits(ElmHighlightRules,TextHighlightRules);exports.ElmHighlightRules=ElmHighlightRules;});ace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../../lib/oop\");var Range=acequire(\"../../range\").Range;var BaseFoldMode=acequire(\"./fold_mode\").FoldMode;var FoldMode=exports.FoldMode=function(commentRegex){if(commentRegex){this.foldingStartMarker=new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/,\"|\"+commentRegex.start));this.foldingStopMarker=new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/,\"|\"+commentRegex.end));}};oop.inherits(FoldMode,BaseFoldMode);(function(){this.foldingStartMarker=/(\\{|\\[)[^\\}\\]]*$|^\\s*(\\/\\*)/;this.foldingStopMarker=/^[^\\[\\{]*(\\}|\\])|^[\\s\\*]*(\\*\\/)/;this.singleLineBlockCommentRe=/^\\s*(\\/\\*).*\\*\\/\\s*$/;this.tripleStarBlockCommentRe=/^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;this.startRegionRe=/^\\s*(\\/\\*|\\/\\/)#?region\\b/;this._getFoldWidgetBase=this.getFoldWidget;this.getFoldWidget=function(session,foldStyle,row){var line=session.getLine(row);if(this.singleLineBlockCommentRe.test(line)){if(!this.startRegionRe.test(line)&&!this.tripleStarBlockCommentRe.test(line))return\"\";}var fw=this._getFoldWidgetBase(session,foldStyle,row);if(!fw&&this.startRegionRe.test(line))return\"start\";// lineCommentRegionStart\nreturn fw;};this.getFoldWidgetRange=function(session,foldStyle,row,forceMultiline){var line=session.getLine(row);if(this.startRegionRe.test(line))return this.getCommentRegionBlock(session,line,row);var match=line.match(this.foldingStartMarker);if(match){var i=match.index;if(match[1])return this.openingBracketBlock(session,match[1],row,i);var range=session.getCommentFoldRange(row,i+match[0].length,1);if(range&&!range.isMultiLine()){if(forceMultiline){range=this.getSectionRange(session,row);}else if(foldStyle!=\"all\")range=null;}return range;}if(foldStyle===\"markbegin\")return;var match=line.match(this.foldingStopMarker);if(match){var i=match.index+match[0].length;if(match[1])return this.closingBracketBlock(session,match[1],row,i);return session.getCommentFoldRange(row,i,-1);}};this.getSectionRange=function(session,row){var line=session.getLine(row);var startIndent=line.search(/\\S/);var startRow=row;var startColumn=line.length;row=row+1;var endRow=row;var maxRow=session.getLength();while(++row<maxRow){line=session.getLine(row);var indent=line.search(/\\S/);if(indent===-1)continue;if(startIndent>indent)break;var subRange=this.getFoldWidgetRange(session,\"all\",row);if(subRange){if(subRange.start.row<=startRow){break;}else if(subRange.isMultiLine()){row=subRange.end.row;}else if(startIndent==indent){break;}}endRow=row;}return new Range(startRow,startColumn,endRow,session.getLine(endRow).length);};this.getCommentRegionBlock=function(session,line,row){var startColumn=line.search(/\\s*$/);var maxRow=session.getLength();var startRow=row;var re=/^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;var depth=1;while(++row<maxRow){line=session.getLine(row);var m=re.exec(line);if(!m)continue;if(m[1])depth--;else depth++;if(!depth)break;}var endRow=row;if(endRow>startRow){return new Range(startRow,startColumn,endRow,line.length);}};}).call(FoldMode.prototype);});ace.define(\"ace/mode/elm\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/elm_highlight_rules\",\"ace/mode/folding/cstyle\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextMode=acequire(\"./text\").Mode;var HighlightRules=acequire(\"./elm_highlight_rules\").ElmHighlightRules;var FoldMode=acequire(\"./folding/cstyle\").FoldMode;var Mode=function Mode(){this.HighlightRules=HighlightRules;this.foldingRules=new FoldMode();this.$behaviour=this.$defaultBehaviour;};oop.inherits(Mode,TextMode);(function(){this.lineCommentStart=\"--\";this.blockComment={start:\"{-\",end:\"-}\",nestable:true};this.$id=\"ace/mode/elm\";}).call(Mode.prototype);exports.Mode=Mode;});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// vendor/brace/mode/elm.chunk.js","ace.define(\"ace/mode/elm_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar ElmHighlightRules = function() {\n    var keywordMapper = this.createKeywordMapper({\n       \"keyword\": \"as|case|class|data|default|deriving|do|else|export|foreign|\" +\n            \"hiding|jsevent|if|import|in|infix|infixl|infixr|instance|let|\" +\n            \"module|newtype|of|open|then|type|where|_|port|\\u03BB\"\n    }, \"identifier\");\n    \n    var escapeRe = /\\\\(\\d+|['\"\\\\&trnbvf])/;\n    \n    var smallRe = /[a-z_]/.source;\n    var largeRe = /[A-Z]/.source;\n    var idRe = /[a-z_A-Z0-9']/.source;\n\n    this.$rules = {\n        start: [{\n            token: \"string.start\",\n            regex: '\"',\n            next: \"string\"\n        }, {\n            token: \"string.character\",\n            regex: \"'(?:\" + escapeRe.source + \"|.)'?\"\n        }, {\n            regex: /0(?:[xX][0-9A-Fa-f]+|[oO][0-7]+)|\\d+(\\.\\d+)?([eE][-+]?\\d*)?/,\n            token: \"constant.numeric\"\n        }, {\n            token: \"comment\",\n            regex: \"--.*\"\n        }, {\n            token : \"keyword\",\n            regex : /\\.\\.|\\||:|=|\\\\|\"|->|<-|\\u2192/\n        }, {\n            token : \"keyword.operator\",\n            regex : /[-!#$%&*+.\\/<=>?@\\\\^|~:\\u03BB\\u2192]+/\n        }, {\n            token : \"operator.punctuation\",\n            regex : /[,;`]/\n        }, {\n            regex : largeRe + idRe + \"+\\\\.?\",\n            token : function(value) {\n                if (value[value.length - 1] == \".\")\n                    return \"entity.name.function\"; \n                return \"constant.language\"; \n            }\n        }, {\n            regex : \"^\" + smallRe  + idRe + \"+\",\n            token : function(value) {\n                return \"constant.language\"; \n            }\n        }, {\n            token : keywordMapper,\n            regex : \"[\\\\w\\\\xff-\\\\u218e\\\\u2455-\\\\uffff]+\\\\b\"\n        }, {\n            regex: \"{-#?\",\n            token: \"comment.start\",\n            onMatch: function(value, currentState, stack) {\n                this.next = value.length == 2 ? \"blockComment\" : \"docComment\";\n                return this.token;\n            }\n        }, {\n            token: \"variable.language\",\n            regex: /\\[markdown\\|/,\n            next: \"markdown\"\n        }, {\n            token: \"paren.lparen\",\n            regex: /[\\[({]/ \n        }, {\n            token: \"paren.rparen\",\n            regex: /[\\])}]/\n        } ],\n        markdown: [{\n            regex: /\\|\\]/,\n            next: \"start\"\n        }, {\n            defaultToken : \"string\"\n        }],\n        blockComment: [{\n            regex: \"{-\",\n            token: \"comment.start\",\n            push: \"blockComment\"\n        }, {\n            regex: \"-}\",\n            token: \"comment.end\",\n            next: \"pop\"\n        }, {\n            defaultToken: \"comment\"\n        }],\n        docComment: [{\n            regex: \"{-\",\n            token: \"comment.start\",\n            push: \"docComment\"\n        }, {\n            regex: \"-}\",\n            token: \"comment.end\",\n            next: \"pop\" \n        }, {\n            defaultToken: \"doc.comment\"\n        }],\n        string: [{\n            token: \"constant.language.escape\",\n            regex: escapeRe\n        }, {\n            token: \"text\",\n            regex: /\\\\(\\s|$)/,\n            next: \"stringGap\"\n        }, {\n            token: \"string.end\",\n            regex: '\"',\n            next: \"start\"\n        }, {\n            defaultToken: \"string\"\n        }],\n        stringGap: [{\n            token: \"text\",\n            regex: /\\\\/,\n            next: \"string\"\n        }, {\n            token: \"error\",\n            regex: \"\",\n            next: \"start\"\n        }]\n    };\n    \n    this.normalizeRules();\n};\n\noop.inherits(ElmHighlightRules, TextHighlightRules);\n\nexports.ElmHighlightRules = ElmHighlightRules;\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar Range = acequire(\"../../range\").Range;\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    \n    this.foldingStartMarker = /(\\{|\\[)[^\\}\\]]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{]*(\\}|\\])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n    \n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n    \n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n    \n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n    \n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        \n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        \n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n                \n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            \n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n            \n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    \n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            \n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        \n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/elm\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/elm_highlight_rules\",\"ace/mode/folding/cstyle\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar HighlightRules = acequire(\"./elm_highlight_rules\").ElmHighlightRules;\nvar FoldMode = acequire(\"./folding/cstyle\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = HighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.lineCommentStart = \"--\";\n    this.blockComment = {start: \"{-\", end: \"-}\", nestable: true};\n    this.$id = \"ace/mode/elm\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n\n\n\n// WEBPACK FOOTER //\n// /Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/elm.js"],"sourceRoot":""}