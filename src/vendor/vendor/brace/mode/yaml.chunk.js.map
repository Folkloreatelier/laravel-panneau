{"version":3,"sources":["webpack:///vendor/brace/mode/yaml.chunk.js","webpack:////Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/yaml.js"],"names":["webpackJsonppanneau","480","module","exports","ace","define","acequire","oop","TextHighlightRules","YamlHighlightRules","this","$rules","start","token","regex","next","qqstring","inherits","Range","MatchingBraceOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","getLine","match","column","length","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","BaseFoldMode","FoldMode","getFoldWidgetRange","session","foldStyle","range","indentationBlock","re","startLevel","search","startColumn","maxRow","getLength","startRow","endRow","level","endColumn","getFoldWidget","prev","prevIndent","nextIndent","foldWidgets","TextMode","Mode","HighlightRules","$outdent","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","getNextLineIndent","state","tab","$id"],"mappings":"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","file":"vendor/brace/mode/yaml.chunk.js","sourcesContent":["webpackJsonppanneau([112],{\n\n/***/ 480:\n/***/ (function(module, exports) {\n\nace.define(\"ace/mode/yaml_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextHighlightRules=acequire(\"./text_highlight_rules\").TextHighlightRules;var YamlHighlightRules=function YamlHighlightRules(){this.$rules={\"start\":[{token:\"comment\",regex:\"#.*$\"},{token:\"list.markup\",regex:/^(?:-{3}|\\.{3})\\s*(?=#|$)/},{token:\"list.markup\",regex:/^\\s*[\\-?](?:$|\\s)/},{token:\"constant\",regex:\"!![\\\\w//]+\"},{token:\"constant.language\",regex:\"[&\\\\*][a-zA-Z0-9-_]+\"},{token:[\"meta.tag\",\"keyword\"],regex:/^(\\s*\\w.*?)(:(?:\\s+|$))/},{token:[\"meta.tag\",\"keyword\"],regex:/(\\w+?)(\\s*:(?:\\s+|$))/},{token:\"keyword.operator\",regex:\"<<\\\\w*:\\\\w*\"},{token:\"keyword.operator\",regex:\"-\\\\s*(?=[{])\"},{token:\"string\",// single line\nregex:'[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'},{token:\"string\",// multi line string start\nregex:'[|>][-+\\\\d\\\\s]*$',next:\"qqstring\"},{token:\"string\",// single quoted string\nregex:\"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"},{token:\"constant.numeric\",// float\nregex:/(\\b|[+\\-\\.])[\\d_]+(?:(?:\\.[\\d_]*)?(?:[eE][+\\-]?[\\d_]+)?)/},{token:\"constant.numeric\",// other number\nregex:/[+\\-]?\\.inf\\b|NaN\\b|0x[\\dA-Fa-f_]+|0b[10_]+/},{token:\"constant.language.boolean\",regex:\"\\\\b(?:true|false|TRUE|FALSE|True|False|yes|no)\\\\b\"},{token:\"paren.lparen\",regex:\"[[({]\"},{token:\"paren.rparen\",regex:\"[\\\\])}]\"}],\"qqstring\":[{token:\"string\",regex:'(?=(?:(?:\\\\\\\\.)|(?:[^:]))*?:)',next:\"start\"},{token:\"string\",regex:'.+'}]};};oop.inherits(YamlHighlightRules,TextHighlightRules);exports.YamlHighlightRules=YamlHighlightRules;});ace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"],function(acequire,exports,module){\"use strict\";var Range=acequire(\"../range\").Range;var MatchingBraceOutdent=function MatchingBraceOutdent(){};(function(){this.checkOutdent=function(line,input){if(!/^\\s+$/.test(line))return false;return /^\\s*\\}/.test(input);};this.autoOutdent=function(doc,row){var line=doc.getLine(row);var match=line.match(/^(\\s*\\})/);if(!match)return 0;var column=match[1].length;var openBracePos=doc.findMatchingBracket({row:row,column:column});if(!openBracePos||openBracePos.row==row)return 0;var indent=this.$getIndent(doc.getLine(openBracePos.row));doc.replace(new Range(row,0,row,column-1),indent);};this.$getIndent=function(line){return line.match(/^\\s*/)[0];};}).call(MatchingBraceOutdent.prototype);exports.MatchingBraceOutdent=MatchingBraceOutdent;});ace.define(\"ace/mode/folding/coffee\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../../lib/oop\");var BaseFoldMode=acequire(\"./fold_mode\").FoldMode;var Range=acequire(\"../../range\").Range;var FoldMode=exports.FoldMode=function(){};oop.inherits(FoldMode,BaseFoldMode);(function(){this.getFoldWidgetRange=function(session,foldStyle,row){var range=this.indentationBlock(session,row);if(range)return range;var re=/\\S/;var line=session.getLine(row);var startLevel=line.search(re);if(startLevel==-1||line[startLevel]!=\"#\")return;var startColumn=line.length;var maxRow=session.getLength();var startRow=row;var endRow=row;while(++row<maxRow){line=session.getLine(row);var level=line.search(re);if(level==-1)continue;if(line[level]!=\"#\")break;endRow=row;}if(endRow>startRow){var endColumn=session.getLine(endRow).length;return new Range(startRow,startColumn,endRow,endColumn);}};this.getFoldWidget=function(session,foldStyle,row){var line=session.getLine(row);var indent=line.search(/\\S/);var next=session.getLine(row+1);var prev=session.getLine(row-1);var prevIndent=prev.search(/\\S/);var nextIndent=next.search(/\\S/);if(indent==-1){session.foldWidgets[row-1]=prevIndent!=-1&&prevIndent<nextIndent?\"start\":\"\";return\"\";}if(prevIndent==-1){if(indent==nextIndent&&line[indent]==\"#\"&&next[indent]==\"#\"){session.foldWidgets[row-1]=\"\";session.foldWidgets[row+1]=\"\";return\"start\";}}else if(prevIndent==indent&&line[indent]==\"#\"&&prev[indent]==\"#\"){if(session.getLine(row-2).search(/\\S/)==-1){session.foldWidgets[row-1]=\"start\";session.foldWidgets[row+1]=\"\";return\"\";}}if(prevIndent!=-1&&prevIndent<indent)session.foldWidgets[row-1]=\"start\";else session.foldWidgets[row-1]=\"\";if(indent<nextIndent)return\"start\";else return\"\";};}).call(FoldMode.prototype);});ace.define(\"ace/mode/yaml\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/yaml_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/mode/folding/coffee\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextMode=acequire(\"./text\").Mode;var YamlHighlightRules=acequire(\"./yaml_highlight_rules\").YamlHighlightRules;var MatchingBraceOutdent=acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;var FoldMode=acequire(\"./folding/coffee\").FoldMode;var Mode=function Mode(){this.HighlightRules=YamlHighlightRules;this.$outdent=new MatchingBraceOutdent();this.foldingRules=new FoldMode();this.$behaviour=this.$defaultBehaviour;};oop.inherits(Mode,TextMode);(function(){this.lineCommentStart=\"#\";this.getNextLineIndent=function(state,line,tab){var indent=this.$getIndent(line);if(state==\"start\"){var match=line.match(/^.*[\\{\\(\\[]\\s*$/);if(match){indent+=tab;}}return indent;};this.checkOutdent=function(state,line,input){return this.$outdent.checkOutdent(line,input);};this.autoOutdent=function(state,doc,row){this.$outdent.autoOutdent(doc,row);};this.$id=\"ace/mode/yaml\";}).call(Mode.prototype);exports.Mode=Mode;});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// vendor/brace/mode/yaml.chunk.js","ace.define(\"ace/mode/yaml_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar YamlHighlightRules = function() {\n    this.$rules = {\n        \"start\" : [\n            {\n                token : \"comment\",\n                regex : \"#.*$\"\n            }, {\n                token : \"list.markup\",\n                regex : /^(?:-{3}|\\.{3})\\s*(?=#|$)/     \n            },  {\n                token : \"list.markup\",\n                regex : /^\\s*[\\-?](?:$|\\s)/     \n            }, {\n                token: \"constant\",\n                regex: \"!![\\\\w//]+\"\n            }, {\n                token: \"constant.language\",\n                regex: \"[&\\\\*][a-zA-Z0-9-_]+\"\n            }, {\n                token: [\"meta.tag\", \"keyword\"],\n                regex: /^(\\s*\\w.*?)(:(?:\\s+|$))/\n            },{\n                token: [\"meta.tag\", \"keyword\"],\n                regex: /(\\w+?)(\\s*:(?:\\s+|$))/\n            }, {\n                token : \"keyword.operator\",\n                regex : \"<<\\\\w*:\\\\w*\"\n            }, {\n                token : \"keyword.operator\",\n                regex : \"-\\\\s*(?=[{])\"\n            }, {\n                token : \"string\", // single line\n                regex : '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n            }, {\n                token : \"string\", // multi line string start\n                regex : '[|>][-+\\\\d\\\\s]*$',\n                next : \"qqstring\"\n            }, {\n                token : \"string\", // single quoted string\n                regex : \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n            }, {\n                token : \"constant.numeric\", // float\n                regex : /(\\b|[+\\-\\.])[\\d_]+(?:(?:\\.[\\d_]*)?(?:[eE][+\\-]?[\\d_]+)?)/\n            }, {\n                token : \"constant.numeric\", // other number\n                regex : /[+\\-]?\\.inf\\b|NaN\\b|0x[\\dA-Fa-f_]+|0b[10_]+/\n            }, {\n                token : \"constant.language.boolean\",\n                regex : \"\\\\b(?:true|false|TRUE|FALSE|True|False|yes|no)\\\\b\"\n            }, {\n                token : \"paren.lparen\",\n                regex : \"[[({]\"\n            }, {\n                token : \"paren.rparen\",\n                regex : \"[\\\\])}]\"\n            }\n        ],\n        \"qqstring\" : [\n            {\n                token : \"string\",\n                regex : '(?=(?:(?:\\\\\\\\.)|(?:[^:]))*?:)',\n                next : \"start\"\n            }, {\n                token : \"string\",\n                regex : '.+'\n            }\n        ]};\n\n};\n\noop.inherits(YamlHighlightRules, TextHighlightRules);\n\nexports.YamlHighlightRules = YamlHighlightRules;\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar Range = acequire(\"../range\").Range;\n\nvar MatchingBraceOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        return line.match(/^\\s*/)[0];\n    };\n\n}).call(MatchingBraceOutdent.prototype);\n\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\n\nace.define(\"ace/mode/folding/coffee\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\nvar Range = acequire(\"../../range\").Range;\n\nvar FoldMode = exports.FoldMode = function() {};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var range = this.indentationBlock(session, row);\n        if (range)\n            return range;\n\n        var re = /\\S/;\n        var line = session.getLine(row);\n        var startLevel = line.search(re);\n        if (startLevel == -1 || line[startLevel] != \"#\")\n            return;\n\n        var startColumn = line.length;\n        var maxRow = session.getLength();\n        var startRow = row;\n        var endRow = row;\n\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var level = line.search(re);\n\n            if (level == -1)\n                continue;\n\n            if (line[level] != \"#\")\n                break;\n\n            endRow = row;\n        }\n\n        if (endRow > startRow) {\n            var endColumn = session.getLine(endRow).length;\n            return new Range(startRow, startColumn, endRow, endColumn);\n        }\n    };\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        var next = session.getLine(row + 1);\n        var prev = session.getLine(row - 1);\n        var prevIndent = prev.search(/\\S/);\n        var nextIndent = next.search(/\\S/);\n\n        if (indent == -1) {\n            session.foldWidgets[row - 1] = prevIndent!= -1 && prevIndent < nextIndent ? \"start\" : \"\";\n            return \"\";\n        }\n        if (prevIndent == -1) {\n            if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n                session.foldWidgets[row - 1] = \"\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"start\";\n            }\n        } else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n            if (session.getLine(row - 2).search(/\\S/) == -1) {\n                session.foldWidgets[row - 1] = \"start\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"\";\n            }\n        }\n\n        if (prevIndent!= -1 && prevIndent < indent)\n            session.foldWidgets[row - 1] = \"start\";\n        else\n            session.foldWidgets[row - 1] = \"\";\n\n        if (indent < nextIndent)\n            return \"start\";\n        else\n            return \"\";\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/yaml\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/yaml_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/mode/folding/coffee\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar YamlHighlightRules = acequire(\"./yaml_highlight_rules\").YamlHighlightRules;\nvar MatchingBraceOutdent = acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar FoldMode = acequire(\"./folding/coffee\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = YamlHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n\n    this.lineCommentStart = \"#\";\n    \n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n\n        if (state == \"start\") {\n            var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        }\n\n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n\n\n    this.$id = \"ace/mode/yaml\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n\n});\n\n\n\n// WEBPACK FOOTER //\n// /Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/yaml.js"],"sourceRoot":""}