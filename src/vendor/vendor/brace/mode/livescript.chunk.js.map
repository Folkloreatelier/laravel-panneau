{"version":3,"sources":["webpack:///vendor/brace/mode/livescript.chunk.js","webpack:////Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/livescript.js"],"names":["webpackJsonppanneau","284","module","exports","ace","define","acequire","Range","MatchingBraceOutdent","this","checkOutdent","line","input","test","autoOutdent","doc","row","getLine","match","column","length","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","extend$","sub","sup","fun","superclass","constructor","extended","import$","obj","src","own","hasOwnProperty","key","identifier","LiveScriptMode","keywordend","stringfill","Mode","that","$tokenizer","Rules","$outdent","$id","indenter","displayName","RegExp","getNextLineIndent","state","tab","tokens","getLineTokens","type","lineCommentStart","blockComment","start","end","ref$","defaultToken","token","regex","next","heregex","comment","qdoc","qqdoc","qstring","qqstring","js","words"],"mappings":"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","file":"vendor/brace/mode/livescript.chunk.js","sourcesContent":["webpackJsonppanneau([167],{\n\n/***/ 284:\n/***/ (function(module, exports) {\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"],function(acequire,exports,module){\"use strict\";var Range=acequire(\"../range\").Range;var MatchingBraceOutdent=function MatchingBraceOutdent(){};(function(){this.checkOutdent=function(line,input){if(!/^\\s+$/.test(line))return false;return /^\\s*\\}/.test(input);};this.autoOutdent=function(doc,row){var line=doc.getLine(row);var match=line.match(/^(\\s*\\})/);if(!match)return 0;var column=match[1].length;var openBracePos=doc.findMatchingBracket({row:row,column:column});if(!openBracePos||openBracePos.row==row)return 0;var indent=this.$getIndent(doc.getLine(openBracePos.row));doc.replace(new Range(row,0,row,column-1),indent);};this.$getIndent=function(line){return line.match(/^\\s*/)[0];};}).call(MatchingBraceOutdent.prototype);exports.MatchingBraceOutdent=MatchingBraceOutdent;});ace.define(\"ace/mode/livescript\",[\"require\",\"exports\",\"module\",\"ace/tokenizer\",\"ace/mode/matching_brace_outdent\",\"ace/mode/text\"],function(acequire,exports,module){var identifier,LiveScriptMode,keywordend,stringfill;identifier=\"(?![\\\\d\\\\s])[$\\\\w\\\\xAA-\\\\uFFDC](?:(?!\\\\s)[$\\\\w\\\\xAA-\\\\uFFDC]|-[A-Za-z])*\";exports.Mode=LiveScriptMode=function(superclass){var indenter,prototype=extend$((import$(LiveScriptMode,superclass).displayName='LiveScriptMode',LiveScriptMode),superclass).prototype,constructor=LiveScriptMode;function LiveScriptMode(){var that;this.$tokenizer=new(acequire('../tokenizer').Tokenizer)(LiveScriptMode.Rules);if(that=acequire('../mode/matching_brace_outdent')){this.$outdent=new that.MatchingBraceOutdent();}this.$id=\"ace/mode/livescript\";}indenter=RegExp('(?:[({[=:]|[-~]>|\\\\b(?:e(?:lse|xport)|d(?:o|efault)|t(?:ry|hen)|finally|import(?:\\\\s*all)?|const|var|let|new|catch(?:\\\\s*'+identifier+')?))\\\\s*$');prototype.getNextLineIndent=function(state,line,tab){var indent,tokens;indent=this.$getIndent(line);tokens=this.$tokenizer.getLineTokens(line,state).tokens;if(!(tokens.length&&tokens[tokens.length-1].type==='comment')){if(state==='start'&&indenter.test(line)){indent+=tab;}}return indent;};prototype.lineCommentStart=\"#\";prototype.blockComment={start:\"###\",end:\"###\"};prototype.checkOutdent=function(state,line,input){var ref$;return(ref$=this.$outdent)!=null?ref$.checkOutdent(line,input):void 8;};prototype.autoOutdent=function(state,doc,row){var ref$;return(ref$=this.$outdent)!=null?ref$.autoOutdent(doc,row):void 8;};return LiveScriptMode;}(acequire('../mode/text').Mode);keywordend='(?![$\\\\w]|-[A-Za-z]|\\\\s*:(?![:=]))';stringfill={defaultToken:'string'};LiveScriptMode.Rules={start:[{token:'keyword',regex:'(?:t(?:h(?:is|row|en)|ry|ypeof!?)|c(?:on(?:tinue|st)|a(?:se|tch)|lass)|i(?:n(?:stanceof)?|mp(?:ort(?:\\\\s+all)?|lements)|[fs])|d(?:e(?:fault|lete|bugger)|o)|f(?:or(?:\\\\s+own)?|inally|unction)|s(?:uper|witch)|e(?:lse|x(?:tends|port)|val)|a(?:nd|rguments)|n(?:ew|ot)|un(?:less|til)|w(?:hile|ith)|o[fr]|return|break|let|var|loop)'+keywordend},{token:'constant.language',regex:'(?:true|false|yes|no|on|off|null|void|undefined)'+keywordend},{token:'invalid.illegal',regex:'(?:p(?:ackage|r(?:ivate|otected)|ublic)|i(?:mplements|nterface)|enum|static|yield)'+keywordend},{token:'language.support.class',regex:'(?:R(?:e(?:gExp|ferenceError)|angeError)|S(?:tring|yntaxError)|E(?:rror|valError)|Array|Boolean|Date|Function|Number|Object|TypeError|URIError)'+keywordend},{token:'language.support.function',regex:'(?:is(?:NaN|Finite)|parse(?:Int|Float)|Math|JSON|(?:en|de)codeURI(?:Component)?)'+keywordend},{token:'variable.language',regex:'(?:t(?:hat|il|o)|f(?:rom|allthrough)|it|by|e)'+keywordend},{token:'identifier',regex:identifier+'\\\\s*:(?![:=])'},{token:'variable',regex:identifier},{token:'keyword.operator',regex:'(?:\\\\.{3}|\\\\s+\\\\?)'},{token:'keyword.variable',regex:'(?:@+|::|\\\\.\\\\.)',next:'key'},{token:'keyword.operator',regex:'\\\\.\\\\s*',next:'key'},{token:'string',regex:'\\\\\\\\\\\\S[^\\\\s,;)}\\\\]]*'},{token:'string.doc',regex:'\\'\\'\\'',next:'qdoc'},{token:'string.doc',regex:'\"\"\"',next:'qqdoc'},{token:'string',regex:'\\'',next:'qstring'},{token:'string',regex:'\"',next:'qqstring'},{token:'string',regex:'`',next:'js'},{token:'string',regex:'<\\\\[',next:'words'},{token:'string.regex',regex:'//',next:'heregex'},{token:'comment.doc',regex:'/\\\\*',next:'comment'},{token:'comment',regex:'#.*'},{token:'string.regex',regex:'\\\\/(?:[^[\\\\/\\\\n\\\\\\\\]*(?:(?:\\\\\\\\.|\\\\[[^\\\\]\\\\n\\\\\\\\]*(?:\\\\\\\\.[^\\\\]\\\\n\\\\\\\\]*)*\\\\])[^[\\\\/\\\\n\\\\\\\\]*)*)\\\\/[gimy$]{0,4}',next:'key'},{token:'constant.numeric',regex:'(?:0x[\\\\da-fA-F][\\\\da-fA-F_]*|(?:[2-9]|[12]\\\\d|3[0-6])r[\\\\da-zA-Z][\\\\da-zA-Z_]*|(?:\\\\d[\\\\d_]*(?:\\\\.\\\\d[\\\\d_]*)?|\\\\.\\\\d[\\\\d_]*)(?:e[+-]?\\\\d[\\\\d_]*)?[\\\\w$]*)'},{token:'lparen',regex:'[({[]'},{token:'rparen',regex:'[)}\\\\]]',next:'key'},{token:'keyword.operator',regex:'[\\\\^!|&%+\\\\-]+'},{token:'text',regex:'\\\\s+'}],heregex:[{token:'string.regex',regex:'.*?//[gimy$?]{0,4}',next:'start'},{token:'string.regex',regex:'\\\\s*#{'},{token:'comment.regex',regex:'\\\\s+(?:#.*)?'},{defaultToken:'string.regex'}],key:[{token:'keyword.operator',regex:'[.?@!]+'},{token:'identifier',regex:identifier,next:'start'},{token:'text',regex:'',next:'start'}],comment:[{token:'comment.doc',regex:'.*?\\\\*/',next:'start'},{defaultToken:'comment.doc'}],qdoc:[{token:'string',regex:\".*?'''\",next:'key'},stringfill],qqdoc:[{token:'string',regex:'.*?\"\"\"',next:'key'},stringfill],qstring:[{token:'string',regex:'[^\\\\\\\\\\']*(?:\\\\\\\\.[^\\\\\\\\\\']*)*\\'',next:'key'},stringfill],qqstring:[{token:'string',regex:'[^\\\\\\\\\"]*(?:\\\\\\\\.[^\\\\\\\\\"]*)*\"',next:'key'},stringfill],js:[{token:'string',regex:'[^\\\\\\\\`]*(?:\\\\\\\\.[^\\\\\\\\`]*)*`',next:'key'},stringfill],words:[{token:'string',regex:'.*?\\\\]>',next:'key'},stringfill]};function extend$(sub,sup){function fun(){}fun.prototype=(sub.superclass=sup).prototype;(sub.prototype=new fun()).constructor=sub;if(typeof sup.extended=='function')sup.extended(sub);return sub;}function import$(obj,src){var own={}.hasOwnProperty;for(var key in src){if(own.call(src,key))obj[key]=src[key];}return obj;}});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// vendor/brace/mode/livescript.chunk.js","ace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar Range = acequire(\"../range\").Range;\n\nvar MatchingBraceOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        return line.match(/^\\s*/)[0];\n    };\n\n}).call(MatchingBraceOutdent.prototype);\n\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\n\nace.define(\"ace/mode/livescript\",[\"require\",\"exports\",\"module\",\"ace/tokenizer\",\"ace/mode/matching_brace_outdent\",\"ace/mode/text\"], function(acequire, exports, module){\n  var identifier, LiveScriptMode, keywordend, stringfill;\n  identifier = '(?![\\\\d\\\\s])[$\\\\w\\\\xAA-\\\\uFFDC](?:(?!\\\\s)[$\\\\w\\\\xAA-\\\\uFFDC]|-[A-Za-z])*';\n  exports.Mode = LiveScriptMode = (function(superclass){\n    var indenter, prototype = extend$((import$(LiveScriptMode, superclass).displayName = 'LiveScriptMode', LiveScriptMode), superclass).prototype, constructor = LiveScriptMode;\n    function LiveScriptMode(){\n      var that;\n      this.$tokenizer = new (acequire('../tokenizer')).Tokenizer(LiveScriptMode.Rules);\n      if (that = acequire('../mode/matching_brace_outdent')) {\n        this.$outdent = new that.MatchingBraceOutdent;\n      }\n      this.$id = \"ace/mode/livescript\";\n    }\n    indenter = RegExp('(?:[({[=:]|[-~]>|\\\\b(?:e(?:lse|xport)|d(?:o|efault)|t(?:ry|hen)|finally|import(?:\\\\s*all)?|const|var|let|new|catch(?:\\\\s*' + identifier + ')?))\\\\s*$');\n    prototype.getNextLineIndent = function(state, line, tab){\n      var indent, tokens;\n      indent = this.$getIndent(line);\n      tokens = this.$tokenizer.getLineTokens(line, state).tokens;\n      if (!(tokens.length && tokens[tokens.length - 1].type === 'comment')) {\n        if (state === 'start' && indenter.test(line)) {\n          indent += tab;\n        }\n      }\n      return indent;\n    };\n    prototype.lineCommentStart = \"#\";\n    prototype.blockComment = {start: \"###\", end: \"###\"};\n    prototype.checkOutdent = function(state, line, input){\n      var ref$;\n      return (ref$ = this.$outdent) != null ? ref$.checkOutdent(line, input) : void 8;\n    };\n    prototype.autoOutdent = function(state, doc, row){\n      var ref$;\n      return (ref$ = this.$outdent) != null ? ref$.autoOutdent(doc, row) : void 8;\n    };\n    return LiveScriptMode;\n  }(acequire('../mode/text').Mode));\n  keywordend = '(?![$\\\\w]|-[A-Za-z]|\\\\s*:(?![:=]))';\n  stringfill = {\n    defaultToken: 'string'\n  };\n  LiveScriptMode.Rules = {\n    start: [\n      {\n        token: 'keyword',\n        regex: '(?:t(?:h(?:is|row|en)|ry|ypeof!?)|c(?:on(?:tinue|st)|a(?:se|tch)|lass)|i(?:n(?:stanceof)?|mp(?:ort(?:\\\\s+all)?|lements)|[fs])|d(?:e(?:fault|lete|bugger)|o)|f(?:or(?:\\\\s+own)?|inally|unction)|s(?:uper|witch)|e(?:lse|x(?:tends|port)|val)|a(?:nd|rguments)|n(?:ew|ot)|un(?:less|til)|w(?:hile|ith)|o[fr]|return|break|let|var|loop)' + keywordend\n      }, {\n        token: 'constant.language',\n        regex: '(?:true|false|yes|no|on|off|null|void|undefined)' + keywordend\n      }, {\n        token: 'invalid.illegal',\n        regex: '(?:p(?:ackage|r(?:ivate|otected)|ublic)|i(?:mplements|nterface)|enum|static|yield)' + keywordend\n      }, {\n        token: 'language.support.class',\n        regex: '(?:R(?:e(?:gExp|ferenceError)|angeError)|S(?:tring|yntaxError)|E(?:rror|valError)|Array|Boolean|Date|Function|Number|Object|TypeError|URIError)' + keywordend\n      }, {\n        token: 'language.support.function',\n        regex: '(?:is(?:NaN|Finite)|parse(?:Int|Float)|Math|JSON|(?:en|de)codeURI(?:Component)?)' + keywordend\n      }, {\n        token: 'variable.language',\n        regex: '(?:t(?:hat|il|o)|f(?:rom|allthrough)|it|by|e)' + keywordend\n      }, {\n        token: 'identifier',\n        regex: identifier + '\\\\s*:(?![:=])'\n      }, {\n        token: 'variable',\n        regex: identifier\n      }, {\n        token: 'keyword.operator',\n        regex: '(?:\\\\.{3}|\\\\s+\\\\?)'\n      }, {\n        token: 'keyword.variable',\n        regex: '(?:@+|::|\\\\.\\\\.)',\n        next: 'key'\n      }, {\n        token: 'keyword.operator',\n        regex: '\\\\.\\\\s*',\n        next: 'key'\n      }, {\n        token: 'string',\n        regex: '\\\\\\\\\\\\S[^\\\\s,;)}\\\\]]*'\n      }, {\n        token: 'string.doc',\n        regex: '\\'\\'\\'',\n        next: 'qdoc'\n      }, {\n        token: 'string.doc',\n        regex: '\"\"\"',\n        next: 'qqdoc'\n      }, {\n        token: 'string',\n        regex: '\\'',\n        next: 'qstring'\n      }, {\n        token: 'string',\n        regex: '\"',\n        next: 'qqstring'\n      }, {\n        token: 'string',\n        regex: '`',\n        next: 'js'\n      }, {\n        token: 'string',\n        regex: '<\\\\[',\n        next: 'words'\n      }, {\n        token: 'string.regex',\n        regex: '//',\n        next: 'heregex'\n      }, {\n        token: 'comment.doc',\n        regex: '/\\\\*',\n        next: 'comment'\n      }, {\n        token: 'comment',\n        regex: '#.*'\n      }, {\n        token: 'string.regex',\n        regex: '\\\\/(?:[^[\\\\/\\\\n\\\\\\\\]*(?:(?:\\\\\\\\.|\\\\[[^\\\\]\\\\n\\\\\\\\]*(?:\\\\\\\\.[^\\\\]\\\\n\\\\\\\\]*)*\\\\])[^[\\\\/\\\\n\\\\\\\\]*)*)\\\\/[gimy$]{0,4}',\n        next: 'key'\n      }, {\n        token: 'constant.numeric',\n        regex: '(?:0x[\\\\da-fA-F][\\\\da-fA-F_]*|(?:[2-9]|[12]\\\\d|3[0-6])r[\\\\da-zA-Z][\\\\da-zA-Z_]*|(?:\\\\d[\\\\d_]*(?:\\\\.\\\\d[\\\\d_]*)?|\\\\.\\\\d[\\\\d_]*)(?:e[+-]?\\\\d[\\\\d_]*)?[\\\\w$]*)'\n      }, {\n        token: 'lparen',\n        regex: '[({[]'\n      }, {\n        token: 'rparen',\n        regex: '[)}\\\\]]',\n        next: 'key'\n      }, {\n        token: 'keyword.operator',\n        regex: '[\\\\^!|&%+\\\\-]+'\n      }, {\n        token: 'text',\n        regex: '\\\\s+'\n      }\n    ],\n    heregex: [\n      {\n        token: 'string.regex',\n        regex: '.*?//[gimy$?]{0,4}',\n        next: 'start'\n      }, {\n        token: 'string.regex',\n        regex: '\\\\s*#{'\n      }, {\n        token: 'comment.regex',\n        regex: '\\\\s+(?:#.*)?'\n      }, {\n        defaultToken: 'string.regex'\n      }\n    ],\n    key: [\n      {\n        token: 'keyword.operator',\n        regex: '[.?@!]+'\n      }, {\n        token: 'identifier',\n        regex: identifier,\n        next: 'start'\n      }, {\n        token: 'text',\n        regex: '',\n        next: 'start'\n      }\n    ],\n    comment: [\n      {\n        token: 'comment.doc',\n        regex: '.*?\\\\*/',\n        next: 'start'\n      }, {\n        defaultToken: 'comment.doc'\n      }\n    ],\n    qdoc: [\n      {\n        token: 'string',\n        regex: \".*?'''\",\n        next: 'key'\n      }, stringfill\n    ],\n    qqdoc: [\n      {\n        token: 'string',\n        regex: '.*?\"\"\"',\n        next: 'key'\n      }, stringfill\n    ],\n    qstring: [\n      {\n        token: 'string',\n        regex: '[^\\\\\\\\\\']*(?:\\\\\\\\.[^\\\\\\\\\\']*)*\\'',\n        next: 'key'\n      }, stringfill\n    ],\n    qqstring: [\n      {\n        token: 'string',\n        regex: '[^\\\\\\\\\"]*(?:\\\\\\\\.[^\\\\\\\\\"]*)*\"',\n        next: 'key'\n      }, stringfill\n    ],\n    js: [\n      {\n        token: 'string',\n        regex: '[^\\\\\\\\`]*(?:\\\\\\\\.[^\\\\\\\\`]*)*`',\n        next: 'key'\n      }, stringfill\n    ],\n    words: [\n      {\n        token: 'string',\n        regex: '.*?\\\\]>',\n        next: 'key'\n      }, stringfill\n    ]\n  };\nfunction extend$(sub, sup){\n  function fun(){} fun.prototype = (sub.superclass = sup).prototype;\n  (sub.prototype = new fun).constructor = sub;\n  if (typeof sup.extended == 'function') sup.extended(sub);\n  return sub;\n}\nfunction import$(obj, src){\n  var own = {}.hasOwnProperty;\n  for (var key in src) if (own.call(src, key)) obj[key] = src[key];\n  return obj;\n}\n});\n\n\n\n// WEBPACK FOOTER //\n// /Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/livescript.js"],"sourceRoot":""}