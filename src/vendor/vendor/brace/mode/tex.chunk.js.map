{"version":3,"sources":["webpack:///vendor/brace/mode/tex.chunk.js","webpack:////Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/tex.js"],"names":["webpackJsonppanneau","465","module","exports","ace","define","acequire","oop","TextHighlightRules","TexHighlightRules","textClass","this","$rules","start","token","regex","next","nospell","inherits","Range","MatchingBraceOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","getLine","match","column","length","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","TextMode","Mode","suppressHighlighting","HighlightRules","$outdent","$behaviour","$defaultBehaviour","lineCommentStart","getNextLineIndent","state","tab","allowAutoInsert","$id"],"mappings":"AAAAA,qBAAqB,MAEfC,IACA,SAAUC,EAAQC,GCHxBC,IAAIC,OAAO,gCAAgC,UAAU,UAAU,SAAS,cAAc,eAAe,iCAAkC,SAASC,EAAUH,EAASD,GACnK,YAEA,IAAIK,GAAMD,EAAS,cAEfE,GADOF,EAAS,eACKA,EAAS,0BAA0BE,oBAExDC,EAAoB,SAASC,GAExBA,IACDA,EAAY,QAEhBC,KAAKC,QACDC,QAEQC,MAAQ,UACRC,MAAQ,SAERD,MAAQJ,EACRK,MAAQ,qBAERD,MAAQ,UACRC,MAAQ,mMACTC,KAAO,YAENF,MAAQ,UACRC,MAAQ,sCAETD,MAAQ,yBACPC,MAAQ,UAETD,MAAQ,yBACPC,MAAQ,YAERD,MAAQJ,EACRK,MAAQ,SAGhBE,UAEOH,MAAQ,UACRC,MAAQ,OACRC,KAAO,UAEPF,MAAQ,WAAaJ,EACrBK,MAAQ,qBAERD,MAAQ,UACRC,MAAQ,qMAERD,MAAQ,UACRC,MAAQ,oCACRC,KAAO,UAEPF,MAAQ,yBACRC,MAAQ,UAERD,MAAQ,yBACRC,MAAQ,WAERD,MAAQ,yBACRC,MAAQ,IACRC,KAAO,UAEPF,MAAQ,WAAaJ,EACrBK,MAAQ,SAERD,MAAQ,WAAaJ,EACrBK,MAAQ,UAMvBR,GAAIW,SAAST,EAAmBD,GAEhCL,EAAQM,kBAAoBA,IAG5BL,IAAIC,OAAO,mCAAmC,UAAU,UAAU,SAAS,aAAc,SAASC,EAAUH,EAASD,GACrH,YAEA,IAAIiB,GAAQb,EAAS,YAAYa,MAE7BC,EAAuB,cAE3B,WAEIT,KAAKU,aAAe,SAASC,EAAMC,GAC/B,QAAM,QAAQC,KAAKF,IAGZ,SAASE,KAAKD,IAGzBZ,KAAKc,YAAc,SAASC,EAAKC,GAC7B,GAAIL,GAAOI,EAAIE,QAAQD,GACnBE,EAAQP,EAAKO,MAAM,WAEvB,KAAKA,EAAO,MAAO,EAEnB,IAAIC,GAASD,EAAM,GAAGE,OAClBC,EAAeN,EAAIO,qBAAqBN,IAAKA,EAAKG,OAAQA,GAE9D,KAAKE,GAAgBA,EAAaL,KAAOA,EAAK,MAAO,EAErD,IAAIO,GAASvB,KAAKwB,WAAWT,EAAIE,QAAQI,EAAaL,KACtDD,GAAIU,QAAQ,GAAIjB,GAAMQ,EAAK,EAAGA,EAAKG,EAAO,GAAII,IAGlDvB,KAAKwB,WAAa,SAASb,GACvB,MAAOA,GAAKO,MAAM,QAAQ,MAG/BQ,KAAKjB,EAAqBkB,WAE7BnC,EAAQiB,qBAAuBA,IAG/BhB,IAAIC,OAAO,gBAAgB,UAAU,UAAU,SAAS,cAAc,gBAAgB,gCAAgC,+BAA+B,mCAAoC,SAASC,EAAUH,EAASD,GACrN,YAEA,IAAIK,GAAMD,EAAS,cACfiC,EAAWjC,EAAS,UAAUkC,KAC9BhC,EAAqBF,EAAS,0BAA0BE,mBACxDC,EAAoBH,EAAS,yBAAyBG,kBACtDW,EAAuBd,EAAS,4BAA4Bc,qBAE5DoB,EAAO,SAASC,GAEZ9B,KAAK+B,eADLD,EACsBjC,EAEAC,EAC1BE,KAAKgC,SAAW,GAAIvB,GACpBT,KAAKiC,WAAajC,KAAKkC,kBAE3BtC,GAAIW,SAASsB,EAAMD,GAEnB,WACG5B,KAAKmC,iBAAmB,IACxBnC,KAAKoC,kBAAoB,SAASC,EAAO1B,EAAM2B,GAC5C,MAAOtC,MAAKwB,WAAWb,IAG1BX,KAAKuC,gBAAkB,WACpB,OAAO,GAETvC,KAAKwC,IAAM,gBACZd,KAAKG,EAAKF,WAEbnC,EAAQqC,KAAOA","file":"vendor/brace/mode/tex.chunk.js","sourcesContent":["webpackJsonppanneau([121],{\n\n/***/ 465:\n/***/ (function(module, exports) {\n\nace.define(\"ace/mode/tex_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/mode/text_highlight_rules\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var lang=acequire(\"../lib/lang\");var TextHighlightRules=acequire(\"./text_highlight_rules\").TextHighlightRules;var TexHighlightRules=function TexHighlightRules(textClass){if(!textClass)textClass=\"text\";this.$rules={\"start\":[{token:\"comment\",regex:\"%.*$\"},{token:textClass,// non-command\nregex:\"\\\\\\\\[$&%#\\\\{\\\\}]\"},{token:\"keyword\",// command\nregex:\"\\\\\\\\(?:documentclass|usepackage|newcounter|setcounter|addtocounter|value|arabic|stepcounter|newenvironment|renewenvironment|ref|vref|eqref|pageref|label|cite[a-zA-Z]*|tag|begin|end|bibitem)\\\\b\",next:\"nospell\"},{token:\"keyword\",// command\nregex:\"\\\\\\\\(?:[a-zA-Z0-9]+|[^a-zA-Z0-9])\"},{token:\"paren.keyword.operator\",regex:\"[[({]\"},{token:\"paren.keyword.operator\",regex:\"[\\\\])}]\"},{token:textClass,regex:\"\\\\s+\"}],\"nospell\":[{token:\"comment\",regex:\"%.*$\",next:\"start\"},{token:\"nospell.\"+textClass,// non-command\nregex:\"\\\\\\\\[$&%#\\\\{\\\\}]\"},{token:\"keyword\",// command\nregex:\"\\\\\\\\(?:documentclass|usepackage|newcounter|setcounter|addtocounter|value|arabic|stepcounter|newenvironment|renewenvironment|ref|vref|eqref|pageref|label|cite[a-zA-Z]*|tag|begin|end|bibitem)\\\\b\"},{token:\"keyword\",// command\nregex:\"\\\\\\\\(?:[a-zA-Z0-9]+|[^a-zA-Z0-9])\",next:\"start\"},{token:\"paren.keyword.operator\",regex:\"[[({]\"},{token:\"paren.keyword.operator\",regex:\"[\\\\])]\"},{token:\"paren.keyword.operator\",regex:\"}\",next:\"start\"},{token:\"nospell.\"+textClass,regex:\"\\\\s+\"},{token:\"nospell.\"+textClass,regex:\"\\\\w+\"}]};};oop.inherits(TexHighlightRules,TextHighlightRules);exports.TexHighlightRules=TexHighlightRules;});ace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"],function(acequire,exports,module){\"use strict\";var Range=acequire(\"../range\").Range;var MatchingBraceOutdent=function MatchingBraceOutdent(){};(function(){this.checkOutdent=function(line,input){if(!/^\\s+$/.test(line))return false;return /^\\s*\\}/.test(input);};this.autoOutdent=function(doc,row){var line=doc.getLine(row);var match=line.match(/^(\\s*\\})/);if(!match)return 0;var column=match[1].length;var openBracePos=doc.findMatchingBracket({row:row,column:column});if(!openBracePos||openBracePos.row==row)return 0;var indent=this.$getIndent(doc.getLine(openBracePos.row));doc.replace(new Range(row,0,row,column-1),indent);};this.$getIndent=function(line){return line.match(/^\\s*/)[0];};}).call(MatchingBraceOutdent.prototype);exports.MatchingBraceOutdent=MatchingBraceOutdent;});ace.define(\"ace/mode/tex\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/text_highlight_rules\",\"ace/mode/tex_highlight_rules\",\"ace/mode/matching_brace_outdent\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextMode=acequire(\"./text\").Mode;var TextHighlightRules=acequire(\"./text_highlight_rules\").TextHighlightRules;var TexHighlightRules=acequire(\"./tex_highlight_rules\").TexHighlightRules;var MatchingBraceOutdent=acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;var Mode=function Mode(suppressHighlighting){if(suppressHighlighting)this.HighlightRules=TextHighlightRules;else this.HighlightRules=TexHighlightRules;this.$outdent=new MatchingBraceOutdent();this.$behaviour=this.$defaultBehaviour;};oop.inherits(Mode,TextMode);(function(){this.lineCommentStart=\"%\";this.getNextLineIndent=function(state,line,tab){return this.$getIndent(line);};this.allowAutoInsert=function(){return false;};this.$id=\"ace/mode/tex\";}).call(Mode.prototype);exports.Mode=Mode;});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// vendor/brace/mode/tex.chunk.js","ace.define(\"ace/mode/tex_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar lang = acequire(\"../lib/lang\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar TexHighlightRules = function(textClass) {\n\n    if (!textClass)\n        textClass = \"text\";\n\n    this.$rules = {\n        \"start\" : [\n            {\n                token : \"comment\",\n                regex : \"%.*$\"\n            }, {\n                token : textClass, // non-command\n                regex : \"\\\\\\\\[$&%#\\\\{\\\\}]\"\n            }, {\n                token : \"keyword\", // command\n                regex : \"\\\\\\\\(?:documentclass|usepackage|newcounter|setcounter|addtocounter|value|arabic|stepcounter|newenvironment|renewenvironment|ref|vref|eqref|pageref|label|cite[a-zA-Z]*|tag|begin|end|bibitem)\\\\b\",\n               next : \"nospell\"\n            }, {\n                token : \"keyword\", // command\n                regex : \"\\\\\\\\(?:[a-zA-Z0-9]+|[^a-zA-Z0-9])\"\n            }, {\n               token : \"paren.keyword.operator\",\n                regex : \"[[({]\"\n            }, {\n               token : \"paren.keyword.operator\",\n                regex : \"[\\\\])}]\"\n            }, {\n                token : textClass,\n                regex : \"\\\\s+\"\n            }\n        ],\n        \"nospell\" : [\n           {\n               token : \"comment\",\n               regex : \"%.*$\",\n               next : \"start\"\n           }, {\n               token : \"nospell.\" + textClass, // non-command\n               regex : \"\\\\\\\\[$&%#\\\\{\\\\}]\"\n           }, {\n               token : \"keyword\", // command\n               regex : \"\\\\\\\\(?:documentclass|usepackage|newcounter|setcounter|addtocounter|value|arabic|stepcounter|newenvironment|renewenvironment|ref|vref|eqref|pageref|label|cite[a-zA-Z]*|tag|begin|end|bibitem)\\\\b\"\n           }, {\n               token : \"keyword\", // command\n               regex : \"\\\\\\\\(?:[a-zA-Z0-9]+|[^a-zA-Z0-9])\",\n               next : \"start\"\n           }, {\n               token : \"paren.keyword.operator\",\n               regex : \"[[({]\"\n           }, {\n               token : \"paren.keyword.operator\",\n               regex : \"[\\\\])]\"\n           }, {\n               token : \"paren.keyword.operator\",\n               regex : \"}\",\n               next : \"start\"\n           }, {\n               token : \"nospell.\" + textClass,\n               regex : \"\\\\s+\"\n           }, {\n               token : \"nospell.\" + textClass,\n               regex : \"\\\\w+\"\n           }\n        ]\n    };\n};\n\noop.inherits(TexHighlightRules, TextHighlightRules);\n\nexports.TexHighlightRules = TexHighlightRules;\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar Range = acequire(\"../range\").Range;\n\nvar MatchingBraceOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        return line.match(/^\\s*/)[0];\n    };\n\n}).call(MatchingBraceOutdent.prototype);\n\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\n\nace.define(\"ace/mode/tex\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/text_highlight_rules\",\"ace/mode/tex_highlight_rules\",\"ace/mode/matching_brace_outdent\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\nvar TexHighlightRules = acequire(\"./tex_highlight_rules\").TexHighlightRules;\nvar MatchingBraceOutdent = acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;\n\nvar Mode = function(suppressHighlighting) {\n    if (suppressHighlighting)\n        this.HighlightRules = TextHighlightRules;\n    else\n        this.HighlightRules = TexHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n   this.lineCommentStart = \"%\";\n   this.getNextLineIndent = function(state, line, tab) {\n      return this.$getIndent(line);\n   };\n\n   this.allowAutoInsert = function() {\n      return false;\n   };\n    this.$id = \"ace/mode/tex\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n\n\n\n// WEBPACK FOOTER //\n// /Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/tex.js"],"sourceRoot":""}