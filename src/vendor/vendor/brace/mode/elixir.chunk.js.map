{"version":3,"sources":["webpack:///vendor/brace/mode/elixir.chunk.js","webpack:////Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/elixir.js"],"names":["webpackJsonppanneau","368","module","exports","ace","define","acequire","oop","TextHighlightRules","ElixirHighlightRules","this","$rules","start","token","regex","push","next","include","defaultToken","comment","TODO","originalRegex","#escaped_char","#interpolated_elixir","todo","#nest_curly_and_self","#regex_sub","normalizeRules","metaData","fileTypes","firstLineMatch","foldingStartMarker","foldingStopMarker","keyEquivalent","name","scopeName","inherits","BaseFoldMode","FoldMode","Range","getFoldWidgetRange","session","foldStyle","row","range","indentationBlock","re","line","getLine","startLevel","search","startColumn","length","maxRow","getLength","startRow","endRow","level","endColumn","getFoldWidget","indent","prev","prevIndent","nextIndent","foldWidgets","call","prototype","TextMode","Mode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","$id"],"mappings":"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","file":"vendor/brace/mode/elixir.chunk.js","sourcesContent":["webpackJsonppanneau([198],{\n\n/***/ 368:\n/***/ (function(module, exports) {\n\nace.define(\"ace/mode/elixir_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextHighlightRules=acequire(\"./text_highlight_rules\").TextHighlightRules;var ElixirHighlightRules=function ElixirHighlightRules(){this.$rules={start:[{token:['meta.module.elixir','keyword.control.module.elixir','meta.module.elixir','entity.name.type.module.elixir'],regex:'^(\\\\s*)(defmodule)(\\\\s+)((?:[A-Z]\\\\w*\\\\s*\\\\.\\\\s*)*[A-Z]\\\\w*)'},{token:'comment.documentation.heredoc',regex:'@(?:module|type)?doc (?:~[a-z])?\"\"\"',push:[{token:'comment.documentation.heredoc',regex:'\\\\s*\"\"\"',next:'pop'},{include:'#interpolated_elixir'},{include:'#escaped_char'},{defaultToken:'comment.documentation.heredoc'}],comment:'@doc with heredocs is treated as documentation'},{token:'comment.documentation.heredoc',regex:'@(?:module|type)?doc ~[A-Z]\"\"\"',push:[{token:'comment.documentation.heredoc',regex:'\\\\s*\"\"\"',next:'pop'},{defaultToken:'comment.documentation.heredoc'}],comment:'@doc with heredocs is treated as documentation'},{token:'comment.documentation.heredoc',regex:'@(?:module|type)?doc (?:~[a-z])?\\'\\'\\'',push:[{token:'comment.documentation.heredoc',regex:'\\\\s*\\'\\'\\'',next:'pop'},{include:'#interpolated_elixir'},{include:'#escaped_char'},{defaultToken:'comment.documentation.heredoc'}],comment:'@doc with heredocs is treated as documentation'},{token:'comment.documentation.heredoc',regex:'@(?:module|type)?doc ~[A-Z]\\'\\'\\'',push:[{token:'comment.documentation.heredoc',regex:'\\\\s*\\'\\'\\'',next:'pop'},{defaultToken:'comment.documentation.heredoc'}],comment:'@doc with heredocs is treated as documentation'},{token:'comment.documentation.false',regex:'@(?:module|type)?doc false',comment:'@doc false is treated as documentation'},{token:'comment.documentation.string',regex:'@(?:module|type)?doc \"',push:[{token:'comment.documentation.string',regex:'\"',next:'pop'},{include:'#interpolated_elixir'},{include:'#escaped_char'},{defaultToken:'comment.documentation.string'}],comment:'@doc with string is treated as documentation'},{token:'keyword.control.elixir',regex:'\\\\b(?:do|end|case|bc|lc|for|if|cond|unless|try|receive|fn|defmodule|defp?|defprotocol|defimpl|defrecord|defstruct|defmacrop?|defdelegate|defcallback|defmacrocallback|defexception|defoverridable|exit|after|rescue|catch|else|raise|throw|import|acequire|alias|use|quote|unquote|super)\\\\b(?![?!])',TODO:'FIXME: regexp doesn\\'t have js equivalent',originalRegex:'(?<!\\\\.)\\\\b(do|end|case|bc|lc|for|if|cond|unless|try|receive|fn|defmodule|defp?|defprotocol|defimpl|defrecord|defstruct|defmacrop?|defdelegate|defcallback|defmacrocallback|defexception|defoverridable|exit|after|rescue|catch|else|raise|throw|import|acequire|alias|use|quote|unquote|super)\\\\b(?![?!])'},{token:'keyword.operator.elixir',regex:'\\\\b(?:and|not|or|when|xor|in|inlist|inbits)\\\\b',TODO:'FIXME: regexp doesn\\'t have js equivalent',originalRegex:'(?<!\\\\.)\\\\b(and|not|or|when|xor|in|inlist|inbits)\\\\b',comment:' as above, just doesn\\'t need a \\'end\\' and does a logic operation'},{token:'constant.language.elixir',regex:'\\\\b(?:nil|true|false)\\\\b(?![?!])'},{token:'variable.language.elixir',regex:'\\\\b__(?:CALLER|ENV|MODULE|DIR)__\\\\b(?![?!])'},{token:['punctuation.definition.variable.elixir','variable.other.readwrite.module.elixir'],regex:'(@)([a-zA-Z_]\\\\w*)'},{token:['punctuation.definition.variable.elixir','variable.other.anonymous.elixir'],regex:'(&)(\\\\d*)'},{token:'variable.other.constant.elixir',regex:'\\\\b[A-Z]\\\\w*\\\\b'},{token:'constant.numeric.elixir',regex:'\\\\b(?:0x[\\\\da-fA-F](?:_?[\\\\da-fA-F])*|\\\\d(?:_?\\\\d)*(?:\\\\.(?![^[:space:][:digit:]])(?:_?\\\\d)*)?(?:[eE][-+]?\\\\d(?:_?\\\\d)*)?|0b[01]+|0o[0-7]+)\\\\b',TODO:'FIXME: regexp doesn\\'t have js equivalent',originalRegex:'\\\\b(0x\\\\h(?>_?\\\\h)*|\\\\d(?>_?\\\\d)*(\\\\.(?![^[:space:][:digit:]])(?>_?\\\\d)*)?([eE][-+]?\\\\d(?>_?\\\\d)*)?|0b[01]+|0o[0-7]+)\\\\b'},{token:'punctuation.definition.constant.elixir',regex:':\\'',push:[{token:'punctuation.definition.constant.elixir',regex:'\\'',next:'pop'},{include:'#interpolated_elixir'},{include:'#escaped_char'},{defaultToken:'constant.other.symbol.single-quoted.elixir'}]},{token:'punctuation.definition.constant.elixir',regex:':\"',push:[{token:'punctuation.definition.constant.elixir',regex:'\"',next:'pop'},{include:'#interpolated_elixir'},{include:'#escaped_char'},{defaultToken:'constant.other.symbol.double-quoted.elixir'}]},{token:'punctuation.definition.string.begin.elixir',regex:'(?:\\'\\'\\')',TODO:'FIXME: regexp doesn\\'t have js equivalent',originalRegex:'(?>\\'\\'\\')',push:[{token:'punctuation.definition.string.end.elixir',regex:'^\\\\s*\\'\\'\\'',next:'pop'},{include:'#interpolated_elixir'},{include:'#escaped_char'},{defaultToken:'support.function.variable.quoted.single.heredoc.elixir'}],comment:'Single-quoted heredocs'},{token:'punctuation.definition.string.begin.elixir',regex:'\\'',push:[{token:'punctuation.definition.string.end.elixir',regex:'\\'',next:'pop'},{include:'#interpolated_elixir'},{include:'#escaped_char'},{defaultToken:'support.function.variable.quoted.single.elixir'}],comment:'single quoted string (allows for interpolation)'},{token:'punctuation.definition.string.begin.elixir',regex:'(?:\"\"\")',TODO:'FIXME: regexp doesn\\'t have js equivalent',originalRegex:'(?>\"\"\")',push:[{token:'punctuation.definition.string.end.elixir',regex:'^\\\\s*\"\"\"',next:'pop'},{include:'#interpolated_elixir'},{include:'#escaped_char'},{defaultToken:'string.quoted.double.heredoc.elixir'}],comment:'Double-quoted heredocs'},{token:'punctuation.definition.string.begin.elixir',regex:'\"',push:[{token:'punctuation.definition.string.end.elixir',regex:'\"',next:'pop'},{include:'#interpolated_elixir'},{include:'#escaped_char'},{defaultToken:'string.quoted.double.elixir'}],comment:'double quoted string (allows for interpolation)'},{token:'punctuation.definition.string.begin.elixir',regex:'~[a-z](?:\"\"\")',TODO:'FIXME: regexp doesn\\'t have js equivalent',originalRegex:'~[a-z](?>\"\"\")',push:[{token:'punctuation.definition.string.end.elixir',regex:'^\\\\s*\"\"\"',next:'pop'},{include:'#interpolated_elixir'},{include:'#escaped_char'},{defaultToken:'string.quoted.double.heredoc.elixir'}],comment:'Double-quoted heredocs sigils'},{token:'punctuation.definition.string.begin.elixir',regex:'~[a-z]\\\\{',push:[{token:'punctuation.definition.string.end.elixir',regex:'\\\\}[a-z]*',next:'pop'},{include:'#interpolated_elixir'},{include:'#escaped_char'},{defaultToken:'string.interpolated.elixir'}],comment:'sigil (allow for interpolation)'},{token:'punctuation.definition.string.begin.elixir',regex:'~[a-z]\\\\[',push:[{token:'punctuation.definition.string.end.elixir',regex:'\\\\][a-z]*',next:'pop'},{include:'#interpolated_elixir'},{include:'#escaped_char'},{defaultToken:'string.interpolated.elixir'}],comment:'sigil (allow for interpolation)'},{token:'punctuation.definition.string.begin.elixir',regex:'~[a-z]\\\\<',push:[{token:'punctuation.definition.string.end.elixir',regex:'\\\\>[a-z]*',next:'pop'},{include:'#interpolated_elixir'},{include:'#escaped_char'},{defaultToken:'string.interpolated.elixir'}],comment:'sigil (allow for interpolation)'},{token:'punctuation.definition.string.begin.elixir',regex:'~[a-z]\\\\(',push:[{token:'punctuation.definition.string.end.elixir',regex:'\\\\)[a-z]*',next:'pop'},{include:'#interpolated_elixir'},{include:'#escaped_char'},{defaultToken:'string.interpolated.elixir'}],comment:'sigil (allow for interpolation)'},{token:'punctuation.definition.string.begin.elixir',regex:'~[a-z][^\\\\w]',push:[{token:'punctuation.definition.string.end.elixir',regex:'[^\\\\w][a-z]*',next:'pop'},{include:'#interpolated_elixir'},{include:'#escaped_char'},{include:'#escaped_char'},{defaultToken:'string.interpolated.elixir'}],comment:'sigil (allow for interpolation)'},{token:'punctuation.definition.string.begin.elixir',regex:'~[A-Z](?:\"\"\")',TODO:'FIXME: regexp doesn\\'t have js equivalent',originalRegex:'~[A-Z](?>\"\"\")',push:[{token:'punctuation.definition.string.end.elixir',regex:'^\\\\s*\"\"\"',next:'pop'},{defaultToken:'string.quoted.other.literal.upper.elixir'}],comment:'Double-quoted heredocs sigils'},{token:'punctuation.definition.string.begin.elixir',regex:'~[A-Z]\\\\{',push:[{token:'punctuation.definition.string.end.elixir',regex:'\\\\}[a-z]*',next:'pop'},{defaultToken:'string.quoted.other.literal.upper.elixir'}],comment:'sigil (without interpolation)'},{token:'punctuation.definition.string.begin.elixir',regex:'~[A-Z]\\\\[',push:[{token:'punctuation.definition.string.end.elixir',regex:'\\\\][a-z]*',next:'pop'},{defaultToken:'string.quoted.other.literal.upper.elixir'}],comment:'sigil (without interpolation)'},{token:'punctuation.definition.string.begin.elixir',regex:'~[A-Z]\\\\<',push:[{token:'punctuation.definition.string.end.elixir',regex:'\\\\>[a-z]*',next:'pop'},{defaultToken:'string.quoted.other.literal.upper.elixir'}],comment:'sigil (without interpolation)'},{token:'punctuation.definition.string.begin.elixir',regex:'~[A-Z]\\\\(',push:[{token:'punctuation.definition.string.end.elixir',regex:'\\\\)[a-z]*',next:'pop'},{defaultToken:'string.quoted.other.literal.upper.elixir'}],comment:'sigil (without interpolation)'},{token:'punctuation.definition.string.begin.elixir',regex:'~[A-Z][^\\\\w]',push:[{token:'punctuation.definition.string.end.elixir',regex:'[^\\\\w][a-z]*',next:'pop'},{defaultToken:'string.quoted.other.literal.upper.elixir'}],comment:'sigil (without interpolation)'},{token:['punctuation.definition.constant.elixir','constant.other.symbol.elixir'],regex:'(:)([a-zA-Z_][\\\\w@]*(?:[?!]|=(?![>=]))?|\\\\<\\\\>|===?|!==?|<<>>|<<<|>>>|~~~|::|<\\\\-|\\\\|>|=>|~|~=|=|/|\\\\\\\\\\\\\\\\|\\\\*\\\\*?|\\\\.\\\\.?\\\\.?|>=?|<=?|&&?&?|\\\\+\\\\+?|\\\\-\\\\-?|\\\\|\\\\|?\\\\|?|\\\\!|@|\\\\%?\\\\{\\\\}|%|\\\\[\\\\]|\\\\^(?:\\\\^\\\\^)?)',TODO:'FIXME: regexp doesn\\'t have js equivalent',originalRegex:'(?<!:)(:)(?>[a-zA-Z_][\\\\w@]*(?>[?!]|=(?![>=]))?|\\\\<\\\\>|===?|!==?|<<>>|<<<|>>>|~~~|::|<\\\\-|\\\\|>|=>|~|~=|=|/|\\\\\\\\\\\\\\\\|\\\\*\\\\*?|\\\\.\\\\.?\\\\.?|>=?|<=?|&&?&?|\\\\+\\\\+?|\\\\-\\\\-?|\\\\|\\\\|?\\\\|?|\\\\!|@|\\\\%?\\\\{\\\\}|%|\\\\[\\\\]|\\\\^(\\\\^\\\\^)?)',comment:'symbols'},{token:'punctuation.definition.constant.elixir',regex:'(?:[a-zA-Z_][\\\\w@]*(?:[?!])?):(?!:)',TODO:'FIXME: regexp doesn\\'t have js equivalent',originalRegex:'(?>[a-zA-Z_][\\\\w@]*(?>[?!])?)(:)(?!:)',comment:'symbols'},{token:['punctuation.definition.comment.elixir','comment.line.number-sign.elixir'],regex:'(#)(.*)'},{token:'constant.numeric.elixir',regex:'\\\\?(?:\\\\\\\\(?:x[\\\\da-fA-F]{1,2}(?![\\\\da-fA-F])\\\\b|[^xMC])|[^\\\\s\\\\\\\\])',TODO:'FIXME: regexp doesn\\'t have js equivalent',originalRegex:'(?<!\\\\w)\\\\?(\\\\\\\\(x\\\\h{1,2}(?!\\\\h)\\\\b|[^xMC])|[^\\\\s\\\\\\\\])',comment:'\\n\\t\\t\\tmatches questionmark-letters.\\n\\n\\t\\t\\texamples (1st alternation = hex):\\n\\t\\t\\t?\\\\x1     ?\\\\x61\\n\\n\\t\\t\\texamples (2rd alternation = escaped):\\n\\t\\t\\t?\\\\n      ?\\\\b\\n\\n\\t\\t\\texamples (3rd alternation = normal):\\n\\t\\t\\t?a       ?A       ?0 \\n\\t\\t\\t?*       ?\"       ?( \\n\\t\\t\\t?.       ?#\\n\\t\\t\\t\\n\\t\\t\\tthe negative lookbehind prevents against matching\\n\\t\\t\\tp(42.tainted?)\\n\\t\\t\\t'},{token:'keyword.operator.assignment.augmented.elixir',regex:'\\\\+=|\\\\-=|\\\\|\\\\|=|~=|&&='},{token:'keyword.operator.comparison.elixir',regex:'===?|!==?|<=?|>=?'},{token:'keyword.operator.bitwise.elixir',regex:'\\\\|{3}|&{3}|\\\\^{3}|<{3}|>{3}|~{3}'},{token:'keyword.operator.logical.elixir',regex:'!+|\\\\bnot\\\\b|&&|\\\\band\\\\b|\\\\|\\\\||\\\\bor\\\\b|\\\\bxor\\\\b',originalRegex:'(?<=[ \\\\t])!+|\\\\bnot\\\\b|&&|\\\\band\\\\b|\\\\|\\\\||\\\\bor\\\\b|\\\\bxor\\\\b'},{token:'keyword.operator.arithmetic.elixir',regex:'\\\\*|\\\\+|\\\\-|/'},{token:'keyword.operator.other.elixir',regex:'\\\\||\\\\+\\\\+|\\\\-\\\\-|\\\\*\\\\*|\\\\\\\\\\\\\\\\|\\\\<\\\\-|\\\\<\\\\>|\\\\<\\\\<|\\\\>\\\\>|\\\\:\\\\:|\\\\.\\\\.|\\\\|>|~|=>'},{token:'keyword.operator.assignment.elixir',regex:'='},{token:'punctuation.separator.other.elixir',regex:':'},{token:'punctuation.separator.statement.elixir',regex:'\\\\;'},{token:'punctuation.separator.object.elixir',regex:','},{token:'punctuation.separator.method.elixir',regex:'\\\\.'},{token:'punctuation.section.scope.elixir',regex:'\\\\{|\\\\}'},{token:'punctuation.section.array.elixir',regex:'\\\\[|\\\\]'},{token:'punctuation.section.function.elixir',regex:'\\\\(|\\\\)'}],'#escaped_char':[{token:'constant.character.escape.elixir',regex:'\\\\\\\\(?:x[\\\\da-fA-F]{1,2}|.)'}],'#interpolated_elixir':[{token:['source.elixir.embedded.source','source.elixir.embedded.source.empty'],regex:'(#\\\\{)(\\\\})'},{todo:{token:'punctuation.section.embedded.elixir',regex:'#\\\\{',push:[{token:'punctuation.section.embedded.elixir',regex:'\\\\}',next:'pop'},{include:'#nest_curly_and_self'},{include:'$self'},{defaultToken:'source.elixir.embedded.source'}]}}],'#nest_curly_and_self':[{token:'punctuation.section.scope.elixir',regex:'\\\\{',push:[{token:'punctuation.section.scope.elixir',regex:'\\\\}',next:'pop'},{include:'#nest_curly_and_self'}]},{include:'$self'}],'#regex_sub':[{include:'#interpolated_elixir'},{include:'#escaped_char'},{token:['punctuation.definition.arbitrary-repitition.elixir','string.regexp.arbitrary-repitition.elixir','string.regexp.arbitrary-repitition.elixir','punctuation.definition.arbitrary-repitition.elixir'],regex:'(\\\\{)(\\\\d+)((?:,\\\\d+)?)(\\\\})'},{token:'punctuation.definition.character-class.elixir',regex:'\\\\[(?:\\\\^?\\\\])?',push:[{token:'punctuation.definition.character-class.elixir',regex:'\\\\]',next:'pop'},{include:'#escaped_char'},{defaultToken:'string.regexp.character-class.elixir'}]},{token:'punctuation.definition.group.elixir',regex:'\\\\(',push:[{token:'punctuation.definition.group.elixir',regex:'\\\\)',next:'pop'},{include:'#regex_sub'},{defaultToken:'string.regexp.group.elixir'}]},{token:['punctuation.definition.comment.elixir','comment.line.number-sign.elixir'],regex:'(?:^|\\\\s)(#)(\\\\s[[a-zA-Z0-9,. \\\\t?!-][^\\\\x00-\\\\x7F]]*$)',originalRegex:'(?<=^|\\\\s)(#)\\\\s[[a-zA-Z0-9,. \\\\t?!-][^\\\\x{00}-\\\\x{7F}]]*$',comment:'We are restrictive in what we allow to go after the comment character to avoid false positives, since the availability of comments depend on regexp flags.'}]};this.normalizeRules();};ElixirHighlightRules.metaData={comment:'Textmate bundle for Elixir Programming Language.',fileTypes:['ex','exs'],firstLineMatch:'^#!/.*\\\\belixir',foldingStartMarker:'(after|else|catch|rescue|\\\\-\\\\>|\\\\{|\\\\[|do)\\\\s*$',foldingStopMarker:'^\\\\s*((\\\\}|\\\\]|after|else|catch|rescue)\\\\s*$|end\\\\b)',keyEquivalent:'^~E',name:'Elixir',scopeName:'source.elixir'};oop.inherits(ElixirHighlightRules,TextHighlightRules);exports.ElixirHighlightRules=ElixirHighlightRules;});ace.define(\"ace/mode/folding/coffee\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../../lib/oop\");var BaseFoldMode=acequire(\"./fold_mode\").FoldMode;var Range=acequire(\"../../range\").Range;var FoldMode=exports.FoldMode=function(){};oop.inherits(FoldMode,BaseFoldMode);(function(){this.getFoldWidgetRange=function(session,foldStyle,row){var range=this.indentationBlock(session,row);if(range)return range;var re=/\\S/;var line=session.getLine(row);var startLevel=line.search(re);if(startLevel==-1||line[startLevel]!=\"#\")return;var startColumn=line.length;var maxRow=session.getLength();var startRow=row;var endRow=row;while(++row<maxRow){line=session.getLine(row);var level=line.search(re);if(level==-1)continue;if(line[level]!=\"#\")break;endRow=row;}if(endRow>startRow){var endColumn=session.getLine(endRow).length;return new Range(startRow,startColumn,endRow,endColumn);}};this.getFoldWidget=function(session,foldStyle,row){var line=session.getLine(row);var indent=line.search(/\\S/);var next=session.getLine(row+1);var prev=session.getLine(row-1);var prevIndent=prev.search(/\\S/);var nextIndent=next.search(/\\S/);if(indent==-1){session.foldWidgets[row-1]=prevIndent!=-1&&prevIndent<nextIndent?\"start\":\"\";return\"\";}if(prevIndent==-1){if(indent==nextIndent&&line[indent]==\"#\"&&next[indent]==\"#\"){session.foldWidgets[row-1]=\"\";session.foldWidgets[row+1]=\"\";return\"start\";}}else if(prevIndent==indent&&line[indent]==\"#\"&&prev[indent]==\"#\"){if(session.getLine(row-2).search(/\\S/)==-1){session.foldWidgets[row-1]=\"start\";session.foldWidgets[row+1]=\"\";return\"\";}}if(prevIndent!=-1&&prevIndent<indent)session.foldWidgets[row-1]=\"start\";else session.foldWidgets[row-1]=\"\";if(indent<nextIndent)return\"start\";else return\"\";};}).call(FoldMode.prototype);});ace.define(\"ace/mode/elixir\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/elixir_highlight_rules\",\"ace/mode/folding/coffee\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextMode=acequire(\"./text\").Mode;var ElixirHighlightRules=acequire(\"./elixir_highlight_rules\").ElixirHighlightRules;var FoldMode=acequire(\"./folding/coffee\").FoldMode;var Mode=function Mode(){this.HighlightRules=ElixirHighlightRules;this.foldingRules=new FoldMode();this.$behaviour=this.$defaultBehaviour;};oop.inherits(Mode,TextMode);(function(){this.lineCommentStart=\"#\";this.$id=\"ace/mode/elixir\";}).call(Mode.prototype);exports.Mode=Mode;});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// vendor/brace/mode/elixir.chunk.js","ace.define(\"ace/mode/elixir_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar ElixirHighlightRules = function() {\n\n    this.$rules = { start: \n       [ { token: \n            [ 'meta.module.elixir',\n              'keyword.control.module.elixir',\n              'meta.module.elixir',\n              'entity.name.type.module.elixir' ],\n           regex: '^(\\\\s*)(defmodule)(\\\\s+)((?:[A-Z]\\\\w*\\\\s*\\\\.\\\\s*)*[A-Z]\\\\w*)' },\n         { token: 'comment.documentation.heredoc',\n           regex: '@(?:module|type)?doc (?:~[a-z])?\"\"\"',\n           push: \n            [ { token: 'comment.documentation.heredoc',\n                regex: '\\\\s*\"\"\"',\n                next: 'pop' },\n              { include: '#interpolated_elixir' },\n              { include: '#escaped_char' },\n              { defaultToken: 'comment.documentation.heredoc' } ],\n           comment: '@doc with heredocs is treated as documentation' },\n         { token: 'comment.documentation.heredoc',\n           regex: '@(?:module|type)?doc ~[A-Z]\"\"\"',\n           push: \n            [ { token: 'comment.documentation.heredoc',\n                regex: '\\\\s*\"\"\"',\n                next: 'pop' },\n              { defaultToken: 'comment.documentation.heredoc' } ],\n           comment: '@doc with heredocs is treated as documentation' },\n         { token: 'comment.documentation.heredoc',\n           regex: '@(?:module|type)?doc (?:~[a-z])?\\'\\'\\'',\n           push: \n            [ { token: 'comment.documentation.heredoc',\n                regex: '\\\\s*\\'\\'\\'',\n                next: 'pop' },\n              { include: '#interpolated_elixir' },\n              { include: '#escaped_char' },\n              { defaultToken: 'comment.documentation.heredoc' } ],\n           comment: '@doc with heredocs is treated as documentation' },\n         { token: 'comment.documentation.heredoc',\n           regex: '@(?:module|type)?doc ~[A-Z]\\'\\'\\'',\n           push: \n            [ { token: 'comment.documentation.heredoc',\n                regex: '\\\\s*\\'\\'\\'',\n                next: 'pop' },\n              { defaultToken: 'comment.documentation.heredoc' } ],\n           comment: '@doc with heredocs is treated as documentation' },\n         { token: 'comment.documentation.false',\n           regex: '@(?:module|type)?doc false',\n           comment: '@doc false is treated as documentation' },\n         { token: 'comment.documentation.string',\n           regex: '@(?:module|type)?doc \"',\n           push: \n            [ { token: 'comment.documentation.string',\n                regex: '\"',\n                next: 'pop' },\n              { include: '#interpolated_elixir' },\n              { include: '#escaped_char' },\n              { defaultToken: 'comment.documentation.string' } ],\n           comment: '@doc with string is treated as documentation' },\n         { token: 'keyword.control.elixir',\n           regex: '\\\\b(?:do|end|case|bc|lc|for|if|cond|unless|try|receive|fn|defmodule|defp?|defprotocol|defimpl|defrecord|defstruct|defmacrop?|defdelegate|defcallback|defmacrocallback|defexception|defoverridable|exit|after|rescue|catch|else|raise|throw|import|acequire|alias|use|quote|unquote|super)\\\\b(?![?!])',\n           TODO: 'FIXME: regexp doesn\\'t have js equivalent',\n           originalRegex: '(?<!\\\\.)\\\\b(do|end|case|bc|lc|for|if|cond|unless|try|receive|fn|defmodule|defp?|defprotocol|defimpl|defrecord|defstruct|defmacrop?|defdelegate|defcallback|defmacrocallback|defexception|defoverridable|exit|after|rescue|catch|else|raise|throw|import|acequire|alias|use|quote|unquote|super)\\\\b(?![?!])' },\n         { token: 'keyword.operator.elixir',\n           regex: '\\\\b(?:and|not|or|when|xor|in|inlist|inbits)\\\\b',\n           TODO: 'FIXME: regexp doesn\\'t have js equivalent',\n           originalRegex: '(?<!\\\\.)\\\\b(and|not|or|when|xor|in|inlist|inbits)\\\\b',\n           comment: ' as above, just doesn\\'t need a \\'end\\' and does a logic operation' },\n         { token: 'constant.language.elixir',\n           regex: '\\\\b(?:nil|true|false)\\\\b(?![?!])' },\n         { token: 'variable.language.elixir',\n           regex: '\\\\b__(?:CALLER|ENV|MODULE|DIR)__\\\\b(?![?!])' },\n         { token: \n            [ 'punctuation.definition.variable.elixir',\n              'variable.other.readwrite.module.elixir' ],\n           regex: '(@)([a-zA-Z_]\\\\w*)' },\n         { token: \n            [ 'punctuation.definition.variable.elixir',\n              'variable.other.anonymous.elixir' ],\n           regex: '(&)(\\\\d*)' },\n         { token: 'variable.other.constant.elixir',\n           regex: '\\\\b[A-Z]\\\\w*\\\\b' },\n         { token: 'constant.numeric.elixir',\n           regex: '\\\\b(?:0x[\\\\da-fA-F](?:_?[\\\\da-fA-F])*|\\\\d(?:_?\\\\d)*(?:\\\\.(?![^[:space:][:digit:]])(?:_?\\\\d)*)?(?:[eE][-+]?\\\\d(?:_?\\\\d)*)?|0b[01]+|0o[0-7]+)\\\\b',\n           TODO: 'FIXME: regexp doesn\\'t have js equivalent',\n           originalRegex: '\\\\b(0x\\\\h(?>_?\\\\h)*|\\\\d(?>_?\\\\d)*(\\\\.(?![^[:space:][:digit:]])(?>_?\\\\d)*)?([eE][-+]?\\\\d(?>_?\\\\d)*)?|0b[01]+|0o[0-7]+)\\\\b' },\n         { token: 'punctuation.definition.constant.elixir',\n           regex: ':\\'',\n           push: \n            [ { token: 'punctuation.definition.constant.elixir',\n                regex: '\\'',\n                next: 'pop' },\n              { include: '#interpolated_elixir' },\n              { include: '#escaped_char' },\n              { defaultToken: 'constant.other.symbol.single-quoted.elixir' } ] },\n         { token: 'punctuation.definition.constant.elixir',\n           regex: ':\"',\n           push: \n            [ { token: 'punctuation.definition.constant.elixir',\n                regex: '\"',\n                next: 'pop' },\n              { include: '#interpolated_elixir' },\n              { include: '#escaped_char' },\n              { defaultToken: 'constant.other.symbol.double-quoted.elixir' } ] },\n         { token: 'punctuation.definition.string.begin.elixir',\n           regex: '(?:\\'\\'\\')',\n           TODO: 'FIXME: regexp doesn\\'t have js equivalent',\n           originalRegex: '(?>\\'\\'\\')',\n           push: \n            [ { token: 'punctuation.definition.string.end.elixir',\n                regex: '^\\\\s*\\'\\'\\'',\n                next: 'pop' },\n              { include: '#interpolated_elixir' },\n              { include: '#escaped_char' },\n              { defaultToken: 'support.function.variable.quoted.single.heredoc.elixir' } ],\n           comment: 'Single-quoted heredocs' },\n         { token: 'punctuation.definition.string.begin.elixir',\n           regex: '\\'',\n           push: \n            [ { token: 'punctuation.definition.string.end.elixir',\n                regex: '\\'',\n                next: 'pop' },\n              { include: '#interpolated_elixir' },\n              { include: '#escaped_char' },\n              { defaultToken: 'support.function.variable.quoted.single.elixir' } ],\n           comment: 'single quoted string (allows for interpolation)' },\n         { token: 'punctuation.definition.string.begin.elixir',\n           regex: '(?:\"\"\")',\n           TODO: 'FIXME: regexp doesn\\'t have js equivalent',\n           originalRegex: '(?>\"\"\")',\n           push: \n            [ { token: 'punctuation.definition.string.end.elixir',\n                regex: '^\\\\s*\"\"\"',\n                next: 'pop' },\n              { include: '#interpolated_elixir' },\n              { include: '#escaped_char' },\n              { defaultToken: 'string.quoted.double.heredoc.elixir' } ],\n           comment: 'Double-quoted heredocs' },\n         { token: 'punctuation.definition.string.begin.elixir',\n           regex: '\"',\n           push: \n            [ { token: 'punctuation.definition.string.end.elixir',\n                regex: '\"',\n                next: 'pop' },\n              { include: '#interpolated_elixir' },\n              { include: '#escaped_char' },\n              { defaultToken: 'string.quoted.double.elixir' } ],\n           comment: 'double quoted string (allows for interpolation)' },\n         { token: 'punctuation.definition.string.begin.elixir',\n           regex: '~[a-z](?:\"\"\")',\n           TODO: 'FIXME: regexp doesn\\'t have js equivalent',\n           originalRegex: '~[a-z](?>\"\"\")',\n           push: \n            [ { token: 'punctuation.definition.string.end.elixir',\n                regex: '^\\\\s*\"\"\"',\n                next: 'pop' },\n              { include: '#interpolated_elixir' },\n              { include: '#escaped_char' },\n              { defaultToken: 'string.quoted.double.heredoc.elixir' } ],\n           comment: 'Double-quoted heredocs sigils' },\n         { token: 'punctuation.definition.string.begin.elixir',\n           regex: '~[a-z]\\\\{',\n           push: \n            [ { token: 'punctuation.definition.string.end.elixir',\n                regex: '\\\\}[a-z]*',\n                next: 'pop' },\n              { include: '#interpolated_elixir' },\n              { include: '#escaped_char' },\n              { defaultToken: 'string.interpolated.elixir' } ],\n           comment: 'sigil (allow for interpolation)' },\n         { token: 'punctuation.definition.string.begin.elixir',\n           regex: '~[a-z]\\\\[',\n           push: \n            [ { token: 'punctuation.definition.string.end.elixir',\n                regex: '\\\\][a-z]*',\n                next: 'pop' },\n              { include: '#interpolated_elixir' },\n              { include: '#escaped_char' },\n              { defaultToken: 'string.interpolated.elixir' } ],\n           comment: 'sigil (allow for interpolation)' },\n         { token: 'punctuation.definition.string.begin.elixir',\n           regex: '~[a-z]\\\\<',\n           push: \n            [ { token: 'punctuation.definition.string.end.elixir',\n                regex: '\\\\>[a-z]*',\n                next: 'pop' },\n              { include: '#interpolated_elixir' },\n              { include: '#escaped_char' },\n              { defaultToken: 'string.interpolated.elixir' } ],\n           comment: 'sigil (allow for interpolation)' },\n         { token: 'punctuation.definition.string.begin.elixir',\n           regex: '~[a-z]\\\\(',\n           push: \n            [ { token: 'punctuation.definition.string.end.elixir',\n                regex: '\\\\)[a-z]*',\n                next: 'pop' },\n              { include: '#interpolated_elixir' },\n              { include: '#escaped_char' },\n              { defaultToken: 'string.interpolated.elixir' } ],\n           comment: 'sigil (allow for interpolation)' },\n         { token: 'punctuation.definition.string.begin.elixir',\n           regex: '~[a-z][^\\\\w]',\n           push: \n            [ { token: 'punctuation.definition.string.end.elixir',\n                regex: '[^\\\\w][a-z]*',\n                next: 'pop' },\n              { include: '#interpolated_elixir' },\n              { include: '#escaped_char' },\n              { include: '#escaped_char' },\n              { defaultToken: 'string.interpolated.elixir' } ],\n           comment: 'sigil (allow for interpolation)' },\n         { token: 'punctuation.definition.string.begin.elixir',\n           regex: '~[A-Z](?:\"\"\")',\n           TODO: 'FIXME: regexp doesn\\'t have js equivalent',\n           originalRegex: '~[A-Z](?>\"\"\")',\n           push: \n            [ { token: 'punctuation.definition.string.end.elixir',\n                regex: '^\\\\s*\"\"\"',\n                next: 'pop' },\n              { defaultToken: 'string.quoted.other.literal.upper.elixir' } ],\n           comment: 'Double-quoted heredocs sigils' },\n         { token: 'punctuation.definition.string.begin.elixir',\n           regex: '~[A-Z]\\\\{',\n           push: \n            [ { token: 'punctuation.definition.string.end.elixir',\n                regex: '\\\\}[a-z]*',\n                next: 'pop' },\n              { defaultToken: 'string.quoted.other.literal.upper.elixir' } ],\n           comment: 'sigil (without interpolation)' },\n         { token: 'punctuation.definition.string.begin.elixir',\n           regex: '~[A-Z]\\\\[',\n           push: \n            [ { token: 'punctuation.definition.string.end.elixir',\n                regex: '\\\\][a-z]*',\n                next: 'pop' },\n              { defaultToken: 'string.quoted.other.literal.upper.elixir' } ],\n           comment: 'sigil (without interpolation)' },\n         { token: 'punctuation.definition.string.begin.elixir',\n           regex: '~[A-Z]\\\\<',\n           push: \n            [ { token: 'punctuation.definition.string.end.elixir',\n                regex: '\\\\>[a-z]*',\n                next: 'pop' },\n              { defaultToken: 'string.quoted.other.literal.upper.elixir' } ],\n           comment: 'sigil (without interpolation)' },\n         { token: 'punctuation.definition.string.begin.elixir',\n           regex: '~[A-Z]\\\\(',\n           push: \n            [ { token: 'punctuation.definition.string.end.elixir',\n                regex: '\\\\)[a-z]*',\n                next: 'pop' },\n              { defaultToken: 'string.quoted.other.literal.upper.elixir' } ],\n           comment: 'sigil (without interpolation)' },\n         { token: 'punctuation.definition.string.begin.elixir',\n           regex: '~[A-Z][^\\\\w]',\n           push: \n            [ { token: 'punctuation.definition.string.end.elixir',\n                regex: '[^\\\\w][a-z]*',\n                next: 'pop' },\n              { defaultToken: 'string.quoted.other.literal.upper.elixir' } ],\n           comment: 'sigil (without interpolation)' },\n         { token: ['punctuation.definition.constant.elixir', 'constant.other.symbol.elixir'],\n           regex: '(:)([a-zA-Z_][\\\\w@]*(?:[?!]|=(?![>=]))?|\\\\<\\\\>|===?|!==?|<<>>|<<<|>>>|~~~|::|<\\\\-|\\\\|>|=>|~|~=|=|/|\\\\\\\\\\\\\\\\|\\\\*\\\\*?|\\\\.\\\\.?\\\\.?|>=?|<=?|&&?&?|\\\\+\\\\+?|\\\\-\\\\-?|\\\\|\\\\|?\\\\|?|\\\\!|@|\\\\%?\\\\{\\\\}|%|\\\\[\\\\]|\\\\^(?:\\\\^\\\\^)?)',\n           TODO: 'FIXME: regexp doesn\\'t have js equivalent',\n           originalRegex: '(?<!:)(:)(?>[a-zA-Z_][\\\\w@]*(?>[?!]|=(?![>=]))?|\\\\<\\\\>|===?|!==?|<<>>|<<<|>>>|~~~|::|<\\\\-|\\\\|>|=>|~|~=|=|/|\\\\\\\\\\\\\\\\|\\\\*\\\\*?|\\\\.\\\\.?\\\\.?|>=?|<=?|&&?&?|\\\\+\\\\+?|\\\\-\\\\-?|\\\\|\\\\|?\\\\|?|\\\\!|@|\\\\%?\\\\{\\\\}|%|\\\\[\\\\]|\\\\^(\\\\^\\\\^)?)',\n           comment: 'symbols' },\n         { token: 'punctuation.definition.constant.elixir',\n           regex: '(?:[a-zA-Z_][\\\\w@]*(?:[?!])?):(?!:)',\n           TODO: 'FIXME: regexp doesn\\'t have js equivalent',\n           originalRegex: '(?>[a-zA-Z_][\\\\w@]*(?>[?!])?)(:)(?!:)',\n           comment: 'symbols' },\n         { token: \n            [ 'punctuation.definition.comment.elixir',\n              'comment.line.number-sign.elixir' ],\n           regex: '(#)(.*)' },\n         { token: 'constant.numeric.elixir',\n           regex: '\\\\?(?:\\\\\\\\(?:x[\\\\da-fA-F]{1,2}(?![\\\\da-fA-F])\\\\b|[^xMC])|[^\\\\s\\\\\\\\])',\n           TODO: 'FIXME: regexp doesn\\'t have js equivalent',\n           originalRegex: '(?<!\\\\w)\\\\?(\\\\\\\\(x\\\\h{1,2}(?!\\\\h)\\\\b|[^xMC])|[^\\\\s\\\\\\\\])',\n           comment: '\\n\\t\\t\\tmatches questionmark-letters.\\n\\n\\t\\t\\texamples (1st alternation = hex):\\n\\t\\t\\t?\\\\x1     ?\\\\x61\\n\\n\\t\\t\\texamples (2rd alternation = escaped):\\n\\t\\t\\t?\\\\n      ?\\\\b\\n\\n\\t\\t\\texamples (3rd alternation = normal):\\n\\t\\t\\t?a       ?A       ?0 \\n\\t\\t\\t?*       ?\"       ?( \\n\\t\\t\\t?.       ?#\\n\\t\\t\\t\\n\\t\\t\\tthe negative lookbehind prevents against matching\\n\\t\\t\\tp(42.tainted?)\\n\\t\\t\\t' },\n         { token: 'keyword.operator.assignment.augmented.elixir',\n           regex: '\\\\+=|\\\\-=|\\\\|\\\\|=|~=|&&=' },\n         { token: 'keyword.operator.comparison.elixir',\n           regex: '===?|!==?|<=?|>=?' },\n         { token: 'keyword.operator.bitwise.elixir',\n           regex: '\\\\|{3}|&{3}|\\\\^{3}|<{3}|>{3}|~{3}' },\n         { token: 'keyword.operator.logical.elixir',\n           regex: '!+|\\\\bnot\\\\b|&&|\\\\band\\\\b|\\\\|\\\\||\\\\bor\\\\b|\\\\bxor\\\\b',\n           originalRegex: '(?<=[ \\\\t])!+|\\\\bnot\\\\b|&&|\\\\band\\\\b|\\\\|\\\\||\\\\bor\\\\b|\\\\bxor\\\\b' },\n         { token: 'keyword.operator.arithmetic.elixir',\n           regex: '\\\\*|\\\\+|\\\\-|/' },\n         { token: 'keyword.operator.other.elixir',\n           regex: '\\\\||\\\\+\\\\+|\\\\-\\\\-|\\\\*\\\\*|\\\\\\\\\\\\\\\\|\\\\<\\\\-|\\\\<\\\\>|\\\\<\\\\<|\\\\>\\\\>|\\\\:\\\\:|\\\\.\\\\.|\\\\|>|~|=>' },\n         { token: 'keyword.operator.assignment.elixir', regex: '=' },\n         { token: 'punctuation.separator.other.elixir', regex: ':' },\n         { token: 'punctuation.separator.statement.elixir',\n           regex: '\\\\;' },\n         { token: 'punctuation.separator.object.elixir', regex: ',' },\n         { token: 'punctuation.separator.method.elixir', regex: '\\\\.' },\n         { token: 'punctuation.section.scope.elixir', regex: '\\\\{|\\\\}' },\n         { token: 'punctuation.section.array.elixir', regex: '\\\\[|\\\\]' },\n         { token: 'punctuation.section.function.elixir',\n           regex: '\\\\(|\\\\)' } ],\n      '#escaped_char': \n       [ { token: 'constant.character.escape.elixir',\n           regex: '\\\\\\\\(?:x[\\\\da-fA-F]{1,2}|.)' } ],\n      '#interpolated_elixir': \n       [ { token: \n            [ 'source.elixir.embedded.source',\n              'source.elixir.embedded.source.empty' ],\n           regex: '(#\\\\{)(\\\\})' },\n         { todo: \n            { token: 'punctuation.section.embedded.elixir',\n              regex: '#\\\\{',\n              push: \n               [ { token: 'punctuation.section.embedded.elixir',\n                   regex: '\\\\}',\n                   next: 'pop' },\n                 { include: '#nest_curly_and_self' },\n                 { include: '$self' },\n                 { defaultToken: 'source.elixir.embedded.source' } ] } } ],\n      '#nest_curly_and_self': \n       [ { token: 'punctuation.section.scope.elixir',\n           regex: '\\\\{',\n           push: \n            [ { token: 'punctuation.section.scope.elixir',\n                regex: '\\\\}',\n                next: 'pop' },\n              { include: '#nest_curly_and_self' } ] },\n         { include: '$self' } ],\n      '#regex_sub': \n       [ { include: '#interpolated_elixir' },\n         { include: '#escaped_char' },\n         { token: \n            [ 'punctuation.definition.arbitrary-repitition.elixir',\n              'string.regexp.arbitrary-repitition.elixir',\n              'string.regexp.arbitrary-repitition.elixir',\n              'punctuation.definition.arbitrary-repitition.elixir' ],\n           regex: '(\\\\{)(\\\\d+)((?:,\\\\d+)?)(\\\\})' },\n         { token: 'punctuation.definition.character-class.elixir',\n           regex: '\\\\[(?:\\\\^?\\\\])?',\n           push: \n            [ { token: 'punctuation.definition.character-class.elixir',\n                regex: '\\\\]',\n                next: 'pop' },\n              { include: '#escaped_char' },\n              { defaultToken: 'string.regexp.character-class.elixir' } ] },\n         { token: 'punctuation.definition.group.elixir',\n           regex: '\\\\(',\n           push: \n            [ { token: 'punctuation.definition.group.elixir',\n                regex: '\\\\)',\n                next: 'pop' },\n              { include: '#regex_sub' },\n              { defaultToken: 'string.regexp.group.elixir' } ] },\n         { token: \n            [ 'punctuation.definition.comment.elixir',\n              'comment.line.number-sign.elixir' ],\n           regex: '(?:^|\\\\s)(#)(\\\\s[[a-zA-Z0-9,. \\\\t?!-][^\\\\x00-\\\\x7F]]*$)',\n           originalRegex: '(?<=^|\\\\s)(#)\\\\s[[a-zA-Z0-9,. \\\\t?!-][^\\\\x{00}-\\\\x{7F}]]*$',\n           comment: 'We are restrictive in what we allow to go after the comment character to avoid false positives, since the availability of comments depend on regexp flags.' } ] }\n    \n    this.normalizeRules();\n};\n\nElixirHighlightRules.metaData = { comment: 'Textmate bundle for Elixir Programming Language.',\n      fileTypes: [ 'ex', 'exs' ],\n      firstLineMatch: '^#!/.*\\\\belixir',\n      foldingStartMarker: '(after|else|catch|rescue|\\\\-\\\\>|\\\\{|\\\\[|do)\\\\s*$',\n      foldingStopMarker: '^\\\\s*((\\\\}|\\\\]|after|else|catch|rescue)\\\\s*$|end\\\\b)',\n      keyEquivalent: '^~E',\n      name: 'Elixir',\n      scopeName: 'source.elixir' }\n\n\noop.inherits(ElixirHighlightRules, TextHighlightRules);\n\nexports.ElixirHighlightRules = ElixirHighlightRules;\n});\n\nace.define(\"ace/mode/folding/coffee\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\nvar Range = acequire(\"../../range\").Range;\n\nvar FoldMode = exports.FoldMode = function() {};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var range = this.indentationBlock(session, row);\n        if (range)\n            return range;\n\n        var re = /\\S/;\n        var line = session.getLine(row);\n        var startLevel = line.search(re);\n        if (startLevel == -1 || line[startLevel] != \"#\")\n            return;\n\n        var startColumn = line.length;\n        var maxRow = session.getLength();\n        var startRow = row;\n        var endRow = row;\n\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var level = line.search(re);\n\n            if (level == -1)\n                continue;\n\n            if (line[level] != \"#\")\n                break;\n\n            endRow = row;\n        }\n\n        if (endRow > startRow) {\n            var endColumn = session.getLine(endRow).length;\n            return new Range(startRow, startColumn, endRow, endColumn);\n        }\n    };\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        var next = session.getLine(row + 1);\n        var prev = session.getLine(row - 1);\n        var prevIndent = prev.search(/\\S/);\n        var nextIndent = next.search(/\\S/);\n\n        if (indent == -1) {\n            session.foldWidgets[row - 1] = prevIndent!= -1 && prevIndent < nextIndent ? \"start\" : \"\";\n            return \"\";\n        }\n        if (prevIndent == -1) {\n            if (indent == nextIndent && line[indent] == \"#\" && next[indent] == \"#\") {\n                session.foldWidgets[row - 1] = \"\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"start\";\n            }\n        } else if (prevIndent == indent && line[indent] == \"#\" && prev[indent] == \"#\") {\n            if (session.getLine(row - 2).search(/\\S/) == -1) {\n                session.foldWidgets[row - 1] = \"start\";\n                session.foldWidgets[row + 1] = \"\";\n                return \"\";\n            }\n        }\n\n        if (prevIndent!= -1 && prevIndent < indent)\n            session.foldWidgets[row - 1] = \"start\";\n        else\n            session.foldWidgets[row - 1] = \"\";\n\n        if (indent < nextIndent)\n            return \"start\";\n        else\n            return \"\";\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/elixir\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/elixir_highlight_rules\",\"ace/mode/folding/coffee\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar ElixirHighlightRules = acequire(\"./elixir_highlight_rules\").ElixirHighlightRules;\nvar FoldMode = acequire(\"./folding/coffee\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = ElixirHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.lineCommentStart = \"#\";\n    this.$id = \"ace/mode/elixir\"\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n\n\n\n// WEBPACK FOOTER //\n// /Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/elixir.js"],"sourceRoot":""}