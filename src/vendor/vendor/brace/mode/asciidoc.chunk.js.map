{"version":3,"sources":["webpack:///vendor/brace/mode/asciidoc.chunk.js","webpack:////Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/asciidoc.js"],"names":["webpackJsonppanneau","344","module","exports","ace","define","acequire","oop","TextHighlightRules","AsciidocHighlightRules","quoteRule","ch","test","this","$rules","start","token","regex","next","dissallowDelimitedBlock","include","paragraphEnd","listStart","text","listText","indentedBlock","listingBlock","literalBlock","passthroughBlock","identifierRe","smallPassthrough","commentBlock","tableBlock","noEscape","innerTableBlock","macros","quotes","tokenMap","macro","titleUnderline","singleLineTitle","pageBreak","option","otherBlock","literal","optionalTitle","escape","link","state","stateRules","i","length","rule","args","concat","filter","x","splice","apply","inherits","BaseFoldMode","FoldMode","Range","foldingStartMarker","singleLineHeadingRe","getFoldWidget","session","foldStyle","row","line","getLine","bgTokenizer","getState","getFoldWidgetRange","getTokenType","getTokens","type","getLevel","match","value","level","levels","indexOf","Infinity","startColumn","maxRow","getLength","startRow","endRow","startHeadingLevel","endColumn","lastIndexOf","call","prototype","TextMode","Mode","AsciidocFoldMode","HighlightRules","foldingRules","getNextLineIndent","tab","exec","Array","join","$getIndent","$id"],"mappings":"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","file":"vendor/brace/mode/asciidoc.chunk.js","sourcesContent":["webpackJsonppanneau([216],{\n\n/***/ 344:\n/***/ (function(module, exports) {\n\nace.define(\"ace/mode/asciidoc_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextHighlightRules=acequire(\"./text_highlight_rules\").TextHighlightRules;var AsciidocHighlightRules=function AsciidocHighlightRules(){var identifierRe=\"[a-zA-Z\\xA1-\\uFFFF]+\\\\b\";this.$rules={\"start\":[{token:\"empty\",regex:/$/},{token:\"literal\",regex:/^\\.{4,}\\s*$/,next:\"listingBlock\"},{token:\"literal\",regex:/^-{4,}\\s*$/,next:\"literalBlock\"},{token:\"string\",regex:/^\\+{4,}\\s*$/,next:\"passthroughBlock\"},{token:\"keyword\",regex:/^={4,}\\s*$/},{token:\"text\",regex:/^\\s*$/},{token:\"empty\",regex:\"\",next:\"dissallowDelimitedBlock\"}],\"dissallowDelimitedBlock\":[{include:\"paragraphEnd\"},{token:\"comment\",regex:'^//.+$'},{token:\"keyword\",regex:\"^(?:NOTE|TIP|IMPORTANT|WARNING|CAUTION):\"},{include:\"listStart\"},{token:\"literal\",regex:/^\\s+.+$/,next:\"indentedBlock\"},{token:\"empty\",regex:\"\",next:\"text\"}],\"paragraphEnd\":[{token:\"doc.comment\",regex:/^\\/{4,}\\s*$/,next:\"commentBlock\"},{token:\"tableBlock\",regex:/^\\s*[|!]=+\\s*$/,next:\"tableBlock\"},{token:\"keyword\",regex:/^(?:--|''')\\s*$/,next:\"start\"},{token:\"option\",regex:/^\\[.*\\]\\s*$/,next:\"start\"},{token:\"pageBreak\",regex:/^>{3,}$/,next:\"start\"},{token:\"literal\",regex:/^\\.{4,}\\s*$/,next:\"listingBlock\"},{token:\"titleUnderline\",regex:/^(?:={2,}|-{2,}|~{2,}|\\^{2,}|\\+{2,})\\s*$/,next:\"start\"},{token:\"singleLineTitle\",regex:/^={1,5}\\s+\\S.*$/,next:\"start\"},{token:\"otherBlock\",regex:/^(?:\\*{2,}|_{2,})\\s*$/,next:\"start\"},{token:\"optionalTitle\",regex:/^\\.[^.\\s].+$/,next:\"start\"}],\"listStart\":[{token:\"keyword\",regex:/^\\s*(?:\\d+\\.|[a-zA-Z]\\.|[ixvmIXVM]+\\)|\\*{1,5}|-|\\.{1,5})\\s/,next:\"listText\"},{token:\"meta.tag\",regex:/^.+(?::{2,4}|;;)(?: |$)/,next:\"listText\"},{token:\"support.function.list.callout\",regex:/^(?:<\\d+>|\\d+>|>) /,next:\"text\"},{token:\"keyword\",regex:/^\\+\\s*$/,next:\"start\"}],\"text\":[{token:[\"link\",\"variable.language\"],regex:/((?:https?:\\/\\/|ftp:\\/\\/|file:\\/\\/|mailto:|callto:)[^\\s\\[]+)(\\[.*?\\])/},{token:\"link\",regex:/(?:https?:\\/\\/|ftp:\\/\\/|file:\\/\\/|mailto:|callto:)[^\\s\\[]+/},{token:\"link\",regex:/\\b[\\w\\.\\/\\-]+@[\\w\\.\\/\\-]+\\b/},{include:\"macros\"},{include:\"paragraphEnd\"},{token:\"literal\",regex:/\\+{3,}/,next:\"smallPassthrough\"},{token:\"escape\",regex:/\\((?:C|TM|R)\\)|\\.{3}|->|<-|=>|<=|&#(?:\\d+|x[a-fA-F\\d]+);|(?: |^)--(?=\\s+\\S)/},{token:\"escape\",regex:/\\\\[_*'`+#]|\\\\{2}[_*'`+#]{2}/},{token:\"keyword\",regex:/\\s\\+$/},{token:\"text\",regex:identifierRe},{token:[\"keyword\",\"string\",\"keyword\"],regex:/(<<[\\w\\d\\-$]+,)(.*?)(>>|$)/},{token:\"keyword\",regex:/<<[\\w\\d\\-$]+,?|>>/},{token:\"constant.character\",regex:/\\({2,3}.*?\\){2,3}/},{token:\"keyword\",regex:/\\[\\[.+?\\]\\]/},{token:\"support\",regex:/^\\[{3}[\\w\\d =\\-]+\\]{3}/},{include:\"quotes\"},{token:\"empty\",regex:/^\\s*$/,next:\"start\"}],\"listText\":[{include:\"listStart\"},{include:\"text\"}],\"indentedBlock\":[{token:\"literal\",regex:/^[\\s\\w].+$/,next:\"indentedBlock\"},{token:\"literal\",regex:\"\",next:\"start\"}],\"listingBlock\":[{token:\"literal\",regex:/^\\.{4,}\\s*$/,next:\"dissallowDelimitedBlock\"},{token:\"constant.numeric\",regex:'<\\\\d+>'},{token:\"literal\",regex:'[^<]+'},{token:\"literal\",regex:'<'}],\"literalBlock\":[{token:\"literal\",regex:/^-{4,}\\s*$/,next:\"dissallowDelimitedBlock\"},{token:\"constant.numeric\",regex:'<\\\\d+>'},{token:\"literal\",regex:'[^<]+'},{token:\"literal\",regex:'<'}],\"passthroughBlock\":[{token:\"literal\",regex:/^\\+{4,}\\s*$/,next:\"dissallowDelimitedBlock\"},{token:\"literal\",regex:identifierRe+\"|\\\\d+\"},{include:\"macros\"},{token:\"literal\",regex:\".\"}],\"smallPassthrough\":[{token:\"literal\",regex:/[+]{3,}/,next:\"dissallowDelimitedBlock\"},{token:\"literal\",regex:/^\\s*$/,next:\"dissallowDelimitedBlock\"},{token:\"literal\",regex:identifierRe+\"|\\\\d+\"},{include:\"macros\"}],\"commentBlock\":[{token:\"doc.comment\",regex:/^\\/{4,}\\s*$/,next:\"dissallowDelimitedBlock\"},{token:\"doc.comment\",regex:'^.*$'}],\"tableBlock\":[{token:\"tableBlock\",regex:/^\\s*\\|={3,}\\s*$/,next:\"dissallowDelimitedBlock\"},{token:\"tableBlock\",regex:/^\\s*!={3,}\\s*$/,next:\"innerTableBlock\"},{token:\"tableBlock\",regex:/\\|/},{include:\"text\",noEscape:true}],\"innerTableBlock\":[{token:\"tableBlock\",regex:/^\\s*!={3,}\\s*$/,next:\"tableBlock\"},{token:\"tableBlock\",regex:/^\\s*|={3,}\\s*$/,next:\"dissallowDelimitedBlock\"},{token:\"tableBlock\",regex:/!/}],\"macros\":[{token:\"macro\",regex:/{[\\w\\-$]+}/},{token:[\"text\",\"string\",\"text\",\"constant.character\",\"text\"],regex:/({)([\\w\\-$]+)(:)?(.+)?(})/},{token:[\"text\",\"markup.list.macro\",\"keyword\",\"string\"],regex:/(\\w+)(footnote(?:ref)?::?)([^\\s\\[]+)?(\\[.*?\\])?/},{token:[\"markup.list.macro\",\"keyword\",\"string\"],regex:/([a-zA-Z\\-][\\w\\.\\/\\-]*::?)([^\\s\\[]+)(\\[.*?\\])?/},{token:[\"markup.list.macro\",\"keyword\"],regex:/([a-zA-Z\\-][\\w\\.\\/\\-]+::?)(\\[.*?\\])/},{token:\"keyword\",regex:/^:.+?:(?= |$)/}],\"quotes\":[{token:\"string.italic\",regex:/__[^_\\s].*?__/},{token:\"string.italic\",regex:quoteRule(\"_\")},{token:\"keyword.bold\",regex:/\\*\\*[^*\\s].*?\\*\\*/},{token:\"keyword.bold\",regex:quoteRule(\"\\\\*\")},{token:\"literal\",regex:quoteRule(\"\\\\+\")},{token:\"literal\",regex:/\\+\\+[^+\\s].*?\\+\\+/},{token:\"literal\",regex:/\\$\\$.+?\\$\\$/},{token:\"literal\",regex:quoteRule(\"`\")},{token:\"keyword\",regex:quoteRule(\"^\")},{token:\"keyword\",regex:quoteRule(\"~\")},{token:\"keyword\",regex:/##?/},{token:\"keyword\",regex:/(?:\\B|^)``|\\b''/}]};function quoteRule(ch){var prefix=/\\w/.test(ch)?\"\\\\b\":\"(?:\\\\B|^)\";return prefix+ch+\"[^\"+ch+\"].*?\"+ch+\"(?![\\\\w*])\";}var tokenMap={macro:\"constant.character\",tableBlock:\"doc.comment\",titleUnderline:\"markup.heading\",singleLineTitle:\"markup.heading\",pageBreak:\"string\",option:\"string.regexp\",otherBlock:\"markup.list\",literal:\"support.function\",optionalTitle:\"constant.numeric\",escape:\"constant.language.escape\",link:\"markup.underline.list\"};for(var state in this.$rules){var stateRules=this.$rules[state];for(var i=stateRules.length;i--;){var rule=stateRules[i];if(rule.include||typeof rule==\"string\"){var args=[i,1].concat(this.$rules[rule.include||rule]);if(rule.noEscape){args=args.filter(function(x){return!x.next;});}stateRules.splice.apply(stateRules,args);}else if(rule.token in tokenMap){rule.token=tokenMap[rule.token];}}}};oop.inherits(AsciidocHighlightRules,TextHighlightRules);exports.AsciidocHighlightRules=AsciidocHighlightRules;});ace.define(\"ace/mode/folding/asciidoc\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../../lib/oop\");var BaseFoldMode=acequire(\"./fold_mode\").FoldMode;var Range=acequire(\"../../range\").Range;var FoldMode=exports.FoldMode=function(){};oop.inherits(FoldMode,BaseFoldMode);(function(){this.foldingStartMarker=/^(?:\\|={10,}|[\\.\\/=\\-~^+]{4,}\\s*$|={1,5} )/;this.singleLineHeadingRe=/^={1,5}(?=\\s+\\S)/;this.getFoldWidget=function(session,foldStyle,row){var line=session.getLine(row);if(!this.foldingStartMarker.test(line))return\"\";if(line[0]==\"=\"){if(this.singleLineHeadingRe.test(line))return\"start\";if(session.getLine(row-1).length!=session.getLine(row).length)return\"\";return\"start\";}if(session.bgTokenizer.getState(row)==\"dissallowDelimitedBlock\")return\"end\";return\"start\";};this.getFoldWidgetRange=function(session,foldStyle,row){var line=session.getLine(row);var startColumn=line.length;var maxRow=session.getLength();var startRow=row;var endRow=row;if(!line.match(this.foldingStartMarker))return;var token;function getTokenType(row){token=session.getTokens(row)[0];return token&&token.type;}var levels=[\"=\",\"-\",\"~\",\"^\",\"+\"];var heading=\"markup.heading\";var singleLineHeadingRe=this.singleLineHeadingRe;function getLevel(){var match=token.value.match(singleLineHeadingRe);if(match)return match[0].length;var level=levels.indexOf(token.value[0])+1;if(level==1){if(session.getLine(row-1).length!=session.getLine(row).length)return Infinity;}return level;}if(getTokenType(row)==heading){var startHeadingLevel=getLevel();while(++row<maxRow){if(getTokenType(row)!=heading)continue;var level=getLevel();if(level<=startHeadingLevel)break;}var isSingleLineHeading=token&&token.value.match(this.singleLineHeadingRe);endRow=isSingleLineHeading?row-1:row-2;if(endRow>startRow){while(endRow>startRow&&(!getTokenType(endRow)||token.value[0]==\"[\")){endRow--;}}if(endRow>startRow){var endColumn=session.getLine(endRow).length;return new Range(startRow,startColumn,endRow,endColumn);}}else{var state=session.bgTokenizer.getState(row);if(state==\"dissallowDelimitedBlock\"){while(row-->0){if(session.bgTokenizer.getState(row).lastIndexOf(\"Block\")==-1)break;}endRow=row+1;if(endRow<startRow){var endColumn=session.getLine(row).length;return new Range(endRow,5,startRow,startColumn-5);}}else{while(++row<maxRow){if(session.bgTokenizer.getState(row)==\"dissallowDelimitedBlock\")break;}endRow=row;if(endRow>startRow){var endColumn=session.getLine(row).length;return new Range(startRow,5,endRow,endColumn-5);}}}};}).call(FoldMode.prototype);});ace.define(\"ace/mode/asciidoc\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/asciidoc_highlight_rules\",\"ace/mode/folding/asciidoc\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextMode=acequire(\"./text\").Mode;var AsciidocHighlightRules=acequire(\"./asciidoc_highlight_rules\").AsciidocHighlightRules;var AsciidocFoldMode=acequire(\"./folding/asciidoc\").FoldMode;var Mode=function Mode(){this.HighlightRules=AsciidocHighlightRules;this.foldingRules=new AsciidocFoldMode();};oop.inherits(Mode,TextMode);(function(){this.type=\"text\";this.getNextLineIndent=function(state,line,tab){if(state==\"listblock\"){var match=/^((?:.+)?)([-+*][ ]+)/.exec(line);if(match){return new Array(match[1].length+1).join(\" \")+match[2];}else{return\"\";}}else{return this.$getIndent(line);}};this.$id=\"ace/mode/asciidoc\";}).call(Mode.prototype);exports.Mode=Mode;});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// vendor/brace/mode/asciidoc.chunk.js","ace.define(\"ace/mode/asciidoc_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar AsciidocHighlightRules = function() {\n    var identifierRe = \"[a-zA-Z\\u00a1-\\uffff]+\\\\b\";\n\n    this.$rules = {\n        \"start\": [\n            {token: \"empty\",   regex: /$/},\n            {token: \"literal\", regex: /^\\.{4,}\\s*$/,  next: \"listingBlock\"},\n            {token: \"literal\", regex: /^-{4,}\\s*$/,   next: \"literalBlock\"},\n            {token: \"string\",  regex: /^\\+{4,}\\s*$/,  next: \"passthroughBlock\"},\n            {token: \"keyword\", regex: /^={4,}\\s*$/},\n            {token: \"text\",    regex: /^\\s*$/},\n            {token: \"empty\", regex: \"\", next: \"dissallowDelimitedBlock\"}\n        ],\n\n        \"dissallowDelimitedBlock\": [\n            {include: \"paragraphEnd\"},\n            {token: \"comment\", regex: '^//.+$'},\n            {token: \"keyword\", regex: \"^(?:NOTE|TIP|IMPORTANT|WARNING|CAUTION):\"},\n\n            {include: \"listStart\"},\n            {token: \"literal\", regex: /^\\s+.+$/, next: \"indentedBlock\"},\n            {token: \"empty\",   regex: \"\", next: \"text\"}\n        ],\n\n        \"paragraphEnd\": [\n            {token: \"doc.comment\", regex: /^\\/{4,}\\s*$/,    next: \"commentBlock\"},\n            {token: \"tableBlock\",  regex: /^\\s*[|!]=+\\s*$/, next: \"tableBlock\"},\n            {token: \"keyword\",     regex: /^(?:--|''')\\s*$/, next: \"start\"},\n            {token: \"option\",      regex: /^\\[.*\\]\\s*$/,     next: \"start\"},\n            {token: \"pageBreak\",   regex: /^>{3,}$/,         next: \"start\"},\n            {token: \"literal\",     regex: /^\\.{4,}\\s*$/,     next: \"listingBlock\"},\n            {token: \"titleUnderline\",    regex: /^(?:={2,}|-{2,}|~{2,}|\\^{2,}|\\+{2,})\\s*$/, next: \"start\"},\n            {token: \"singleLineTitle\",   regex: /^={1,5}\\s+\\S.*$/, next: \"start\"},\n\n            {token: \"otherBlock\",    regex: /^(?:\\*{2,}|_{2,})\\s*$/, next: \"start\"},\n            {token: \"optionalTitle\", regex: /^\\.[^.\\s].+$/,  next: \"start\"}\n        ],\n\n        \"listStart\": [\n            {token: \"keyword\",  regex: /^\\s*(?:\\d+\\.|[a-zA-Z]\\.|[ixvmIXVM]+\\)|\\*{1,5}|-|\\.{1,5})\\s/, next: \"listText\"},\n            {token: \"meta.tag\", regex: /^.+(?::{2,4}|;;)(?: |$)/, next: \"listText\"},\n            {token: \"support.function.list.callout\", regex: /^(?:<\\d+>|\\d+>|>) /, next: \"text\"},\n            {token: \"keyword\",  regex: /^\\+\\s*$/, next: \"start\"}\n        ],\n\n        \"text\": [\n            {token: [\"link\", \"variable.language\"], regex: /((?:https?:\\/\\/|ftp:\\/\\/|file:\\/\\/|mailto:|callto:)[^\\s\\[]+)(\\[.*?\\])/},\n            {token: \"link\", regex: /(?:https?:\\/\\/|ftp:\\/\\/|file:\\/\\/|mailto:|callto:)[^\\s\\[]+/},\n            {token: \"link\", regex: /\\b[\\w\\.\\/\\-]+@[\\w\\.\\/\\-]+\\b/},\n            {include: \"macros\"},\n            {include: \"paragraphEnd\"},\n            {token: \"literal\", regex:/\\+{3,}/, next:\"smallPassthrough\"},\n            {token: \"escape\", regex: /\\((?:C|TM|R)\\)|\\.{3}|->|<-|=>|<=|&#(?:\\d+|x[a-fA-F\\d]+);|(?: |^)--(?=\\s+\\S)/},\n            {token: \"escape\", regex: /\\\\[_*'`+#]|\\\\{2}[_*'`+#]{2}/},\n            {token: \"keyword\", regex: /\\s\\+$/},\n            {token: \"text\", regex: identifierRe},\n            {token: [\"keyword\", \"string\", \"keyword\"],\n                regex: /(<<[\\w\\d\\-$]+,)(.*?)(>>|$)/},\n            {token: \"keyword\", regex: /<<[\\w\\d\\-$]+,?|>>/},\n            {token: \"constant.character\", regex: /\\({2,3}.*?\\){2,3}/},\n            {token: \"keyword\", regex: /\\[\\[.+?\\]\\]/},\n            {token: \"support\", regex: /^\\[{3}[\\w\\d =\\-]+\\]{3}/},\n\n            {include: \"quotes\"},\n            {token: \"empty\", regex: /^\\s*$/, next: \"start\"}\n        ],\n\n        \"listText\": [\n            {include: \"listStart\"},\n            {include: \"text\"}\n        ],\n\n        \"indentedBlock\": [\n            {token: \"literal\", regex: /^[\\s\\w].+$/, next: \"indentedBlock\"},\n            {token: \"literal\", regex: \"\", next: \"start\"}\n        ],\n\n        \"listingBlock\": [\n            {token: \"literal\", regex: /^\\.{4,}\\s*$/, next: \"dissallowDelimitedBlock\"},\n            {token: \"constant.numeric\", regex: '<\\\\d+>'},\n            {token: \"literal\", regex: '[^<]+'},\n            {token: \"literal\", regex: '<'}\n        ],\n        \"literalBlock\": [\n            {token: \"literal\", regex: /^-{4,}\\s*$/, next: \"dissallowDelimitedBlock\"},\n            {token: \"constant.numeric\", regex: '<\\\\d+>'},\n            {token: \"literal\", regex: '[^<]+'},\n            {token: \"literal\", regex: '<'}\n        ],\n        \"passthroughBlock\": [\n            {token: \"literal\", regex: /^\\+{4,}\\s*$/, next: \"dissallowDelimitedBlock\"},\n            {token: \"literal\", regex: identifierRe + \"|\\\\d+\"},\n            {include: \"macros\"},\n            {token: \"literal\", regex: \".\"}\n        ],\n\n        \"smallPassthrough\": [\n            {token: \"literal\", regex: /[+]{3,}/, next: \"dissallowDelimitedBlock\"},\n            {token: \"literal\", regex: /^\\s*$/, next: \"dissallowDelimitedBlock\"},\n            {token: \"literal\", regex: identifierRe + \"|\\\\d+\"},\n            {include: \"macros\"}\n        ],\n\n        \"commentBlock\": [\n            {token: \"doc.comment\", regex: /^\\/{4,}\\s*$/, next: \"dissallowDelimitedBlock\"},\n            {token: \"doc.comment\", regex: '^.*$'}\n        ],\n        \"tableBlock\": [\n            {token: \"tableBlock\", regex: /^\\s*\\|={3,}\\s*$/, next: \"dissallowDelimitedBlock\"},\n            {token: \"tableBlock\", regex: /^\\s*!={3,}\\s*$/, next: \"innerTableBlock\"},\n            {token: \"tableBlock\", regex: /\\|/},\n            {include: \"text\", noEscape: true}\n        ],\n        \"innerTableBlock\": [\n            {token: \"tableBlock\", regex: /^\\s*!={3,}\\s*$/, next: \"tableBlock\"},\n            {token: \"tableBlock\", regex: /^\\s*|={3,}\\s*$/, next: \"dissallowDelimitedBlock\"},\n            {token: \"tableBlock\", regex: /!/}\n        ],\n        \"macros\": [\n            {token: \"macro\", regex: /{[\\w\\-$]+}/},\n            {token: [\"text\", \"string\", \"text\", \"constant.character\", \"text\"], regex: /({)([\\w\\-$]+)(:)?(.+)?(})/},\n            {token: [\"text\", \"markup.list.macro\", \"keyword\", \"string\"], regex: /(\\w+)(footnote(?:ref)?::?)([^\\s\\[]+)?(\\[.*?\\])?/},\n            {token: [\"markup.list.macro\", \"keyword\", \"string\"], regex: /([a-zA-Z\\-][\\w\\.\\/\\-]*::?)([^\\s\\[]+)(\\[.*?\\])?/},\n            {token: [\"markup.list.macro\", \"keyword\"], regex: /([a-zA-Z\\-][\\w\\.\\/\\-]+::?)(\\[.*?\\])/},\n            {token: \"keyword\",     regex: /^:.+?:(?= |$)/}\n        ],\n\n        \"quotes\": [\n            {token: \"string.italic\", regex: /__[^_\\s].*?__/},\n            {token: \"string.italic\", regex: quoteRule(\"_\")},\n            \n            {token: \"keyword.bold\", regex: /\\*\\*[^*\\s].*?\\*\\*/},\n            {token: \"keyword.bold\", regex: quoteRule(\"\\\\*\")},\n            \n            {token: \"literal\", regex: quoteRule(\"\\\\+\")},\n            {token: \"literal\", regex: /\\+\\+[^+\\s].*?\\+\\+/},\n            {token: \"literal\", regex: /\\$\\$.+?\\$\\$/},\n            {token: \"literal\", regex: quoteRule(\"`\")},\n\n            {token: \"keyword\", regex: quoteRule(\"^\")},\n            {token: \"keyword\", regex: quoteRule(\"~\")},\n            {token: \"keyword\", regex: /##?/},\n            {token: \"keyword\", regex: /(?:\\B|^)``|\\b''/}\n        ]\n\n    };\n\n    function quoteRule(ch) {\n        var prefix = /\\w/.test(ch) ? \"\\\\b\" : \"(?:\\\\B|^)\";\n        return prefix + ch + \"[^\" + ch + \"].*?\" + ch + \"(?![\\\\w*])\";\n    }\n\n    var tokenMap = {\n        macro: \"constant.character\",\n        tableBlock: \"doc.comment\",\n        titleUnderline: \"markup.heading\",\n        singleLineTitle: \"markup.heading\",\n        pageBreak: \"string\",\n        option: \"string.regexp\",\n        otherBlock: \"markup.list\",\n        literal: \"support.function\",\n        optionalTitle: \"constant.numeric\",\n        escape: \"constant.language.escape\",\n        link: \"markup.underline.list\"\n    };\n\n    for (var state in this.$rules) {\n        var stateRules = this.$rules[state];\n        for (var i = stateRules.length; i--; ) {\n            var rule = stateRules[i];\n            if (rule.include || typeof rule == \"string\") {\n                var args = [i, 1].concat(this.$rules[rule.include || rule]);\n                if (rule.noEscape) {\n                    args = args.filter(function(x) {\n                        return !x.next;\n                    });\n                }\n                stateRules.splice.apply(stateRules, args);\n            } else if (rule.token in tokenMap) {\n                rule.token = tokenMap[rule.token];\n            }\n        }\n    }\n};\noop.inherits(AsciidocHighlightRules, TextHighlightRules);\n\nexports.AsciidocHighlightRules = AsciidocHighlightRules;\n});\n\nace.define(\"ace/mode/folding/asciidoc\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\nvar Range = acequire(\"../../range\").Range;\n\nvar FoldMode = exports.FoldMode = function() {};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    this.foldingStartMarker = /^(?:\\|={10,}|[\\.\\/=\\-~^+]{4,}\\s*$|={1,5} )/;\n    this.singleLineHeadingRe = /^={1,5}(?=\\s+\\S)/;\n\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n        if (!this.foldingStartMarker.test(line))\n            return \"\"\n\n        if (line[0] == \"=\") {\n            if (this.singleLineHeadingRe.test(line))\n                return \"start\";\n            if (session.getLine(row - 1).length != session.getLine(row).length)\n                return \"\";\n            return \"start\";\n        }\n        if (session.bgTokenizer.getState(row) == \"dissallowDelimitedBlock\")\n            return \"end\";\n        return \"start\";\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n        var startColumn = line.length;\n        var maxRow = session.getLength();\n        var startRow = row;\n        var endRow = row;\n        if (!line.match(this.foldingStartMarker))\n            return;\n\n        var token;\n        function getTokenType(row) {\n            token = session.getTokens(row)[0];\n            return token && token.type;\n        }\n\n        var levels = [\"=\",\"-\",\"~\",\"^\",\"+\"];\n        var heading = \"markup.heading\";\n        var singleLineHeadingRe = this.singleLineHeadingRe;\n        function getLevel() {\n            var match = token.value.match(singleLineHeadingRe);\n            if (match)\n                return match[0].length;\n            var level = levels.indexOf(token.value[0]) + 1;\n            if (level == 1) {\n                if (session.getLine(row - 1).length != session.getLine(row).length)\n                    return Infinity;\n            }\n            return level;\n        }\n\n        if (getTokenType(row) == heading) {\n            var startHeadingLevel = getLevel();\n            while (++row < maxRow) {\n                if (getTokenType(row) != heading)\n                    continue;\n                var level = getLevel();\n                if (level <= startHeadingLevel)\n                    break;\n            }\n\n            var isSingleLineHeading = token && token.value.match(this.singleLineHeadingRe);\n            endRow = isSingleLineHeading ? row - 1 : row - 2;\n\n            if (endRow > startRow) {\n                while (endRow > startRow && (!getTokenType(endRow) || token.value[0] == \"[\"))\n                    endRow--;\n            }\n\n            if (endRow > startRow) {\n                var endColumn = session.getLine(endRow).length;\n                return new Range(startRow, startColumn, endRow, endColumn);\n            }\n        } else {\n            var state = session.bgTokenizer.getState(row);\n            if (state == \"dissallowDelimitedBlock\") {\n                while (row -- > 0) {\n                    if (session.bgTokenizer.getState(row).lastIndexOf(\"Block\") == -1)\n                        break;\n                }\n                endRow = row + 1;\n                if (endRow < startRow) {\n                    var endColumn = session.getLine(row).length;\n                    return new Range(endRow, 5, startRow, startColumn - 5);\n                }\n            } else {\n                while (++row < maxRow) {\n                    if (session.bgTokenizer.getState(row) == \"dissallowDelimitedBlock\")\n                        break;\n                }\n                endRow = row;\n                if (endRow > startRow) {\n                    var endColumn = session.getLine(row).length;\n                    return new Range(startRow, 5, endRow, endColumn - 5);\n                }\n            }\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/asciidoc\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/asciidoc_highlight_rules\",\"ace/mode/folding/asciidoc\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar AsciidocHighlightRules = acequire(\"./asciidoc_highlight_rules\").AsciidocHighlightRules;\nvar AsciidocFoldMode = acequire(\"./folding/asciidoc\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = AsciidocHighlightRules;\n    \n    this.foldingRules = new AsciidocFoldMode();    \n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.type = \"text\";\n    this.getNextLineIndent = function(state, line, tab) {\n        if (state == \"listblock\") {\n            var match = /^((?:.+)?)([-+*][ ]+)/.exec(line);\n            if (match) {\n                return new Array(match[1].length + 1).join(\" \") + match[2];\n            } else {\n                return \"\";\n            }\n        } else {\n            return this.$getIndent(line);\n        }\n    };\n    this.$id = \"ace/mode/asciidoc\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n\n\n\n// WEBPACK FOOTER //\n// /Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/asciidoc.js"],"sourceRoot":""}