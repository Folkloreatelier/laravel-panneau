{"version":3,"sources":["webpack:///vendor/brace/mode/csharp.chunk.js","webpack:////Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/csharp.js"],"names":["webpackJsonppanneau","356","module","exports","ace","define","acequire","oop","TextHighlightRules","DocCommentHighlightRules","this","$rules","start","token","regex","getTagRule","defaultToken","caseInsensitive","inherits","getStartRule","next","getEndRule","CSharpHighlightRules","keywordMapper","createKeywordMapper","variable.language","keyword","constant.language","end","comment","embedRules","normalizeRules","Range","MatchingBraceOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","getLine","match","column","length","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","foldingStopMarker","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","i","index","openingBracketBlock","range","getCommentFoldRange","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","subRange","re","depth","m","exec","CFoldMode","usingRe","getFoldWidgetRangeBase","getFoldWidgetBase","prev","getUsingStatementBlock","getRegionBlock","endColumn","TextMode","Mode","CstyleBehaviour","CStyleFoldMode","HighlightRules","$outdent","$behaviour","foldingRules","lineCommentStart","blockComment","getNextLineIndent","state","tab","tokenizedLine","getTokenizer","getLineTokens","tokens","type","createWorker","$id"],"mappings":"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","file":"vendor/brace/mode/csharp.chunk.js","sourcesContent":["webpackJsonppanneau([206],{\n\n/***/ 356:\n/***/ (function(module, exports) {\n\nace.define(\"ace/mode/doc_comment_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextHighlightRules=acequire(\"./text_highlight_rules\").TextHighlightRules;var DocCommentHighlightRules=function DocCommentHighlightRules(){this.$rules={\"start\":[{token:\"comment.doc.tag\",regex:\"@[\\\\w\\\\d_]+\"// TODO: fix email addresses\n},DocCommentHighlightRules.getTagRule(),{defaultToken:\"comment.doc\",caseInsensitive:true}]};};oop.inherits(DocCommentHighlightRules,TextHighlightRules);DocCommentHighlightRules.getTagRule=function(start){return{token:\"comment.doc.tag.storage.type\",regex:\"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"};};DocCommentHighlightRules.getStartRule=function(start){return{token:\"comment.doc\",// doc comment\nregex:\"\\\\/\\\\*(?=\\\\*)\",next:start};};DocCommentHighlightRules.getEndRule=function(start){return{token:\"comment.doc\",// closing comment\nregex:\"\\\\*\\\\/\",next:start};};exports.DocCommentHighlightRules=DocCommentHighlightRules;});ace.define(\"ace/mode/csharp_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/doc_comment_highlight_rules\",\"ace/mode/text_highlight_rules\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var DocCommentHighlightRules=acequire(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;var TextHighlightRules=acequire(\"./text_highlight_rules\").TextHighlightRules;var CSharpHighlightRules=function CSharpHighlightRules(){var keywordMapper=this.createKeywordMapper({\"variable.language\":\"this\",\"keyword\":\"abstract|event|new|struct|as|explicit|null|switch|base|extern|object|this|bool|false|operator|throw|break|finally|out|true|byte|fixed|override|try|case|float|params|typeof|catch|for|private|uint|char|foreach|protected|ulong|checked|goto|public|unchecked|class|if|readonly|unsafe|const|implicit|ref|ushort|continue|in|return|using|decimal|int|sbyte|virtual|default|interface|sealed|volatile|delegate|internal|short|void|do|is|sizeof|while|double|lock|stackalloc|else|long|static|enum|namespace|string|var|dynamic\",\"constant.language\":\"null|true|false\"},\"identifier\");this.$rules={\"start\":[{token:\"comment\",regex:\"\\\\/\\\\/.*$\"},DocCommentHighlightRules.getStartRule(\"doc-start\"),{token:\"comment\",// multi line comment\nregex:\"\\\\/\\\\*\",next:\"comment\"},{token:\"string\",// character\nregex:/'(?:.|\\\\(:?u[\\da-fA-F]+|x[\\da-fA-F]+|[tbrf'\"n]))'/},{token:\"string\",start:'\"',end:'\"|$',next:[{token:\"constant.language.escape\",regex:/\\\\(:?u[\\da-fA-F]+|x[\\da-fA-F]+|[tbrf'\"n])/},{token:\"invalid\",regex:/\\\\./}]},{token:\"string\",start:'@\"',end:'\"',next:[{token:\"constant.language.escape\",regex:'\"\"'}]},{token:\"string\",start:/\\$\"/,end:'\"|$',next:[{token:\"constant.language.escape\",regex:/\\\\(:?$)|{{/},{token:\"constant.language.escape\",regex:/\\\\(:?u[\\da-fA-F]+|x[\\da-fA-F]+|[tbrf'\"n])/},{token:\"invalid\",regex:/\\\\./}]},{token:\"constant.numeric\",// hex\nregex:\"0[xX][0-9a-fA-F]+\\\\b\"},{token:\"constant.numeric\",// float\nregex:\"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"},{token:\"constant.language.boolean\",regex:\"(?:true|false)\\\\b\"},{token:keywordMapper,regex:\"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"},{token:\"keyword.operator\",regex:\"!|\\\\$|%|&|\\\\*|\\\\-\\\\-|\\\\-|\\\\+\\\\+|\\\\+|~|===|==|=|!=|!==|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\\\|\\\\||\\\\?\\\\:|\\\\*=|%=|\\\\+=|\\\\-=|&=|\\\\^=|\\\\b(?:in|instanceof|new|delete|typeof|void)\"},{token:\"keyword\",regex:\"^\\\\s*#(if|else|elif|endif|define|undef|warning|error|line|region|endregion|pragma)\"},{token:\"punctuation.operator\",regex:\"\\\\?|\\\\:|\\\\,|\\\\;|\\\\.\"},{token:\"paren.lparen\",regex:\"[[({]\"},{token:\"paren.rparen\",regex:\"[\\\\])}]\"},{token:\"text\",regex:\"\\\\s+\"}],\"comment\":[{token:\"comment\",// closing comment\nregex:\".*?\\\\*\\\\/\",next:\"start\"},{token:\"comment\",// comment spanning whole line\nregex:\".+\"}]};this.embedRules(DocCommentHighlightRules,\"doc-\",[DocCommentHighlightRules.getEndRule(\"start\")]);this.normalizeRules();};oop.inherits(CSharpHighlightRules,TextHighlightRules);exports.CSharpHighlightRules=CSharpHighlightRules;});ace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"],function(acequire,exports,module){\"use strict\";var Range=acequire(\"../range\").Range;var MatchingBraceOutdent=function MatchingBraceOutdent(){};(function(){this.checkOutdent=function(line,input){if(!/^\\s+$/.test(line))return false;return /^\\s*\\}/.test(input);};this.autoOutdent=function(doc,row){var line=doc.getLine(row);var match=line.match(/^(\\s*\\})/);if(!match)return 0;var column=match[1].length;var openBracePos=doc.findMatchingBracket({row:row,column:column});if(!openBracePos||openBracePos.row==row)return 0;var indent=this.$getIndent(doc.getLine(openBracePos.row));doc.replace(new Range(row,0,row,column-1),indent);};this.$getIndent=function(line){return line.match(/^\\s*/)[0];};}).call(MatchingBraceOutdent.prototype);exports.MatchingBraceOutdent=MatchingBraceOutdent;});ace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../../lib/oop\");var Range=acequire(\"../../range\").Range;var BaseFoldMode=acequire(\"./fold_mode\").FoldMode;var FoldMode=exports.FoldMode=function(commentRegex){if(commentRegex){this.foldingStartMarker=new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/,\"|\"+commentRegex.start));this.foldingStopMarker=new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/,\"|\"+commentRegex.end));}};oop.inherits(FoldMode,BaseFoldMode);(function(){this.foldingStartMarker=/(\\{|\\[)[^\\}\\]]*$|^\\s*(\\/\\*)/;this.foldingStopMarker=/^[^\\[\\{]*(\\}|\\])|^[\\s\\*]*(\\*\\/)/;this.singleLineBlockCommentRe=/^\\s*(\\/\\*).*\\*\\/\\s*$/;this.tripleStarBlockCommentRe=/^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;this.startRegionRe=/^\\s*(\\/\\*|\\/\\/)#?region\\b/;this._getFoldWidgetBase=this.getFoldWidget;this.getFoldWidget=function(session,foldStyle,row){var line=session.getLine(row);if(this.singleLineBlockCommentRe.test(line)){if(!this.startRegionRe.test(line)&&!this.tripleStarBlockCommentRe.test(line))return\"\";}var fw=this._getFoldWidgetBase(session,foldStyle,row);if(!fw&&this.startRegionRe.test(line))return\"start\";// lineCommentRegionStart\nreturn fw;};this.getFoldWidgetRange=function(session,foldStyle,row,forceMultiline){var line=session.getLine(row);if(this.startRegionRe.test(line))return this.getCommentRegionBlock(session,line,row);var match=line.match(this.foldingStartMarker);if(match){var i=match.index;if(match[1])return this.openingBracketBlock(session,match[1],row,i);var range=session.getCommentFoldRange(row,i+match[0].length,1);if(range&&!range.isMultiLine()){if(forceMultiline){range=this.getSectionRange(session,row);}else if(foldStyle!=\"all\")range=null;}return range;}if(foldStyle===\"markbegin\")return;var match=line.match(this.foldingStopMarker);if(match){var i=match.index+match[0].length;if(match[1])return this.closingBracketBlock(session,match[1],row,i);return session.getCommentFoldRange(row,i,-1);}};this.getSectionRange=function(session,row){var line=session.getLine(row);var startIndent=line.search(/\\S/);var startRow=row;var startColumn=line.length;row=row+1;var endRow=row;var maxRow=session.getLength();while(++row<maxRow){line=session.getLine(row);var indent=line.search(/\\S/);if(indent===-1)continue;if(startIndent>indent)break;var subRange=this.getFoldWidgetRange(session,\"all\",row);if(subRange){if(subRange.start.row<=startRow){break;}else if(subRange.isMultiLine()){row=subRange.end.row;}else if(startIndent==indent){break;}}endRow=row;}return new Range(startRow,startColumn,endRow,session.getLine(endRow).length);};this.getCommentRegionBlock=function(session,line,row){var startColumn=line.search(/\\s*$/);var maxRow=session.getLength();var startRow=row;var re=/^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;var depth=1;while(++row<maxRow){line=session.getLine(row);var m=re.exec(line);if(!m)continue;if(m[1])depth--;else depth++;if(!depth)break;}var endRow=row;if(endRow>startRow){return new Range(startRow,startColumn,endRow,line.length);}};}).call(FoldMode.prototype);});ace.define(\"ace/mode/folding/csharp\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/cstyle\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../../lib/oop\");var Range=acequire(\"../../range\").Range;var CFoldMode=acequire(\"./cstyle\").FoldMode;var FoldMode=exports.FoldMode=function(commentRegex){if(commentRegex){this.foldingStartMarker=new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/,\"|\"+commentRegex.start));this.foldingStopMarker=new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/,\"|\"+commentRegex.end));}};oop.inherits(FoldMode,CFoldMode);(function(){this.usingRe=/^\\s*using \\S/;this.getFoldWidgetRangeBase=this.getFoldWidgetRange;this.getFoldWidgetBase=this.getFoldWidget;this.getFoldWidget=function(session,foldStyle,row){var fw=this.getFoldWidgetBase(session,foldStyle,row);if(!fw){var line=session.getLine(row);if(/^\\s*#region\\b/.test(line))return\"start\";var usingRe=this.usingRe;if(usingRe.test(line)){var prev=session.getLine(row-1);var next=session.getLine(row+1);if(!usingRe.test(prev)&&usingRe.test(next))return\"start\";}}return fw;};this.getFoldWidgetRange=function(session,foldStyle,row){var range=this.getFoldWidgetRangeBase(session,foldStyle,row);if(range)return range;var line=session.getLine(row);if(this.usingRe.test(line))return this.getUsingStatementBlock(session,line,row);if(/^\\s*#region\\b/.test(line))return this.getRegionBlock(session,line,row);};this.getUsingStatementBlock=function(session,line,row){var startColumn=line.match(this.usingRe)[0].length-1;var maxRow=session.getLength();var startRow=row;var endRow=row;while(++row<maxRow){line=session.getLine(row);if(/^\\s*$/.test(line))continue;if(!this.usingRe.test(line))break;endRow=row;}if(endRow>startRow){var endColumn=session.getLine(endRow).length;return new Range(startRow,startColumn,endRow,endColumn);}};this.getRegionBlock=function(session,line,row){var startColumn=line.search(/\\s*$/);var maxRow=session.getLength();var startRow=row;var re=/^\\s*#(end)?region\\b/;var depth=1;while(++row<maxRow){line=session.getLine(row);var m=re.exec(line);if(!m)continue;if(m[1])depth--;else depth++;if(!depth)break;}var endRow=row;if(endRow>startRow){return new Range(startRow,startColumn,endRow,line.length);}};}).call(FoldMode.prototype);});ace.define(\"ace/mode/csharp\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/csharp_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/mode/behaviour/cstyle\",\"ace/mode/folding/csharp\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextMode=acequire(\"./text\").Mode;var CSharpHighlightRules=acequire(\"./csharp_highlight_rules\").CSharpHighlightRules;var MatchingBraceOutdent=acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;var CstyleBehaviour=acequire(\"./behaviour/cstyle\").CstyleBehaviour;var CStyleFoldMode=acequire(\"./folding/csharp\").FoldMode;var Mode=function Mode(){this.HighlightRules=CSharpHighlightRules;this.$outdent=new MatchingBraceOutdent();this.$behaviour=new CstyleBehaviour();this.foldingRules=new CStyleFoldMode();};oop.inherits(Mode,TextMode);(function(){this.lineCommentStart=\"//\";this.blockComment={start:\"/*\",end:\"*/\"};this.getNextLineIndent=function(state,line,tab){var indent=this.$getIndent(line);var tokenizedLine=this.getTokenizer().getLineTokens(line,state);var tokens=tokenizedLine.tokens;if(tokens.length&&tokens[tokens.length-1].type==\"comment\"){return indent;}if(state==\"start\"){var match=line.match(/^.*[\\{\\(\\[]\\s*$/);if(match){indent+=tab;}}return indent;};this.checkOutdent=function(state,line,input){return this.$outdent.checkOutdent(line,input);};this.autoOutdent=function(state,doc,row){this.$outdent.autoOutdent(doc,row);};this.createWorker=function(session){return null;};this.$id=\"ace/mode/csharp\";}).call(Mode.prototype);exports.Mode=Mode;});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// vendor/brace/mode/csharp.chunk.js","ace.define(\"ace/mode/doc_comment_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar DocCommentHighlightRules = function() {\n    this.$rules = {\n        \"start\" : [ {\n            token : \"comment.doc.tag\",\n            regex : \"@[\\\\w\\\\d_]+\" // TODO: fix email addresses\n        }, \n        DocCommentHighlightRules.getTagRule(),\n        {\n            defaultToken : \"comment.doc\",\n            caseInsensitive: true\n        }]\n    };\n};\n\noop.inherits(DocCommentHighlightRules, TextHighlightRules);\n\nDocCommentHighlightRules.getTagRule = function(start) {\n    return {\n        token : \"comment.doc.tag.storage.type\",\n        regex : \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n}\n\nDocCommentHighlightRules.getStartRule = function(start) {\n    return {\n        token : \"comment.doc\", // doc comment\n        regex : \"\\\\/\\\\*(?=\\\\*)\",\n        next  : start\n    };\n};\n\nDocCommentHighlightRules.getEndRule = function (start) {\n    return {\n        token : \"comment.doc\", // closing comment\n        regex : \"\\\\*\\\\/\",\n        next  : start\n    };\n};\n\n\nexports.DocCommentHighlightRules = DocCommentHighlightRules;\n\n});\n\nace.define(\"ace/mode/csharp_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/doc_comment_highlight_rules\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar DocCommentHighlightRules = acequire(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar CSharpHighlightRules = function() {\n    var keywordMapper = this.createKeywordMapper({\n        \"variable.language\": \"this\",\n        \"keyword\": \"abstract|event|new|struct|as|explicit|null|switch|base|extern|object|this|bool|false|operator|throw|break|finally|out|true|byte|fixed|override|try|case|float|params|typeof|catch|for|private|uint|char|foreach|protected|ulong|checked|goto|public|unchecked|class|if|readonly|unsafe|const|implicit|ref|ushort|continue|in|return|using|decimal|int|sbyte|virtual|default|interface|sealed|volatile|delegate|internal|short|void|do|is|sizeof|while|double|lock|stackalloc|else|long|static|enum|namespace|string|var|dynamic\",\n        \"constant.language\": \"null|true|false\"\n    }, \"identifier\");\n\n    this.$rules = {\n        \"start\" : [\n            {\n                token : \"comment\",\n                regex : \"\\\\/\\\\/.*$\"\n            },\n            DocCommentHighlightRules.getStartRule(\"doc-start\"),\n            {\n                token : \"comment\", // multi line comment\n                regex : \"\\\\/\\\\*\",\n                next : \"comment\"\n            }, {\n                token : \"string\", // character\n                regex : /'(?:.|\\\\(:?u[\\da-fA-F]+|x[\\da-fA-F]+|[tbrf'\"n]))'/\n            }, {\n                token : \"string\", start : '\"', end : '\"|$', next: [\n                    {token: \"constant.language.escape\", regex: /\\\\(:?u[\\da-fA-F]+|x[\\da-fA-F]+|[tbrf'\"n])/},\n                    {token: \"invalid\", regex: /\\\\./}\n                ]\n            }, {\n                token : \"string\", start : '@\"', end : '\"', next:[\n                    {token: \"constant.language.escape\", regex: '\"\"'}\n                ]\n            }, {\n                token : \"string\", start : /\\$\"/, end : '\"|$', next: [\n                    {token: \"constant.language.escape\", regex: /\\\\(:?$)|{{/},\n                    {token: \"constant.language.escape\", regex: /\\\\(:?u[\\da-fA-F]+|x[\\da-fA-F]+|[tbrf'\"n])/},\n                    {token: \"invalid\", regex: /\\\\./}\n                ]\n            }, {\n                token : \"constant.numeric\", // hex\n                regex : \"0[xX][0-9a-fA-F]+\\\\b\"\n            }, {\n                token : \"constant.numeric\", // float\n                regex : \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n            }, {\n                token : \"constant.language.boolean\",\n                regex : \"(?:true|false)\\\\b\"\n            }, {\n                token : keywordMapper,\n                regex : \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n            }, {\n                token : \"keyword.operator\",\n                regex : \"!|\\\\$|%|&|\\\\*|\\\\-\\\\-|\\\\-|\\\\+\\\\+|\\\\+|~|===|==|=|!=|!==|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\\\|\\\\||\\\\?\\\\:|\\\\*=|%=|\\\\+=|\\\\-=|&=|\\\\^=|\\\\b(?:in|instanceof|new|delete|typeof|void)\"\n            }, {\n                token : \"keyword\",\n                regex : \"^\\\\s*#(if|else|elif|endif|define|undef|warning|error|line|region|endregion|pragma)\"\n            }, {\n                token : \"punctuation.operator\",\n                regex : \"\\\\?|\\\\:|\\\\,|\\\\;|\\\\.\"\n            }, {\n                token : \"paren.lparen\",\n                regex : \"[[({]\"\n            }, {\n                token : \"paren.rparen\",\n                regex : \"[\\\\])}]\"\n            }, {\n                token : \"text\",\n                regex : \"\\\\s+\"\n            }\n        ],\n        \"comment\" : [\n            {\n                token : \"comment\", // closing comment\n                regex : \".*?\\\\*\\\\/\",\n                next : \"start\"\n            }, {\n                token : \"comment\", // comment spanning whole line\n                regex : \".+\"\n            }\n        ]\n    };\n\n    this.embedRules(DocCommentHighlightRules, \"doc-\",\n        [ DocCommentHighlightRules.getEndRule(\"start\") ]);\n    this.normalizeRules();\n};\n\noop.inherits(CSharpHighlightRules, TextHighlightRules);\n\nexports.CSharpHighlightRules = CSharpHighlightRules;\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar Range = acequire(\"../range\").Range;\n\nvar MatchingBraceOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        return line.match(/^\\s*/)[0];\n    };\n\n}).call(MatchingBraceOutdent.prototype);\n\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar Range = acequire(\"../../range\").Range;\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    \n    this.foldingStartMarker = /(\\{|\\[)[^\\}\\]]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{]*(\\}|\\])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n    \n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n    \n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n    \n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n    \n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        \n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        \n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n                \n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            \n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n            \n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    \n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            \n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        \n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/folding/csharp\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/cstyle\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar Range = acequire(\"../../range\").Range;\nvar CFoldMode = acequire(\"./cstyle\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, CFoldMode);\n\n(function() {\n    this.usingRe = /^\\s*using \\S/;\n\n    this.getFoldWidgetRangeBase = this.getFoldWidgetRange;\n    this.getFoldWidgetBase = this.getFoldWidget;\n    \n    this.getFoldWidget = function(session, foldStyle, row) {\n        var fw = this.getFoldWidgetBase(session, foldStyle, row);\n        if (!fw) {\n            var line = session.getLine(row);\n            if (/^\\s*#region\\b/.test(line)) \n                return \"start\";\n            var usingRe = this.usingRe;\n            if (usingRe.test(line)) {\n                var prev = session.getLine(row - 1);\n                var next = session.getLine(row + 1);\n                if (!usingRe.test(prev) && usingRe.test(next))\n                    return \"start\"\n            }\n        }\n        return fw;\n    };\n    \n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var range = this.getFoldWidgetRangeBase(session, foldStyle, row);\n        if (range)\n            return range;\n\n        var line = session.getLine(row);\n        if (this.usingRe.test(line))\n            return this.getUsingStatementBlock(session, line, row);\n            \n        if (/^\\s*#region\\b/.test(line))\n            return this.getRegionBlock(session, line, row);\n    };\n    \n    this.getUsingStatementBlock = function(session, line, row) {\n        var startColumn = line.match(this.usingRe)[0].length - 1;\n        var maxRow = session.getLength();\n        var startRow = row;\n        var endRow = row;\n\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            if (/^\\s*$/.test(line))\n                continue;\n            if (!this.usingRe.test(line))\n                break;\n\n            endRow = row;\n        }\n\n        if (endRow > startRow) {\n            var endColumn = session.getLine(endRow).length;\n            return new Range(startRow, startColumn, endRow, endColumn);\n        }\n    };\n    \n    this.getRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*#(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m)\n                continue;\n            if (m[1])\n                depth--;\n            else\n                depth++;\n\n            if (!depth)\n                break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/csharp\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/csharp_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/mode/behaviour/cstyle\",\"ace/mode/folding/csharp\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar CSharpHighlightRules = acequire(\"./csharp_highlight_rules\").CSharpHighlightRules;\nvar MatchingBraceOutdent = acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar CstyleBehaviour = acequire(\"./behaviour/cstyle\").CstyleBehaviour;\nvar CStyleFoldMode = acequire(\"./folding/csharp\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = CSharpHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = new CstyleBehaviour();\n    this.foldingRules = new CStyleFoldMode();\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    \n    this.lineCommentStart = \"//\";\n    this.blockComment = {start: \"/*\", end: \"*/\"};\n    \n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n  \n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n  \n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\n            return indent;\n        }\n    \n        if (state == \"start\") {\n            var match = line.match(/^.*[\\{\\(\\[]\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        }\n  \n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n  \n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n\n\n    this.createWorker = function(session) {\n        return null;\n    };\n\n    this.$id = \"ace/mode/csharp\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n\n\n\n// WEBPACK FOOTER //\n// /Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/csharp.js"],"sourceRoot":""}