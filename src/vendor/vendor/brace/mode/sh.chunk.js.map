{"version":3,"sources":["webpack:///vendor/brace/mode/sh.chunk.js","webpack:////Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/sh.js"],"names":["webpackJsonppanneau","452","module","exports","ace","define","acequire","oop","TextHighlightRules","reservedKeywords","languageConstructs","ShHighlightRules","keywordMapper","this","createKeywordMapper","keyword","support.function.builtin","invalid.deprecated","$rules","start","token","regex","push","include","next","defaultToken","stateName","onMatch","value","currentState","stack","tokens","split","splitRegex","type","rules","heredoc","shift","indentedHeredoc","end","integer","variables","normalizeRules","inherits","Range","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","replace","foldingStopMarker","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","match","i","index","openingBracketBlock","range","getCommentFoldRange","length","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","TextMode","Mode","CStyleFoldMode","CstyleBehaviour","HighlightRules","foldingRules","$behaviour","lineCommentStart","getNextLineIndent","state","tab","$getIndent","tokenizedLine","getTokenizer","getLineTokens","outdents","pass","return","raise","break","continue","checkOutdent","input","trim","last","pop","autoOutdent","doc","getTabString","slice","remove","$id"],"mappings":"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","file":"vendor/brace/mode/sh.chunk.js","sourcesContent":["webpackJsonppanneau([130],{\n\n/***/ 452:\n/***/ (function(module, exports) {\n\nace.define(\"ace/mode/sh_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextHighlightRules=acequire(\"./text_highlight_rules\").TextHighlightRules;var reservedKeywords=exports.reservedKeywords='!|{|}|case|do|done|elif|else|'+'esac|fi|for|if|in|then|until|while|'+'&|;|export|local|read|typeset|unset|'+'elif|select|set|function|declare|readonly';var languageConstructs=exports.languageConstructs='[|]|alias|bg|bind|break|builtin|'+'cd|command|compgen|complete|continue|'+'dirs|disown|echo|enable|eval|exec|'+'exit|fc|fg|getopts|hash|help|history|'+'jobs|kill|let|logout|popd|printf|pushd|'+'pwd|return|set|shift|shopt|source|'+'suspend|test|times|trap|type|ulimit|'+'umask|unalias|wait';var ShHighlightRules=function ShHighlightRules(){var keywordMapper=this.createKeywordMapper({\"keyword\":reservedKeywords,\"support.function.builtin\":languageConstructs,\"invalid.deprecated\":\"debugger\"},\"identifier\");var integer=\"(?:(?:[1-9]\\\\d*)|(?:0))\";var fraction=\"(?:\\\\.\\\\d+)\";var intPart=\"(?:\\\\d+)\";var pointFloat=\"(?:(?:\"+intPart+\"?\"+fraction+\")|(?:\"+intPart+\"\\\\.))\";var exponentFloat=\"(?:(?:\"+pointFloat+\"|\"+intPart+\")\"+\")\";var floatNumber=\"(?:\"+exponentFloat+\"|\"+pointFloat+\")\";var fileDescriptor=\"(?:&\"+intPart+\")\";var variableName=\"[a-zA-Z_][a-zA-Z0-9_]*\";var variable=\"(?:\"+variableName+\"=)\";var builtinVariable=\"(?:\\\\$(?:SHLVL|\\\\$|\\\\!|\\\\?))\";var func=\"(?:\"+variableName+\"\\\\s*\\\\(\\\\))\";this.$rules={\"start\":[{token:\"constant\",regex:/\\\\./},{token:[\"text\",\"comment\"],regex:/(^|\\s)(#.*)$/},{token:\"string.start\",regex:'\"',push:[{token:\"constant.language.escape\",regex:/\\\\(?:[$`\"\\\\]|$)/},{include:\"variables\"},{token:\"keyword.operator\",regex:/`/// TODO highlight `\n},{token:\"string.end\",regex:'\"',next:\"pop\"},{defaultToken:\"string\"}]},{token:\"string\",regex:\"\\\\$'\",push:[{token:\"constant.language.escape\",regex:/\\\\(?:[abeEfnrtv\\\\'\"]|x[a-fA-F\\d]{1,2}|u[a-fA-F\\d]{4}([a-fA-F\\d]{4})?|c.|\\d{1,3})/},{token:\"string\",regex:\"'\",next:\"pop\"},{defaultToken:\"string\"}]},{regex:\"<<<\",token:\"keyword.operator\"},{stateName:\"heredoc\",regex:\"(<<-?)(\\\\s*)(['\\\"`]?)([\\\\w\\\\-]+)(['\\\"`]?)\",onMatch:function onMatch(value,currentState,stack){var next=value[2]=='-'?\"indentedHeredoc\":\"heredoc\";var tokens=value.split(this.splitRegex);stack.push(next,tokens[4]);return[{type:\"constant\",value:tokens[1]},{type:\"text\",value:tokens[2]},{type:\"string\",value:tokens[3]},{type:\"support.class\",value:tokens[4]},{type:\"string\",value:tokens[5]}];},rules:{heredoc:[{onMatch:function onMatch(value,currentState,stack){if(value===stack[1]){stack.shift();stack.shift();this.next=stack[0]||\"start\";return\"support.class\";}this.next=\"\";return\"string\";},regex:\".*$\",next:\"start\"}],indentedHeredoc:[{token:\"string\",regex:\"^\\t+\"},{onMatch:function onMatch(value,currentState,stack){if(value===stack[1]){stack.shift();stack.shift();this.next=stack[0]||\"start\";return\"support.class\";}this.next=\"\";return\"string\";},regex:\".*$\",next:\"start\"}]}},{regex:\"$\",token:\"empty\",next:function next(currentState,stack){if(stack[0]===\"heredoc\"||stack[0]===\"indentedHeredoc\")return stack[0];return currentState;}},{token:[\"keyword\",\"text\",\"text\",\"text\",\"variable\"],regex:/(declare|local|readonly)(\\s+)(?:(-[fixar]+)(\\s+))?([a-zA-Z_][a-zA-Z0-9_]*\\b)/},{token:\"variable.language\",regex:builtinVariable},{token:\"variable\",regex:variable},{include:\"variables\"},{token:\"support.function\",regex:func},{token:\"support.function\",regex:fileDescriptor},{token:\"string\",// ' string\nstart:\"'\",end:\"'\"},{token:\"constant.numeric\",// float\nregex:floatNumber},{token:\"constant.numeric\",// integer\nregex:integer+\"\\\\b\"},{token:keywordMapper,regex:\"[a-zA-Z_][a-zA-Z0-9_]*\\\\b\"},{token:\"keyword.operator\",regex:\"\\\\+|\\\\-|\\\\*|\\\\*\\\\*|\\\\/|\\\\/\\\\/|~|<|>|<=|=>|=|!=|[%&|`]\"},{token:\"punctuation.operator\",regex:\";\"},{token:\"paren.lparen\",regex:\"[\\\\[\\\\(\\\\{]\"},{token:\"paren.rparen\",regex:\"[\\\\]]\"},{token:\"paren.rparen\",regex:\"[\\\\)\\\\}]\",next:\"pop\"}],variables:[{token:\"variable\",regex:/(\\$)(\\w+)/},{token:[\"variable\",\"paren.lparen\"],regex:/(\\$)(\\()/,push:\"start\"},{token:[\"variable\",\"paren.lparen\",\"keyword.operator\",\"variable\",\"keyword.operator\"],regex:/(\\$)(\\{)([#!]?)(\\w+|[*@#?\\-$!0_])(:[?+\\-=]?|##?|%%?|,,?\\/|\\^\\^?)?/,push:\"start\"},{token:\"variable\",regex:/\\$[*@#?\\-$!0_]/},{token:[\"variable\",\"paren.lparen\"],regex:/(\\$)(\\{)/,push:\"start\"}]};this.normalizeRules();};oop.inherits(ShHighlightRules,TextHighlightRules);exports.ShHighlightRules=ShHighlightRules;});ace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../../lib/oop\");var Range=acequire(\"../../range\").Range;var BaseFoldMode=acequire(\"./fold_mode\").FoldMode;var FoldMode=exports.FoldMode=function(commentRegex){if(commentRegex){this.foldingStartMarker=new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/,\"|\"+commentRegex.start));this.foldingStopMarker=new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/,\"|\"+commentRegex.end));}};oop.inherits(FoldMode,BaseFoldMode);(function(){this.foldingStartMarker=/(\\{|\\[)[^\\}\\]]*$|^\\s*(\\/\\*)/;this.foldingStopMarker=/^[^\\[\\{]*(\\}|\\])|^[\\s\\*]*(\\*\\/)/;this.singleLineBlockCommentRe=/^\\s*(\\/\\*).*\\*\\/\\s*$/;this.tripleStarBlockCommentRe=/^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;this.startRegionRe=/^\\s*(\\/\\*|\\/\\/)#?region\\b/;this._getFoldWidgetBase=this.getFoldWidget;this.getFoldWidget=function(session,foldStyle,row){var line=session.getLine(row);if(this.singleLineBlockCommentRe.test(line)){if(!this.startRegionRe.test(line)&&!this.tripleStarBlockCommentRe.test(line))return\"\";}var fw=this._getFoldWidgetBase(session,foldStyle,row);if(!fw&&this.startRegionRe.test(line))return\"start\";// lineCommentRegionStart\nreturn fw;};this.getFoldWidgetRange=function(session,foldStyle,row,forceMultiline){var line=session.getLine(row);if(this.startRegionRe.test(line))return this.getCommentRegionBlock(session,line,row);var match=line.match(this.foldingStartMarker);if(match){var i=match.index;if(match[1])return this.openingBracketBlock(session,match[1],row,i);var range=session.getCommentFoldRange(row,i+match[0].length,1);if(range&&!range.isMultiLine()){if(forceMultiline){range=this.getSectionRange(session,row);}else if(foldStyle!=\"all\")range=null;}return range;}if(foldStyle===\"markbegin\")return;var match=line.match(this.foldingStopMarker);if(match){var i=match.index+match[0].length;if(match[1])return this.closingBracketBlock(session,match[1],row,i);return session.getCommentFoldRange(row,i,-1);}};this.getSectionRange=function(session,row){var line=session.getLine(row);var startIndent=line.search(/\\S/);var startRow=row;var startColumn=line.length;row=row+1;var endRow=row;var maxRow=session.getLength();while(++row<maxRow){line=session.getLine(row);var indent=line.search(/\\S/);if(indent===-1)continue;if(startIndent>indent)break;var subRange=this.getFoldWidgetRange(session,\"all\",row);if(subRange){if(subRange.start.row<=startRow){break;}else if(subRange.isMultiLine()){row=subRange.end.row;}else if(startIndent==indent){break;}}endRow=row;}return new Range(startRow,startColumn,endRow,session.getLine(endRow).length);};this.getCommentRegionBlock=function(session,line,row){var startColumn=line.search(/\\s*$/);var maxRow=session.getLength();var startRow=row;var re=/^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;var depth=1;while(++row<maxRow){line=session.getLine(row);var m=re.exec(line);if(!m)continue;if(m[1])depth--;else depth++;if(!depth)break;}var endRow=row;if(endRow>startRow){return new Range(startRow,startColumn,endRow,line.length);}};}).call(FoldMode.prototype);});ace.define(\"ace/mode/sh\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/sh_highlight_rules\",\"ace/range\",\"ace/mode/folding/cstyle\",\"ace/mode/behaviour/cstyle\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextMode=acequire(\"./text\").Mode;var ShHighlightRules=acequire(\"./sh_highlight_rules\").ShHighlightRules;var Range=acequire(\"../range\").Range;var CStyleFoldMode=acequire(\"./folding/cstyle\").FoldMode;var CstyleBehaviour=acequire(\"./behaviour/cstyle\").CstyleBehaviour;var Mode=function Mode(){this.HighlightRules=ShHighlightRules;this.foldingRules=new CStyleFoldMode();this.$behaviour=new CstyleBehaviour();};oop.inherits(Mode,TextMode);(function(){this.lineCommentStart=\"#\";this.getNextLineIndent=function(state,line,tab){var indent=this.$getIndent(line);var tokenizedLine=this.getTokenizer().getLineTokens(line,state);var tokens=tokenizedLine.tokens;if(tokens.length&&tokens[tokens.length-1].type==\"comment\"){return indent;}if(state==\"start\"){var match=line.match(/^.*[\\{\\(\\[:]\\s*$/);if(match){indent+=tab;}}return indent;};var outdents={\"pass\":1,\"return\":1,\"raise\":1,\"break\":1,\"continue\":1};this.checkOutdent=function(state,line,input){if(input!==\"\\r\\n\"&&input!==\"\\r\"&&input!==\"\\n\")return false;var tokens=this.getTokenizer().getLineTokens(line.trim(),state).tokens;if(!tokens)return false;do{var last=tokens.pop();}while(last&&(last.type==\"comment\"||last.type==\"text\"&&last.value.match(/^\\s+$/)));if(!last)return false;return last.type==\"keyword\"&&outdents[last.value];};this.autoOutdent=function(state,doc,row){row+=1;var indent=this.$getIndent(doc.getLine(row));var tab=doc.getTabString();if(indent.slice(-tab.length)==tab)doc.remove(new Range(row,indent.length-tab.length,row,indent.length));};this.$id=\"ace/mode/sh\";}).call(Mode.prototype);exports.Mode=Mode;});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// vendor/brace/mode/sh.chunk.js","ace.define(\"ace/mode/sh_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar reservedKeywords = exports.reservedKeywords = (\n        '!|{|}|case|do|done|elif|else|'+\n        'esac|fi|for|if|in|then|until|while|'+\n        '&|;|export|local|read|typeset|unset|'+\n        'elif|select|set|function|declare|readonly'\n    );\n\nvar languageConstructs = exports.languageConstructs = (\n    '[|]|alias|bg|bind|break|builtin|'+\n     'cd|command|compgen|complete|continue|'+\n     'dirs|disown|echo|enable|eval|exec|'+\n     'exit|fc|fg|getopts|hash|help|history|'+\n     'jobs|kill|let|logout|popd|printf|pushd|'+\n     'pwd|return|set|shift|shopt|source|'+\n     'suspend|test|times|trap|type|ulimit|'+\n     'umask|unalias|wait'\n);\n\nvar ShHighlightRules = function() {\n    var keywordMapper = this.createKeywordMapper({\n        \"keyword\": reservedKeywords,\n        \"support.function.builtin\": languageConstructs,\n        \"invalid.deprecated\": \"debugger\"\n    }, \"identifier\");\n\n    var integer = \"(?:(?:[1-9]\\\\d*)|(?:0))\";\n\n    var fraction = \"(?:\\\\.\\\\d+)\";\n    var intPart = \"(?:\\\\d+)\";\n    var pointFloat = \"(?:(?:\" + intPart + \"?\" + fraction + \")|(?:\" + intPart + \"\\\\.))\";\n    var exponentFloat = \"(?:(?:\" + pointFloat + \"|\" +  intPart + \")\" + \")\";\n    var floatNumber = \"(?:\" + exponentFloat + \"|\" + pointFloat + \")\";\n    var fileDescriptor = \"(?:&\" + intPart + \")\";\n\n    var variableName = \"[a-zA-Z_][a-zA-Z0-9_]*\";\n    var variable = \"(?:\" + variableName + \"=)\";\n\n    var builtinVariable = \"(?:\\\\$(?:SHLVL|\\\\$|\\\\!|\\\\?))\";\n\n    var func = \"(?:\" + variableName + \"\\\\s*\\\\(\\\\))\";\n\n    this.$rules = {\n        \"start\" : [{\n            token : \"constant\",\n            regex : /\\\\./\n        }, {\n            token : [\"text\", \"comment\"],\n            regex : /(^|\\s)(#.*)$/\n        }, {\n            token : \"string.start\",\n            regex : '\"',\n            push : [{\n                token : \"constant.language.escape\",\n                regex : /\\\\(?:[$`\"\\\\]|$)/\n            }, {\n                include : \"variables\"\n            }, {\n                token : \"keyword.operator\",\n                regex : /`/ // TODO highlight `\n            }, {\n                token : \"string.end\",\n                regex : '\"',\n                next: \"pop\"\n            }, {\n                defaultToken: \"string\"\n            }]\n        }, {\n            token : \"string\",\n            regex : \"\\\\$'\",\n            push : [{\n                token : \"constant.language.escape\",\n                regex : /\\\\(?:[abeEfnrtv\\\\'\"]|x[a-fA-F\\d]{1,2}|u[a-fA-F\\d]{4}([a-fA-F\\d]{4})?|c.|\\d{1,3})/\n            }, {\n                token : \"string\",\n                regex : \"'\",\n                next: \"pop\"\n            }, {\n                defaultToken: \"string\"\n            }]\n        }, {\n            regex : \"<<<\",\n            token : \"keyword.operator\"\n        }, {\n            stateName: \"heredoc\",\n            regex : \"(<<-?)(\\\\s*)(['\\\"`]?)([\\\\w\\\\-]+)(['\\\"`]?)\",\n            onMatch : function(value, currentState, stack) {\n                var next = value[2] == '-' ? \"indentedHeredoc\" : \"heredoc\";\n                var tokens = value.split(this.splitRegex);\n                stack.push(next, tokens[4]);\n                return [\n                    {type:\"constant\", value: tokens[1]},\n                    {type:\"text\", value: tokens[2]},\n                    {type:\"string\", value: tokens[3]},\n                    {type:\"support.class\", value: tokens[4]},\n                    {type:\"string\", value: tokens[5]}\n                ];\n            },\n            rules: {\n                heredoc: [{\n                    onMatch:  function(value, currentState, stack) {\n                        if (value === stack[1]) {\n                            stack.shift();\n                            stack.shift();\n                            this.next = stack[0] || \"start\";\n                            return \"support.class\";\n                        }\n                        this.next = \"\";\n                        return \"string\";\n                    },\n                    regex: \".*$\",\n                    next: \"start\"\n                }],\n                indentedHeredoc: [{\n                    token: \"string\",\n                    regex: \"^\\t+\"\n                }, {\n                    onMatch:  function(value, currentState, stack) {\n                        if (value === stack[1]) {\n                            stack.shift();\n                            stack.shift();\n                            this.next = stack[0] || \"start\";\n                            return \"support.class\";\n                        }\n                        this.next = \"\";\n                        return \"string\";\n                    },\n                    regex: \".*$\",\n                    next: \"start\"\n                }]\n            }\n        }, {\n            regex : \"$\",\n            token : \"empty\",\n            next : function(currentState, stack) {\n                if (stack[0] === \"heredoc\" || stack[0] === \"indentedHeredoc\")\n                    return stack[0];\n                return currentState;\n            }\n        }, {\n            token : [\"keyword\", \"text\", \"text\", \"text\", \"variable\"],\n            regex : /(declare|local|readonly)(\\s+)(?:(-[fixar]+)(\\s+))?([a-zA-Z_][a-zA-Z0-9_]*\\b)/\n        }, {\n            token : \"variable.language\",\n            regex : builtinVariable\n        }, {\n            token : \"variable\",\n            regex : variable\n        }, {\n            include : \"variables\"\n        }, {\n            token : \"support.function\",\n            regex : func\n        }, {\n            token : \"support.function\",\n            regex : fileDescriptor\n        }, {\n            token : \"string\",           // ' string\n            start : \"'\", end : \"'\"\n        }, {\n            token : \"constant.numeric\", // float\n            regex : floatNumber\n        }, {\n            token : \"constant.numeric\", // integer\n            regex : integer + \"\\\\b\"\n        }, {\n            token : keywordMapper,\n            regex : \"[a-zA-Z_][a-zA-Z0-9_]*\\\\b\"\n        }, {\n            token : \"keyword.operator\",\n            regex : \"\\\\+|\\\\-|\\\\*|\\\\*\\\\*|\\\\/|\\\\/\\\\/|~|<|>|<=|=>|=|!=|[%&|`]\"\n        }, {\n            token : \"punctuation.operator\",\n            regex : \";\"\n        }, {\n            token : \"paren.lparen\",\n            regex : \"[\\\\[\\\\(\\\\{]\"\n        }, {\n            token : \"paren.rparen\",\n            regex : \"[\\\\]]\"\n        }, {\n            token : \"paren.rparen\",\n            regex : \"[\\\\)\\\\}]\",\n            next : \"pop\"\n        }],\n        variables: [{\n            token : \"variable\",\n            regex : /(\\$)(\\w+)/\n        }, {\n            token : [\"variable\", \"paren.lparen\"],\n            regex : /(\\$)(\\()/,\n            push : \"start\"\n        }, {\n            token : [\"variable\", \"paren.lparen\", \"keyword.operator\", \"variable\", \"keyword.operator\"],\n            regex : /(\\$)(\\{)([#!]?)(\\w+|[*@#?\\-$!0_])(:[?+\\-=]?|##?|%%?|,,?\\/|\\^\\^?)?/,\n            push : \"start\"\n        }, {\n            token : \"variable\",\n            regex : /\\$[*@#?\\-$!0_]/\n        }, {\n            token : [\"variable\", \"paren.lparen\"],\n            regex : /(\\$)(\\{)/,\n            push : \"start\"\n        }]\n    };\n    \n    this.normalizeRules();\n};\n\noop.inherits(ShHighlightRules, TextHighlightRules);\n\nexports.ShHighlightRules = ShHighlightRules;\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar Range = acequire(\"../../range\").Range;\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    \n    this.foldingStartMarker = /(\\{|\\[)[^\\}\\]]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{]*(\\}|\\])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n    \n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n    \n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n    \n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n    \n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        \n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        \n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n                \n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            \n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n            \n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    \n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            \n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        \n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/sh\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/sh_highlight_rules\",\"ace/range\",\"ace/mode/folding/cstyle\",\"ace/mode/behaviour/cstyle\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar ShHighlightRules = acequire(\"./sh_highlight_rules\").ShHighlightRules;\nvar Range = acequire(\"../range\").Range;\nvar CStyleFoldMode = acequire(\"./folding/cstyle\").FoldMode;\nvar CstyleBehaviour = acequire(\"./behaviour/cstyle\").CstyleBehaviour;\n\nvar Mode = function() {\n    this.HighlightRules = ShHighlightRules;\n    this.foldingRules = new CStyleFoldMode();\n    this.$behaviour = new CstyleBehaviour();\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n\n   \n    this.lineCommentStart = \"#\";\n\n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n\n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\n            return indent;\n        }\n\n        if (state == \"start\") {\n            var match = line.match(/^.*[\\{\\(\\[:]\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        }\n\n        return indent;\n    };\n\n    var outdents = {\n        \"pass\": 1,\n        \"return\": 1,\n        \"raise\": 1,\n        \"break\": 1,\n        \"continue\": 1\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        if (input !== \"\\r\\n\" && input !== \"\\r\" && input !== \"\\n\")\n            return false;\n\n        var tokens = this.getTokenizer().getLineTokens(line.trim(), state).tokens;\n\n        if (!tokens)\n            return false;\n        do {\n            var last = tokens.pop();\n        } while (last && (last.type == \"comment\" || (last.type == \"text\" && last.value.match(/^\\s+$/))));\n\n        if (!last)\n            return false;\n\n        return (last.type == \"keyword\" && outdents[last.value]);\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n\n        row += 1;\n        var indent = this.$getIndent(doc.getLine(row));\n        var tab = doc.getTabString();\n        if (indent.slice(-tab.length) == tab)\n            doc.remove(new Range(row, indent.length-tab.length, row, indent.length));\n    };\n\n    this.$id = \"ace/mode/sh\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n\n\n\n// WEBPACK FOOTER //\n// /Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/sh.js"],"sourceRoot":""}