{"version":3,"sources":["webpack:///vendor/brace/mode/d.chunk.js","webpack:////Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/d.js"],"names":["webpackJsonppanneau","235","module","exports","ace","define","acequire","oop","TextHighlightRules","DocCommentHighlightRules","this","$rules","start","token","regex","getTagRule","defaultToken","caseInsensitive","inherits","getStartRule","next","getEndRule","DHighlightRules","storages","stringEscapesSeq","operators","keywordMapper","$keywords","createKeywordMapper","keyword.modifier","keyword.control","keyword.type","keyword","keyword.storage","punctation","keyword.operator","constant.language","identifierRe","onMatch","value","currentState","state","unshift","substr","star-comment","plus-comment","quote-string","backtick-string","operator-heredoc-string","substring","length","map",">","]",")","}","Object","keys","indexOf","shift","identifier-heredoc-string","d-asm","d-asm-instruction","embedRules","metaData","comment","fileTypes","firstLineMatch","foldingStartMarker","foldingStopMarker","keyEquivalent","name","scopeName","Range","BaseFoldMode","FoldMode","commentRegex","RegExp","source","replace","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","match","i","index","openingBracketBlock","range","getCommentFoldRange","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","TextMode","Mode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","blockComment","$id"],"mappings":"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","file":"vendor/brace/mode/d.chunk.js","sourcesContent":["webpackJsonppanneau([205],{\n\n/***/ 235:\n/***/ (function(module, exports) {\n\nace.define(\"ace/mode/doc_comment_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextHighlightRules=acequire(\"./text_highlight_rules\").TextHighlightRules;var DocCommentHighlightRules=function DocCommentHighlightRules(){this.$rules={\"start\":[{token:\"comment.doc.tag\",regex:\"@[\\\\w\\\\d_]+\"// TODO: fix email addresses\n},DocCommentHighlightRules.getTagRule(),{defaultToken:\"comment.doc\",caseInsensitive:true}]};};oop.inherits(DocCommentHighlightRules,TextHighlightRules);DocCommentHighlightRules.getTagRule=function(start){return{token:\"comment.doc.tag.storage.type\",regex:\"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"};};DocCommentHighlightRules.getStartRule=function(start){return{token:\"comment.doc\",// doc comment\nregex:\"\\\\/\\\\*(?=\\\\*)\",next:start};};DocCommentHighlightRules.getEndRule=function(start){return{token:\"comment.doc\",// closing comment\nregex:\"\\\\*\\\\/\",next:start};};exports.DocCommentHighlightRules=DocCommentHighlightRules;});ace.define(\"ace/mode/d_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/doc_comment_highlight_rules\",\"ace/mode/text_highlight_rules\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var DocCommentHighlightRules=acequire(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;var TextHighlightRules=acequire(\"./text_highlight_rules\").TextHighlightRules;var DHighlightRules=function DHighlightRules(){var keywords=\"this|super|import|module|body|mixin|__traits|invariant|alias|asm|delete|\"+\"typeof|typeid|sizeof|cast|new|in|is|typedef|__vector|__parameters\";var keywordControls=\"break|case|continue|default|do|else|for|foreach|foreach_reverse|goto|if|\"+\"return|switch|while|catch|try|throw|finally|version|assert|unittest|with\";var types=\"auto|bool|char|dchar|wchar|byte|ubyte|float|double|real|\"+\"cfloat|creal|cdouble|cent|ifloat|ireal|idouble|\"+\"int|long|short|void|uint|ulong|ushort|ucent|\"+\"function|delegate|string|wstring|dstring|size_t|ptrdiff_t|hash_t|Object\";var modifiers=\"abstract|align|debug|deprecated|export|extern|const|final|in|inout|out|\"+\"ref|immutable|lazy|nothrow|override|package|pragma|private|protected|\"+\"public|pure|scope|shared|__gshared|synchronized|static|volatile\";var storages=\"class|struct|union|template|interface|enum|macro\";var stringEscapesSeq={token:\"constant.language.escape\",regex:\"\\\\\\\\(?:(?:x[0-9A-F]{2})|(?:[0-7]{1,3})|(?:['\\\"\\\\?0abfnrtv\\\\\\\\])|\"+\"(?:u[0-9a-fA-F]{4})|(?:U[0-9a-fA-F]{8}))\"};var builtinConstants=\"null|true|false|\"+\"__DATE__|__EOF__|__TIME__|__TIMESTAMP__|__VENDOR__|__VERSION__|\"+\"__FILE__|__MODULE__|__LINE__|__FUNCTION__|__PRETTY_FUNCTION__\";var operators=\"/|/\\\\=|&|&\\\\=|&&|\\\\|\\\\|\\\\=|\\\\|\\\\||\\\\-|\\\\-\\\\=|\\\\-\\\\-|\\\\+|\"+\"\\\\+\\\\=|\\\\+\\\\+|\\\\<|\\\\<\\\\=|\\\\<\\\\<|\\\\<\\\\<\\\\=|\\\\<\\\\>|\\\\<\\\\>\\\\=|\\\\>|\\\\>\\\\=|\\\\>\\\\>\\\\=|\"+\"\\\\>\\\\>\\\\>\\\\=|\\\\>\\\\>|\\\\>\\\\>\\\\>|\\\\!|\\\\!\\\\=|\\\\!\\\\<\\\\>|\\\\!\\\\<\\\\>\\\\=|\\\\!\\\\<|\\\\!\\\\<\\\\=|\"+\"\\\\!\\\\>|\\\\!\\\\>\\\\=|\\\\?|\\\\$|\\\\=|\\\\=\\\\=|\\\\*|\\\\*\\\\=|%|%\\\\=|\"+\"\\\\^|\\\\^\\\\=|\\\\^\\\\^|\\\\^\\\\^\\\\=|~|~\\\\=|\\\\=\\\\>|#\";var keywordMapper=this.$keywords=this.createKeywordMapper({\"keyword.modifier\":modifiers,\"keyword.control\":keywordControls,\"keyword.type\":types,\"keyword\":keywords,\"keyword.storage\":storages,\"punctation\":\"\\\\.|\\\\,|;|\\\\.\\\\.|\\\\.\\\\.\\\\.\",\"keyword.operator\":operators,\"constant.language\":builtinConstants},\"identifier\");var identifierRe=\"[a-zA-Z_\\xA1-\\uFFFF][a-zA-Z\\\\d_\\xA1-\\uFFFF]*\\\\b\";this.$rules={\"start\":[{//-------------------------------------------------------- COMMENTS\ntoken:\"comment\",regex:\"\\\\/\\\\/.*$\"},DocCommentHighlightRules.getStartRule(\"doc-start\"),{token:\"comment\",// multi line comment\nregex:\"\\\\/\\\\*\",next:\"star-comment\"},{token:\"comment.shebang\",regex:\"^\\\\s*#!.*\"},{token:\"comment\",regex:\"\\\\/\\\\+\",next:\"plus-comment\"},{//-------------------------------------------------------- STRINGS\nonMatch:function onMatch(value,currentState,state){state.unshift(this.next,value.substr(2));return\"string\";},regex:'q\"(?:[\\\\[\\\\(\\\\{\\\\<]+)',next:'operator-heredoc-string'},{onMatch:function onMatch(value,currentState,state){state.unshift(this.next,value.substr(2));return\"string\";},regex:'q\"(?:[a-zA-Z_]+)$',next:'identifier-heredoc-string'},{token:\"string\",// multi line string start\nregex:'[xr]?\"',next:\"quote-string\"},{token:\"string\",// multi line string start\nregex:'[xr]?`',next:\"backtick-string\"},{token:\"string\",// single line\nregex:\"[xr]?['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?['][cdw]?\"},{//-------------------------------------------------------- RULES\ntoken:[\"keyword\",\"text\",\"paren.lparen\"],regex:/(asm)(\\s*)({)/,next:\"d-asm\"},{token:[\"keyword\",\"text\",\"paren.lparen\",\"constant.language\"],regex:\"(__traits)(\\\\s*)(\\\\()(\"+identifierRe+\")\"},{// import|module abc\ntoken:[\"keyword\",\"text\",\"variable.module\"],regex:\"(import|module)(\\\\s+)((?:\"+identifierRe+\"\\\\.?)*)\"},{// storage Name\ntoken:[\"keyword.storage\",\"text\",\"entity.name.type\"],regex:\"(\"+storages+\")(\\\\s*)(\"+identifierRe+\")\"},{// alias|typedef foo bar;\ntoken:[\"keyword\",\"text\",\"variable.storage\",\"text\"],regex:\"(alias|typedef)(\\\\s*)(\"+identifierRe+\")(\\\\s*)\"},{//-------------------------------------------------------- OTHERS\ntoken:\"constant.numeric\",// hex\nregex:\"0[xX][0-9a-fA-F_]+(l|ul|u|f|F|L|U|UL)?\\\\b\"},{token:\"constant.numeric\",// float\nregex:\"[+-]?\\\\d[\\\\d_]*(?:(?:\\\\.[\\\\d_]*)?(?:[eE][+-]?[\\\\d_]+)?)?(l|ul|u|f|F|L|U|UL)?\\\\b\"},{token:\"entity.other.attribute-name\",regex:\"@\"+identifierRe},{token:keywordMapper,regex:\"[a-zA-Z_][a-zA-Z0-9_]*\\\\b\"},{token:\"keyword.operator\",regex:operators},{token:\"punctuation.operator\",regex:\"\\\\?|\\\\:|\\\\,|\\\\;|\\\\.|\\\\:\"},{token:\"paren.lparen\",regex:\"[[({]\"},{token:\"paren.rparen\",regex:\"[\\\\])}]\"},{token:\"text\",regex:\"\\\\s+\"}],\"star-comment\":[{token:\"comment\",// closing comment\nregex:\"\\\\*\\\\/\",next:\"start\"},{defaultToken:'comment'}],\"plus-comment\":[{token:\"comment\",// closing comment\nregex:\"\\\\+\\\\/\",next:\"start\"},{defaultToken:'comment'}],\"quote-string\":[stringEscapesSeq,{token:\"string\",regex:'\"[cdw]?',next:\"start\"},{defaultToken:'string'}],\"backtick-string\":[stringEscapesSeq,{token:\"string\",regex:'`[cdw]?',next:\"start\"},{defaultToken:'string'}],\"operator-heredoc-string\":[{onMatch:function onMatch(value,currentState,state){value=value.substring(value.length-2,value.length-1);var map={'>':'<',']':'[',')':'(','}':'{'};if(Object.keys(map).indexOf(value)!=-1)value=map[value];if(value!=state[1])return\"string\";state.shift();state.shift();return\"string\";},regex:'(?:[\\\\]\\\\)}>]+)\"',next:'start'},{token:'string',regex:'[^\\\\]\\\\)}>]+'}],\"identifier-heredoc-string\":[{onMatch:function onMatch(value,currentState,state){value=value.substring(0,value.length-1);if(value!=state[1])return\"string\";state.shift();state.shift();return\"string\";},regex:'^(?:[A-Za-z_][a-zA-Z0-9]+)\"',next:'start'},{token:'string',regex:'[^\\\\]\\\\)}>]+'}],\"d-asm\":[{token:\"paren.rparen\",regex:\"\\\\}\",next:\"start\"},{token:'keyword.instruction',regex:'[a-zA-Z]+',next:'d-asm-instruction'},{token:\"text\",regex:\"\\\\s+\"}],'d-asm-instruction':[{token:'constant.language',regex:/AL|AH|AX|EAX|BL|BH|BX|EBX|CL|CH|CX|ECX|DL|DH|DX|EDX|BP|EBP|SP|ESP|DI|EDI|SI|ESI/i},{token:'identifier',regex:'[a-zA-Z]+'},{token:'string',regex:'\".*\"'},{token:'comment',regex:'//.*$'},{token:'constant.numeric',regex:'[0-9.xA-F]+'},{token:'punctuation.operator',regex:'\\\\,'},{token:'punctuation.operator',regex:';',next:'d-asm'},{token:'text',regex:'\\\\s+'}]};this.embedRules(DocCommentHighlightRules,\"doc-\",[DocCommentHighlightRules.getEndRule(\"start\")]);};DHighlightRules.metaData={comment:'D language',fileTypes:['d','di'],firstLineMatch:'^#!.*\\\\b[glr]?dmd\\\\b.',foldingStartMarker:'(?x)/\\\\*\\\\*(?!\\\\*)|^(?![^{]*?//|[^{]*?/\\\\*(?!.*?\\\\*/.*?\\\\{)).*?\\\\{\\\\s*($|//|/\\\\*(?!.*?\\\\*/.*\\\\S))',foldingStopMarker:'(?<!\\\\*)\\\\*\\\\*/|^\\\\s*\\\\}',keyEquivalent:'^~D',name:'D',scopeName:'source.d'};oop.inherits(DHighlightRules,TextHighlightRules);exports.DHighlightRules=DHighlightRules;});ace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../../lib/oop\");var Range=acequire(\"../../range\").Range;var BaseFoldMode=acequire(\"./fold_mode\").FoldMode;var FoldMode=exports.FoldMode=function(commentRegex){if(commentRegex){this.foldingStartMarker=new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/,\"|\"+commentRegex.start));this.foldingStopMarker=new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/,\"|\"+commentRegex.end));}};oop.inherits(FoldMode,BaseFoldMode);(function(){this.foldingStartMarker=/(\\{|\\[)[^\\}\\]]*$|^\\s*(\\/\\*)/;this.foldingStopMarker=/^[^\\[\\{]*(\\}|\\])|^[\\s\\*]*(\\*\\/)/;this.singleLineBlockCommentRe=/^\\s*(\\/\\*).*\\*\\/\\s*$/;this.tripleStarBlockCommentRe=/^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;this.startRegionRe=/^\\s*(\\/\\*|\\/\\/)#?region\\b/;this._getFoldWidgetBase=this.getFoldWidget;this.getFoldWidget=function(session,foldStyle,row){var line=session.getLine(row);if(this.singleLineBlockCommentRe.test(line)){if(!this.startRegionRe.test(line)&&!this.tripleStarBlockCommentRe.test(line))return\"\";}var fw=this._getFoldWidgetBase(session,foldStyle,row);if(!fw&&this.startRegionRe.test(line))return\"start\";// lineCommentRegionStart\nreturn fw;};this.getFoldWidgetRange=function(session,foldStyle,row,forceMultiline){var line=session.getLine(row);if(this.startRegionRe.test(line))return this.getCommentRegionBlock(session,line,row);var match=line.match(this.foldingStartMarker);if(match){var i=match.index;if(match[1])return this.openingBracketBlock(session,match[1],row,i);var range=session.getCommentFoldRange(row,i+match[0].length,1);if(range&&!range.isMultiLine()){if(forceMultiline){range=this.getSectionRange(session,row);}else if(foldStyle!=\"all\")range=null;}return range;}if(foldStyle===\"markbegin\")return;var match=line.match(this.foldingStopMarker);if(match){var i=match.index+match[0].length;if(match[1])return this.closingBracketBlock(session,match[1],row,i);return session.getCommentFoldRange(row,i,-1);}};this.getSectionRange=function(session,row){var line=session.getLine(row);var startIndent=line.search(/\\S/);var startRow=row;var startColumn=line.length;row=row+1;var endRow=row;var maxRow=session.getLength();while(++row<maxRow){line=session.getLine(row);var indent=line.search(/\\S/);if(indent===-1)continue;if(startIndent>indent)break;var subRange=this.getFoldWidgetRange(session,\"all\",row);if(subRange){if(subRange.start.row<=startRow){break;}else if(subRange.isMultiLine()){row=subRange.end.row;}else if(startIndent==indent){break;}}endRow=row;}return new Range(startRow,startColumn,endRow,session.getLine(endRow).length);};this.getCommentRegionBlock=function(session,line,row){var startColumn=line.search(/\\s*$/);var maxRow=session.getLength();var startRow=row;var re=/^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;var depth=1;while(++row<maxRow){line=session.getLine(row);var m=re.exec(line);if(!m)continue;if(m[1])depth--;else depth++;if(!depth)break;}var endRow=row;if(endRow>startRow){return new Range(startRow,startColumn,endRow,line.length);}};}).call(FoldMode.prototype);});ace.define(\"ace/mode/d\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/d_highlight_rules\",\"ace/mode/folding/cstyle\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextMode=acequire(\"./text\").Mode;var DHighlightRules=acequire(\"./d_highlight_rules\").DHighlightRules;var FoldMode=acequire(\"./folding/cstyle\").FoldMode;var Mode=function Mode(){this.HighlightRules=DHighlightRules;this.foldingRules=new FoldMode();this.$behaviour=this.$defaultBehaviour;};oop.inherits(Mode,TextMode);(function(){this.lineCommentStart=\"//\";this.blockComment={start:\"/*\",end:\"*/\"};this.$id=\"ace/mode/d\";}).call(Mode.prototype);exports.Mode=Mode;});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// vendor/brace/mode/d.chunk.js","ace.define(\"ace/mode/doc_comment_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar DocCommentHighlightRules = function() {\n    this.$rules = {\n        \"start\" : [ {\n            token : \"comment.doc.tag\",\n            regex : \"@[\\\\w\\\\d_]+\" // TODO: fix email addresses\n        }, \n        DocCommentHighlightRules.getTagRule(),\n        {\n            defaultToken : \"comment.doc\",\n            caseInsensitive: true\n        }]\n    };\n};\n\noop.inherits(DocCommentHighlightRules, TextHighlightRules);\n\nDocCommentHighlightRules.getTagRule = function(start) {\n    return {\n        token : \"comment.doc.tag.storage.type\",\n        regex : \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n}\n\nDocCommentHighlightRules.getStartRule = function(start) {\n    return {\n        token : \"comment.doc\", // doc comment\n        regex : \"\\\\/\\\\*(?=\\\\*)\",\n        next  : start\n    };\n};\n\nDocCommentHighlightRules.getEndRule = function (start) {\n    return {\n        token : \"comment.doc\", // closing comment\n        regex : \"\\\\*\\\\/\",\n        next  : start\n    };\n};\n\n\nexports.DocCommentHighlightRules = DocCommentHighlightRules;\n\n});\n\nace.define(\"ace/mode/d_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/doc_comment_highlight_rules\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar DocCommentHighlightRules = acequire(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar DHighlightRules = function() {\n\n    var keywords = (\n        \"this|super|import|module|body|mixin|__traits|invariant|alias|asm|delete|\"+\n        \"typeof|typeid|sizeof|cast|new|in|is|typedef|__vector|__parameters\"\n    );\n\n    var keywordControls = (\n        \"break|case|continue|default|do|else|for|foreach|foreach_reverse|goto|if|\" +\n        \"return|switch|while|catch|try|throw|finally|version|assert|unittest|with\"\n    );\n    \n    var types = (\n        \"auto|bool|char|dchar|wchar|byte|ubyte|float|double|real|\" +\n        \"cfloat|creal|cdouble|cent|ifloat|ireal|idouble|\" +\n        \"int|long|short|void|uint|ulong|ushort|ucent|\" +\n        \"function|delegate|string|wstring|dstring|size_t|ptrdiff_t|hash_t|Object\"\n    );\n\n    var modifiers = (\n        \"abstract|align|debug|deprecated|export|extern|const|final|in|inout|out|\" +\n        \"ref|immutable|lazy|nothrow|override|package|pragma|private|protected|\" +\n        \"public|pure|scope|shared|__gshared|synchronized|static|volatile\"\n    );\n    \n    var storages = (\n        \"class|struct|union|template|interface|enum|macro\"\n    );\n    \n    var stringEscapesSeq =  {\n        token: \"constant.language.escape\",\n        regex: \"\\\\\\\\(?:(?:x[0-9A-F]{2})|(?:[0-7]{1,3})|(?:['\\\"\\\\?0abfnrtv\\\\\\\\])|\" +\n            \"(?:u[0-9a-fA-F]{4})|(?:U[0-9a-fA-F]{8}))\"\n    };\n\n    var builtinConstants = (\n        \"null|true|false|\"+\n        \"__DATE__|__EOF__|__TIME__|__TIMESTAMP__|__VENDOR__|__VERSION__|\"+\n        \"__FILE__|__MODULE__|__LINE__|__FUNCTION__|__PRETTY_FUNCTION__\"\n    );\n    \n    var operators = (\n        \"/|/\\\\=|&|&\\\\=|&&|\\\\|\\\\|\\\\=|\\\\|\\\\||\\\\-|\\\\-\\\\=|\\\\-\\\\-|\\\\+|\" +\n        \"\\\\+\\\\=|\\\\+\\\\+|\\\\<|\\\\<\\\\=|\\\\<\\\\<|\\\\<\\\\<\\\\=|\\\\<\\\\>|\\\\<\\\\>\\\\=|\\\\>|\\\\>\\\\=|\\\\>\\\\>\\\\=|\" +\n        \"\\\\>\\\\>\\\\>\\\\=|\\\\>\\\\>|\\\\>\\\\>\\\\>|\\\\!|\\\\!\\\\=|\\\\!\\\\<\\\\>|\\\\!\\\\<\\\\>\\\\=|\\\\!\\\\<|\\\\!\\\\<\\\\=|\" +\n        \"\\\\!\\\\>|\\\\!\\\\>\\\\=|\\\\?|\\\\$|\\\\=|\\\\=\\\\=|\\\\*|\\\\*\\\\=|%|%\\\\=|\" +\n        \"\\\\^|\\\\^\\\\=|\\\\^\\\\^|\\\\^\\\\^\\\\=|~|~\\\\=|\\\\=\\\\>|#\"\n    );\n\n    var keywordMapper = this.$keywords = this.createKeywordMapper({\n        \"keyword.modifier\" : modifiers,\n        \"keyword.control\" :  keywordControls,\n        \"keyword.type\" :     types,\n        \"keyword\":           keywords,\n        \"keyword.storage\":   storages,\n        \"punctation\": \"\\\\.|\\\\,|;|\\\\.\\\\.|\\\\.\\\\.\\\\.\",\n        \"keyword.operator\" : operators,\n        \"constant.language\": builtinConstants\n    }, \"identifier\");\n    \n    var identifierRe = \"[a-zA-Z_\\u00a1-\\uffff][a-zA-Z\\\\d_\\u00a1-\\uffff]*\\\\b\";\n\n    this.$rules = {\n        \"start\" : [\n            {     //-------------------------------------------------------- COMMENTS\n                token : \"comment\",\n                regex : \"\\\\/\\\\/.*$\"\n            },\n            DocCommentHighlightRules.getStartRule(\"doc-start\"),\n            {\n                token : \"comment\", // multi line comment\n                regex : \"\\\\/\\\\*\",\n                next : \"star-comment\"\n            }, {\n                token: \"comment.shebang\",\n                regex: \"^\\\\s*#!.*\"\n            }, {\n                token : \"comment\",\n                regex : \"\\\\/\\\\+\",\n                next: \"plus-comment\"\n            }, {  //-------------------------------------------------------- STRINGS\n                onMatch: function(value, currentState, state) {\n                    state.unshift(this.next, value.substr(2));\n                    return \"string\";\n                },\n                regex: 'q\"(?:[\\\\[\\\\(\\\\{\\\\<]+)',\n                next: 'operator-heredoc-string'\n            }, {\n                onMatch: function(value, currentState, state) {\n                    state.unshift(this.next, value.substr(2));\n                    return \"string\";\n                },\n                regex: 'q\"(?:[a-zA-Z_]+)$',\n                next: 'identifier-heredoc-string'\n            }, {\n                token : \"string\", // multi line string start\n                regex : '[xr]?\"',\n                next : \"quote-string\"\n            }, {\n                token : \"string\", // multi line string start\n                regex : '[xr]?`',\n                next : \"backtick-string\"\n            }, {\n                token : \"string\", // single line\n                regex : \"[xr]?['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?['][cdw]?\"\n            }, {  //-------------------------------------------------------- RULES\n                token: [\"keyword\", \"text\", \"paren.lparen\"],\n                regex: /(asm)(\\s*)({)/,\n                next: \"d-asm\"\n            }, {\n                token: [\"keyword\", \"text\", \"paren.lparen\", \"constant.language\"],\n                regex: \"(__traits)(\\\\s*)(\\\\()(\"+identifierRe+\")\"\n            }, { // import|module abc\n                token: [\"keyword\", \"text\", \"variable.module\"],\n                regex: \"(import|module)(\\\\s+)((?:\"+identifierRe+\"\\\\.?)*)\"\n            }, { // storage Name\n                token: [\"keyword.storage\", \"text\", \"entity.name.type\"],\n                regex: \"(\"+storages+\")(\\\\s*)(\"+identifierRe+\")\"\n            }, { // alias|typedef foo bar;\n                token: [\"keyword\", \"text\", \"variable.storage\", \"text\"],\n                regex: \"(alias|typedef)(\\\\s*)(\"+identifierRe+\")(\\\\s*)\"\n            }, {  //-------------------------------------------------------- OTHERS\n                token : \"constant.numeric\", // hex\n                regex : \"0[xX][0-9a-fA-F_]+(l|ul|u|f|F|L|U|UL)?\\\\b\"\n            }, {\n                token : \"constant.numeric\", // float\n                regex : \"[+-]?\\\\d[\\\\d_]*(?:(?:\\\\.[\\\\d_]*)?(?:[eE][+-]?[\\\\d_]+)?)?(l|ul|u|f|F|L|U|UL)?\\\\b\"\n            }, {\n                token: \"entity.other.attribute-name\",\n                regex: \"@\"+identifierRe\n            }, {\n                token : keywordMapper,\n                regex : \"[a-zA-Z_][a-zA-Z0-9_]*\\\\b\"\n            }, {\n                token : \"keyword.operator\",\n                regex : operators\n            }, {\n                token : \"punctuation.operator\",\n                regex : \"\\\\?|\\\\:|\\\\,|\\\\;|\\\\.|\\\\:\"\n            }, {\n                token : \"paren.lparen\",\n                regex : \"[[({]\"\n            }, {\n                token : \"paren.rparen\",\n                regex : \"[\\\\])}]\"\n            }, {\n                token : \"text\",\n                regex : \"\\\\s+\"\n            }\n        ],\n        \"star-comment\" : [\n            {\n                token : \"comment\", // closing comment\n                regex : \"\\\\*\\\\/\",\n                next : \"start\"\n            }, {\n                defaultToken: 'comment'\n            }\n        ],\n        \"plus-comment\" : [\n            {\n                token : \"comment\", // closing comment\n                regex : \"\\\\+\\\\/\",\n                next : \"start\"\n            }, {\n                defaultToken: 'comment'\n            }\n        ],\n        \n        \"quote-string\" : [\n           stringEscapesSeq,\n           {\n                token : \"string\",\n                regex : '\"[cdw]?',\n                next : \"start\"\n            }, {\n                defaultToken: 'string'\n            }\n        ],\n        \n        \"backtick-string\" : [\n           stringEscapesSeq,\n           {\n                token : \"string\",\n                regex : '`[cdw]?',\n                next : \"start\"\n            }, {\n                defaultToken: 'string'\n            }\n        ],\n        \n        \"operator-heredoc-string\": [\n            {\n                onMatch: function(value, currentState, state) {\n                    value = value.substring(value.length-2, value.length-1);\n                    var map = {'>':'<',']':'[',')':'(','}':'{'};\n                    if(Object.keys(map).indexOf(value) != -1)\n                        value = map[value];\n                    if(value != state[1]) return \"string\";\n                    state.shift();\n                    state.shift();\n                    \n                    return \"string\";\n                },\n                regex: '(?:[\\\\]\\\\)}>]+)\"',\n                next: 'start'\n            }, {\n                token: 'string',\n                regex: '[^\\\\]\\\\)}>]+'\n            }\n        ],\n        \n        \"identifier-heredoc-string\": [\n            {\n                onMatch: function(value, currentState, state) {\n                    value = value.substring(0, value.length-1);\n                    if(value != state[1]) return \"string\";\n                    state.shift();\n                    state.shift();\n                    \n                    return \"string\";\n                },\n                regex: '^(?:[A-Za-z_][a-zA-Z0-9]+)\"',\n                next: 'start'\n            }, {\n                token: 'string',\n                regex: '[^\\\\]\\\\)}>]+'\n            }\n        ],\n        \n        \"d-asm\": [\n            {\n                token: \"paren.rparen\",\n                regex: \"\\\\}\",\n                next: \"start\"\n            }, {\n                token: 'keyword.instruction',\n                regex: '[a-zA-Z]+',\n                next: 'd-asm-instruction' \n            }, {\n                token: \"text\",\n                regex: \"\\\\s+\"\n            }\n        ],\n        'd-asm-instruction': [\n            {\n                token: 'constant.language',\n                regex: /AL|AH|AX|EAX|BL|BH|BX|EBX|CL|CH|CX|ECX|DL|DH|DX|EDX|BP|EBP|SP|ESP|DI|EDI|SI|ESI/i\n            }, {\n                token: 'identifier',\n                regex: '[a-zA-Z]+'\n            }, {\n                token: 'string',\n                regex: '\".*\"'\n            }, {\n                token: 'comment',\n                regex: '//.*$'\n            }, {\n                token: 'constant.numeric',\n                regex: '[0-9.xA-F]+'\n            }, {\n                token: 'punctuation.operator',\n                regex: '\\\\,'\n            }, {\n                token: 'punctuation.operator',\n                regex: ';',\n                next: 'd-asm'\n            }, {\n                token: 'text',\n                regex: '\\\\s+'\n            }\n        ]\n    };\n\n    this.embedRules(DocCommentHighlightRules, \"doc-\",\n        [ DocCommentHighlightRules.getEndRule(\"start\") ]);\n};\n\nDHighlightRules.metaData = {\n      comment: 'D language',\n      fileTypes: [ 'd', 'di' ],\n      firstLineMatch: '^#!.*\\\\b[glr]?dmd\\\\b.',\n      foldingStartMarker: '(?x)/\\\\*\\\\*(?!\\\\*)|^(?![^{]*?//|[^{]*?/\\\\*(?!.*?\\\\*/.*?\\\\{)).*?\\\\{\\\\s*($|//|/\\\\*(?!.*?\\\\*/.*\\\\S))',\n      foldingStopMarker: '(?<!\\\\*)\\\\*\\\\*/|^\\\\s*\\\\}',\n      keyEquivalent: '^~D',\n      name: 'D',\n      scopeName: 'source.d'\n};\noop.inherits(DHighlightRules, TextHighlightRules);\n\nexports.DHighlightRules = DHighlightRules;\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar Range = acequire(\"../../range\").Range;\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    \n    this.foldingStartMarker = /(\\{|\\[)[^\\}\\]]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{]*(\\}|\\])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n    \n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n    \n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n    \n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n    \n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        \n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        \n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n                \n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            \n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n            \n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    \n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            \n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        \n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/d\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/d_highlight_rules\",\"ace/mode/folding/cstyle\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar DHighlightRules = acequire(\"./d_highlight_rules\").DHighlightRules;\nvar FoldMode = acequire(\"./folding/cstyle\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = DHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.lineCommentStart = \"//\";\n    this.blockComment = {start: \"/*\", end: \"*/\"};\n    this.$id = \"ace/mode/d\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n\n\n\n// WEBPACK FOOTER //\n// /Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/d.js"],"sourceRoot":""}