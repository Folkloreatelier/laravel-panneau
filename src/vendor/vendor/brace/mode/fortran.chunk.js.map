{"version":3,"sources":["webpack:///vendor/brace/mode/fortran.chunk.js","webpack:////Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/fortran.js"],"names":["webpackJsonppanneau","248","module","exports","ace","define","acequire","oop","TextHighlightRules","FortranHighlightRules","keywordMapper","this","createKeywordMapper","invalid.deprecated","support.function","constant.language","keyword","keyword.operator","storage.type","storage.modifier","strPre","integer","pointFloat","floatNumber","stringEscape","$rules","start","token","regex","next","qqstring3","defaultToken","qstring3","qqstring","qstring","inherits","Range","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","replace","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","match","i","index","openingBracketBlock","range","getCommentFoldRange","length","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","TextMode","Mode","CStyleFoldMode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","getNextLineIndent","state","tab","$getIndent","tokenizedLine","getTokenizer","getLineTokens","tokens","type","outdents","return","break","continue","RETURN","BREAK","CONTINUE","checkOutdent","input","trim","last","pop","value","autoOutdent","doc","getTabString","slice","remove","$id"],"mappings":"AAAAA,qBAAqB,MAEfC,IACA,SAAUC,EAAQC,GCHxBC,IAAIC,OAAO,oCAAoC,UAAU,UAAU,SAAS,cAAc,iCAAkC,SAASC,EAAUH,EAASD,GACxJ,YAEA,IAAIK,GAAMD,EAAS,cACfE,EAAqBF,EAAS,0BAA0BE,mBAExDC,EAAwB,WAExB,GAyDIC,GAAgBC,KAAKC,qBACrBC,qBAAsB,WACtBC,mBAtCA,4yDAuCAC,oBA3CA,wBA4CAC,QA5DA,saA6DAC,mBAlDA,4DAmDAC,eAfA,0EAgBAC,mBAXA,6IAYD,cAECC,EAAS,2BAMTC,EAAU,oFAKVC,EAAa,+CAEbC,EAAc,qFAA8BD,EAAa,IAEzDE,EAAgB,iFAEpBb,MAAKc,QACDC,QACIC,MAAQ,UACRC,MAAQ,SAERD,MAAQ,SACRC,MAAQR,EAAS,OACjBS,KAAO,cAEPF,MAAQ,SACRC,MAAQR,EAAS,SACjBS,KAAO,aAEPF,MAAQ,SACRC,MAAQR,EAAS,OACjBS,KAAO,aAEPF,MAAQ,SACRC,MAAQR,EAAS,SACjBS,KAAO,YAEPF,MAAQ,mBACRC,MAAQ,MAAQL,EAAc,kBAE9BI,MAAQ,mBACRC,MAAQL,IAERI,MAAQ,mBACRC,MAAQP,EAAU,YAElBM,MAAQ,mBACRC,MAAQP,EAAU,QAElBM,MAAQ,UACRC,MAAQ,wEAERD,MAAQ,UACRC,MAAQ,8EAERD,MAAQjB,EACRkB,MAAQ,gCAERD,MAAQ,mBACRC,MAAQ,2EAERD,MAAQ,eACRC,MAAQ,gBAERD,MAAQ,eACRC,MAAQ,gBAERD,MAAQ,OACRC,MAAQ,SAEZE,YACIH,MAAQ,2BACRC,MAAQJ,IAERG,MAAQ,SACRC,MAAQ,OACRC,KAAO,UAEPE,aAAe,WAEnBC,WACIL,MAAQ,2BACRC,MAAQJ,IAERG,MAAQ,SACRC,MAAQ,OACRC,KAAO,UAEPE,aAAe,WAEnBE,WACIN,MAAQ,2BACRC,MAAQJ,IAERG,MAAQ,SACRC,MAAQ,QACRC,KAAQ,aAERF,MAAQ,SACRC,MAAQ,MACRC,KAAQ,UAERE,aAAc,WAElBG,UACIP,MAAQ,2BACRC,MAAQJ,IAERG,MAAQ,SACRC,MAAQ,QACRC,KAAQ,YAERF,MAAQ,SACRC,MAAQ,MACRC,KAAQ,UAERE,aAAc,YAK1BxB,GAAI4B,SAAS1B,EAAuBD,GAEpCL,EAAQM,sBAAwBA,IAGhCL,IAAIC,OAAO,2BAA2B,UAAU,UAAU,SAAS,cAAc,YAAY,8BAA+B,SAASC,EAAUH,EAASD,GACxJ,YAEA,IAAIK,GAAMD,EAAS,iBACf8B,EAAQ9B,EAAS,eAAe8B,MAChCC,EAAe/B,EAAS,eAAegC,SAEvCA,EAAWnC,EAAQmC,SAAW,SAASC,GACnCA,IACA5B,KAAK6B,mBAAqB,GAAIC,QAC1B9B,KAAK6B,mBAAmBE,OAAOC,QAAQ,YAAa,IAAMJ,EAAab,QAE3Ef,KAAKiC,kBAAoB,GAAIH,QACzB9B,KAAKiC,kBAAkBF,OAAOC,QAAQ,YAAa,IAAMJ,EAAaM,OAIlFtC,GAAI4B,SAASG,EAAUD,GAEvB,WAEI1B,KAAK6B,mBAAqB,8BAC1B7B,KAAKiC,kBAAoB,kCACzBjC,KAAKmC,yBAA0B,uBAC/BnC,KAAKoC,yBAA2B,2BAChCpC,KAAKqC,cAAgB,4BACrBrC,KAAKsC,mBAAqBtC,KAAKuC,cAC/BvC,KAAKuC,cAAgB,SAASC,EAASC,EAAWC,GAC9C,GAAIC,GAAOH,EAAQI,QAAQF,EAE3B,IAAI1C,KAAKmC,yBAAyBU,KAAKF,KAC9B3C,KAAKqC,cAAcQ,KAAKF,KAAU3C,KAAKoC,yBAAyBS,KAAKF,GACtE,MAAO,EAGf,IAAIG,GAAK9C,KAAKsC,mBAAmBE,EAASC,EAAWC,EAErD,QAAKI,GAAM9C,KAAKqC,cAAcQ,KAAKF,GACxB,QAEJG,GAGX9C,KAAK+C,mBAAqB,SAASP,EAASC,EAAWC,EAAKM,GACxD,GAAIL,GAAOH,EAAQI,QAAQF,EAE3B,IAAI1C,KAAKqC,cAAcQ,KAAKF,GACxB,MAAO3C,MAAKiD,sBAAsBT,EAASG,EAAMD,EAErD,IAAIQ,GAAQP,EAAKO,MAAMlD,KAAK6B,mBAC5B,IAAIqB,EAAO,CACP,GAAIC,GAAID,EAAME,KAEd,IAAIF,EAAM,GACN,MAAOlD,MAAKqD,oBAAoBb,EAASU,EAAM,GAAIR,EAAKS,EAE5D,IAAIG,GAAQd,EAAQe,oBAAoBb,EAAKS,EAAID,EAAM,GAAGM,OAAQ,EASlE,OAPIF,KAAUA,EAAMG,gBACZT,EACAM,EAAQtD,KAAK0D,gBAAgBlB,EAASE,GAClB,OAAbD,IACPa,EAAQ,OAGTA,EAGX,GAAkB,cAAdb,EAAJ,CAGA,GAAIS,GAAQP,EAAKO,MAAMlD,KAAKiC,kBAC5B,IAAIiB,EAAO,CACP,GAAIC,GAAID,EAAME,MAAQF,EAAM,GAAGM,MAE/B,OAAIN,GAAM,GACClD,KAAK2D,oBAAoBnB,EAASU,EAAM,GAAIR,EAAKS,GAErDX,EAAQe,oBAAoBb,EAAKS,GAAI,MAIpDnD,KAAK0D,gBAAkB,SAASlB,EAASE,GACrC,GAAIC,GAAOH,EAAQI,QAAQF,GACvBkB,EAAcjB,EAAKkB,OAAO,MAC1BC,EAAWpB,EACXqB,EAAcpB,EAAKa,MACvBd,IAAY,CAGZ,KAFA,GAAIsB,GAAStB,EACTuB,EAASzB,EAAQ0B,cACZxB,EAAMuB,GAAQ,CACnBtB,EAAOH,EAAQI,QAAQF,EACvB,IAAIyB,GAASxB,EAAKkB,OAAO,KACzB,KAAgB,IAAZM,EAAJ,CAEA,GAAKP,EAAcO,EACf,KACJ,IAAIC,GAAWpE,KAAK+C,mBAAmBP,EAAS,MAAOE,EAEvD,IAAI0B,EAAU,CACV,GAAIA,EAASrD,MAAM2B,KAAOoB,EACtB,KACG,IAAIM,EAASX,cAChBf,EAAM0B,EAASlC,IAAIQ,QAChB,IAAIkB,GAAeO,EACtB,MAGRH,EAAStB,GAGb,MAAO,IAAIjB,GAAMqC,EAAUC,EAAaC,EAAQxB,EAAQI,QAAQoB,GAAQR,SAE5ExD,KAAKiD,sBAAwB,SAAST,EAASG,EAAMD,GAOjD,IANA,GAAIqB,GAAcpB,EAAKkB,OAAO,QAC1BI,EAASzB,EAAQ0B,YACjBJ,EAAWpB,EAEX2B,EAAK,uCACLC,EAAQ,IACH5B,EAAMuB,GAAQ,CACnBtB,EAAOH,EAAQI,QAAQF,EACvB,IAAI6B,GAAIF,EAAGG,KAAK7B,EAChB,IAAK4B,IACDA,EAAE,GAAID,IACLA,KAEAA,GAAO,MAGhB,GAAIN,GAAStB,CACb,IAAIsB,EAASF,EACT,MAAO,IAAIrC,GAAMqC,EAAUC,EAAaC,EAAQrB,EAAKa,UAI9DiB,KAAK9C,EAAS+C,aAIjBjF,IAAIC,OAAO,oBAAoB,UAAU,UAAU,SAAS,cAAc,gBAAgB,mCAAmC,0BAA0B,aAAc,SAASC,EAAUH,EAASD,GACjM,YAEA,IAAIK,GAAMD,EAAS,cACfgF,EAAWhF,EAAS,UAAUiF,KAC9B9E,EAAwBH,EAAS,6BAA6BG,sBAC9D+E,EAAiBlF,EAAS,oBAAoBgC,SAC9CF,EAAQ9B,EAAS,YAAY8B,MAE7BmD,EAAO,WACP5E,KAAK8E,eAAiBhF,EACtBE,KAAK+E,aAAe,GAAIF,GACxB7E,KAAKgF,WAAahF,KAAKiF,kBAE3BrF,GAAI4B,SAASoD,EAAMD,GAEnB,WAEI3E,KAAKkF,iBAAmB,IAExBlF,KAAKmF,kBAAoB,SAASC,EAAOzC,EAAM0C,GAC3C,GAAIlB,GAASnE,KAAKsF,WAAW3C,GAEzB4C,EAAgBvF,KAAKwF,eAAeC,cAAc9C,EAAMyC,GACxDM,EAASH,EAAcG,MAE3B,IAAIA,EAAOlC,QAA0C,WAAhCkC,EAAOA,EAAOlC,OAAO,GAAGmC,KACzC,MAAOxB,EAGX,IAAa,SAATiB,EAAkB,CACNzC,EAAKO,MAAM,sBAEnBiB,GAAUkB,GAIlB,MAAOlB,GAGX,IAAIyB,IACAC,OAAU,EACVC,MAAS,EACTC,SAAY,EACZC,OAAU,EACVC,MAAS,EACTC,SAAY,EAGhBlG,MAAKmG,aAAe,SAASf,EAAOzC,EAAMyD,GACtC,GAAc,SAAVA,GAA8B,OAAVA,GAA4B,OAAVA,EACtC,OAAO,CAEX,IAAIV,GAAS1F,KAAKwF,eAAeC,cAAc9C,EAAK0D,OAAQjB,GAAOM,MAEnE,KAAKA,EACD,OAAO,CACX,IACI,GAAIY,GAAOZ,EAAOa,YACbD,IAAsB,WAAbA,EAAKX,MAAmC,QAAbW,EAAKX,MAAkBW,EAAKE,MAAMtD,MAAM,UAErF,SAAKoD,IAGgB,WAAbA,EAAKX,MAAqBC,EAASU,EAAKE,SAGpDxG,KAAKyG,YAAc,SAASrB,EAAOsB,EAAKhE,GAEpCA,GAAO,CACP,IAAIyB,GAASnE,KAAKsF,WAAWoB,EAAI9D,QAAQF,IACrC2C,EAAMqB,EAAIC,cACVxC,GAAOyC,OAAOvB,EAAI7B,SAAW6B,GAC7BqB,EAAIG,OAAO,GAAIpF,GAAMiB,EAAKyB,EAAOX,OAAO6B,EAAI7B,OAAQd,EAAKyB,EAAOX,UAGxExD,KAAK8G,IAAM,oBACZrC,KAAKG,EAAKF,WAEblF,EAAQoF,KAAOA","file":"vendor/brace/mode/fortran.chunk.js","sourcesContent":["webpackJsonppanneau([194],{\n\n/***/ 248:\n/***/ (function(module, exports) {\n\nace.define(\"ace/mode/fortran_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextHighlightRules=acequire(\"./text_highlight_rules\").TextHighlightRules;var FortranHighlightRules=function FortranHighlightRules(){var keywords=\"call|case|contains|continue|cycle|do|else|elseif|end|enddo|endif|function|\"+\"if|implicit|in|include|inout|intent|module|none|only|out|print|program|return|\"+\"select|status|stop|subroutine|\"+\"return|then|use|while|write|\"+\"CALL|CASE|CONTAINS|CONTINUE|CYCLE|DO|ELSE|ELSEIF|END|ENDDO|ENDIF|FUNCTION|\"+\"IF|IMPLICIT|IN|INCLUDE|INOUT|INTENT|MODULE|NONE|ONLY|OUT|PRINT|PROGRAM|RETURN|\"+\"SELECT|STATUS|STOP|SUBROUTINE|\"+\"RETURN|THEN|USE|WHILE|WRITE\";var keywordOperators=\"and|or|not|eq|ne|gt|ge|lt|le|\"+\"AND|OR|NOT|EQ|NE|GT|GE|LT|LE\";var builtinConstants=\"true|false|TRUE|FALSE\";var builtinFunctions=\"abs|achar|acos|acosh|adjustl|adjustr|aimag|aint|all|allocate|\"+\"anint|any|asin|asinh|associated|atan|atan2|atanh|\"+\"bessel_j0|bessel_j1|bessel_jn|bessel_y0|bessel_y1|bessel_yn|\"+\"bge|bgt|bit_size|ble|blt|btest|ceiling|char|cmplx|conjg|cos|cosh|\"+\"count|cpu_time|cshift|date_and_time|dble|deallocate|digits|dim|dot_product|dprod|\"+\"dshiftl|dshiftr|dsqrt|eoshift|epsilon|erf|erfc|erfc_scaled|exp|float|floor|\"+\"format|fraction|gamma|input|len|lge|lgt|lle|llt|log|log10|maskl|maskr|matmul|max|maxloc|maxval|\"+\"merge|min|minloc|minval|mod|modulo|nint|not|norm2|null|nullify|pack|parity|popcnt|poppar|\"+\"precision|present|product|radix|random_number|random_seed|range|repeat|reshape|round|\"+\"rrspacing|same_type_as|scale|scan|selected_char_kind|selected_int_kind|selected_real_kind|\"+\"set_exponent|shape|shifta|shiftl|shiftr|sign|sin|sinh|size|sngl|spacing|spread|\"+\"sqrt|sum|system_clock|tan|tanh|tiny|trailz|transfer|transpose|trim|ubound|unpack|verify|\"+\"ABS|ACHAR|ACOS|ACOSH|ADJUSTL|ADJUSTR|AIMAG|AINT|ALL|ALLOCATE|\"+\"ANINT|ANY|ASIN|ASINH|ASSOCIATED|ATAN|ATAN2|ATANH|\"+\"BESSEL_J0|BESSEL_J1|BESSEL_JN|BESSEL_Y0|BESSEL_Y1|BESSEL_YN|\"+\"BGE|BGT|BIT_SIZE|BLE|BLT|BTEST|CEILING|CHAR|CMPLX|CONJG|COS|COSH|\"+\"COUNT|CPU_TIME|CSHIFT|DATE_AND_TIME|DBLE|DEALLOCATE|DIGITS|DIM|DOT_PRODUCT|DPROD|\"+\"DSHIFTL|DSHIFTR|DSQRT|EOSHIFT|EPSILON|ERF|ERFC|ERFC_SCALED|EXP|FLOAT|FLOOR|\"+\"FORMAT|FRACTION|GAMMA|INPUT|LEN|LGE|LGT|LLE|LLT|LOG|LOG10|MASKL|MASKR|MATMUL|MAX|MAXLOC|MAXVAL|\"+\"MERGE|MIN|MINLOC|MINVAL|MOD|MODULO|NINT|NOT|NORM2|NULL|NULLIFY|PACK|PARITY|POPCNT|POPPAR|\"+\"PRECISION|PRESENT|PRODUCT|RADIX|RANDOM_NUMBER|RANDOM_SEED|RANGE|REPEAT|RESHAPE|ROUND|\"+\"RRSPACING|SAME_TYPE_AS|SCALE|SCAN|SELECTED_CHAR_KIND|SELECTED_INT_KIND|SELECTED_REAL_KIND|\"+\"SET_EXPONENT|SHAPE|SHIFTA|SHIFTL|SHIFTR|SIGN|SIN|SINH|SIZE|SNGL|SPACING|SPREAD|\"+\"SQRT|SUM|SYSTEM_CLOCK|TAN|TANH|TINY|TRAILZ|TRANSFER|TRANSPOSE|TRIM|UBOUND|UNPACK|VERIFY\";var storageType=\"logical|character|integer|real|type|\"+\"LOGICAL|CHARACTER|INTEGER|REAL|TYPE\";var storageModifiers=\"allocatable|dimension|intent|parameter|pointer|target|private|public|\"+\"ALLOCATABLE|DIMENSION|INTENT|PARAMETER|POINTER|TARGET|PRIVATE|PUBLIC\";var keywordMapper=this.createKeywordMapper({\"invalid.deprecated\":\"debugger\",\"support.function\":builtinFunctions,\"constant.language\":builtinConstants,\"keyword\":keywords,\"keyword.operator\":keywordOperators,\"storage.type\":storageType,\"storage.modifier\":storageModifiers},\"identifier\");var strPre=\"(?:r|u|ur|R|U|UR|Ur|uR)?\";var decimalInteger=\"(?:(?:[1-9]\\\\d*)|(?:0))\";var octInteger=\"(?:0[oO]?[0-7]+)\";var hexInteger=\"(?:0[xX][\\\\dA-Fa-f]+)\";var binInteger=\"(?:0[bB][01]+)\";var integer=\"(?:\"+decimalInteger+\"|\"+octInteger+\"|\"+hexInteger+\"|\"+binInteger+\")\";var exponent=\"(?:[eE][+-]?\\\\d+)\";var fraction=\"(?:\\\\.\\\\d+)\";var intPart=\"(?:\\\\d+)\";var pointFloat=\"(?:(?:\"+intPart+\"?\"+fraction+\")|(?:\"+intPart+\"\\\\.))\";var exponentFloat=\"(?:(?:\"+pointFloat+\"|\"+intPart+\")\"+exponent+\")\";var floatNumber=\"(?:\"+exponentFloat+\"|\"+pointFloat+\")\";var stringEscape=\"\\\\\\\\(x[0-9A-Fa-f]{2}|[0-7]{3}|[\\\\\\\\abfnrtv'\\\"]|U[0-9A-Fa-f]{8}|u[0-9A-Fa-f]{4})\";this.$rules={\"start\":[{token:\"comment\",regex:\"!.*$\"},{token:\"string\",// multi line \"\"\" string start\nregex:strPre+'\"{3}',next:\"qqstring3\"},{token:\"string\",// \" string\nregex:strPre+'\"(?=.)',next:\"qqstring\"},{token:\"string\",// multi line ''' string start\nregex:strPre+\"'{3}\",next:\"qstring3\"},{token:\"string\",// ' string\nregex:strPre+\"'(?=.)\",next:\"qstring\"},{token:\"constant.numeric\",// imaginary\nregex:\"(?:\"+floatNumber+\"|\\\\d+)[jJ]\\\\b\"},{token:\"constant.numeric\",// float\nregex:floatNumber},{token:\"constant.numeric\",// long integer\nregex:integer+\"[lL]\\\\b\"},{token:\"constant.numeric\",// integer\nregex:integer+\"\\\\b\"},{token:\"keyword\",// pre-compiler directives\nregex:\"#\\\\s*(?:include|import|define|undef|INCLUDE|IMPORT|DEFINE|UNDEF)\\\\b\"},{token:\"keyword\",// special case pre-compiler directive\nregex:\"#\\\\s*(?:endif|ifdef|else|elseif|ifndef|ENDIF|IFDEF|ELSE|ELSEIF|IFNDEF)\\\\b\"},{token:keywordMapper,regex:\"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"},{token:\"keyword.operator\",regex:\"\\\\+|\\\\-|\\\\*|\\\\*\\\\*|\\\\/|\\\\/\\\\/|%|<<|>>|&|\\\\||\\\\^|~|<|>|<=|=>|==|!=|<>|=\"},{token:\"paren.lparen\",regex:\"[\\\\[\\\\(\\\\{]\"},{token:\"paren.rparen\",regex:\"[\\\\]\\\\)\\\\}]\"},{token:\"text\",regex:\"\\\\s+\"}],\"qqstring3\":[{token:\"constant.language.escape\",regex:stringEscape},{token:\"string\",// multi line \"\"\" string end\nregex:'\"{3}',next:\"start\"},{defaultToken:\"string\"}],\"qstring3\":[{token:\"constant.language.escape\",regex:stringEscape},{token:\"string\",// multi line \"\"\" string end\nregex:'\"{3}',next:\"start\"},{defaultToken:\"string\"}],\"qqstring\":[{token:\"constant.language.escape\",regex:stringEscape},{token:\"string\",regex:\"\\\\\\\\$\",next:\"qqstring\"},{token:\"string\",regex:'\"|$',next:\"start\"},{defaultToken:\"string\"}],\"qstring\":[{token:\"constant.language.escape\",regex:stringEscape},{token:\"string\",regex:\"\\\\\\\\$\",next:\"qstring\"},{token:\"string\",regex:\"'|$\",next:\"start\"},{defaultToken:\"string\"}]};};oop.inherits(FortranHighlightRules,TextHighlightRules);exports.FortranHighlightRules=FortranHighlightRules;});ace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../../lib/oop\");var Range=acequire(\"../../range\").Range;var BaseFoldMode=acequire(\"./fold_mode\").FoldMode;var FoldMode=exports.FoldMode=function(commentRegex){if(commentRegex){this.foldingStartMarker=new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/,\"|\"+commentRegex.start));this.foldingStopMarker=new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/,\"|\"+commentRegex.end));}};oop.inherits(FoldMode,BaseFoldMode);(function(){this.foldingStartMarker=/(\\{|\\[)[^\\}\\]]*$|^\\s*(\\/\\*)/;this.foldingStopMarker=/^[^\\[\\{]*(\\}|\\])|^[\\s\\*]*(\\*\\/)/;this.singleLineBlockCommentRe=/^\\s*(\\/\\*).*\\*\\/\\s*$/;this.tripleStarBlockCommentRe=/^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;this.startRegionRe=/^\\s*(\\/\\*|\\/\\/)#?region\\b/;this._getFoldWidgetBase=this.getFoldWidget;this.getFoldWidget=function(session,foldStyle,row){var line=session.getLine(row);if(this.singleLineBlockCommentRe.test(line)){if(!this.startRegionRe.test(line)&&!this.tripleStarBlockCommentRe.test(line))return\"\";}var fw=this._getFoldWidgetBase(session,foldStyle,row);if(!fw&&this.startRegionRe.test(line))return\"start\";// lineCommentRegionStart\nreturn fw;};this.getFoldWidgetRange=function(session,foldStyle,row,forceMultiline){var line=session.getLine(row);if(this.startRegionRe.test(line))return this.getCommentRegionBlock(session,line,row);var match=line.match(this.foldingStartMarker);if(match){var i=match.index;if(match[1])return this.openingBracketBlock(session,match[1],row,i);var range=session.getCommentFoldRange(row,i+match[0].length,1);if(range&&!range.isMultiLine()){if(forceMultiline){range=this.getSectionRange(session,row);}else if(foldStyle!=\"all\")range=null;}return range;}if(foldStyle===\"markbegin\")return;var match=line.match(this.foldingStopMarker);if(match){var i=match.index+match[0].length;if(match[1])return this.closingBracketBlock(session,match[1],row,i);return session.getCommentFoldRange(row,i,-1);}};this.getSectionRange=function(session,row){var line=session.getLine(row);var startIndent=line.search(/\\S/);var startRow=row;var startColumn=line.length;row=row+1;var endRow=row;var maxRow=session.getLength();while(++row<maxRow){line=session.getLine(row);var indent=line.search(/\\S/);if(indent===-1)continue;if(startIndent>indent)break;var subRange=this.getFoldWidgetRange(session,\"all\",row);if(subRange){if(subRange.start.row<=startRow){break;}else if(subRange.isMultiLine()){row=subRange.end.row;}else if(startIndent==indent){break;}}endRow=row;}return new Range(startRow,startColumn,endRow,session.getLine(endRow).length);};this.getCommentRegionBlock=function(session,line,row){var startColumn=line.search(/\\s*$/);var maxRow=session.getLength();var startRow=row;var re=/^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;var depth=1;while(++row<maxRow){line=session.getLine(row);var m=re.exec(line);if(!m)continue;if(m[1])depth--;else depth++;if(!depth)break;}var endRow=row;if(endRow>startRow){return new Range(startRow,startColumn,endRow,line.length);}};}).call(FoldMode.prototype);});ace.define(\"ace/mode/fortran\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/fortran_highlight_rules\",\"ace/mode/folding/cstyle\",\"ace/range\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextMode=acequire(\"./text\").Mode;var FortranHighlightRules=acequire(\"./fortran_highlight_rules\").FortranHighlightRules;var CStyleFoldMode=acequire(\"./folding/cstyle\").FoldMode;var Range=acequire(\"../range\").Range;var Mode=function Mode(){this.HighlightRules=FortranHighlightRules;this.foldingRules=new CStyleFoldMode();this.$behaviour=this.$defaultBehaviour;};oop.inherits(Mode,TextMode);(function(){this.lineCommentStart=\"!\";this.getNextLineIndent=function(state,line,tab){var indent=this.$getIndent(line);var tokenizedLine=this.getTokenizer().getLineTokens(line,state);var tokens=tokenizedLine.tokens;if(tokens.length&&tokens[tokens.length-1].type==\"comment\"){return indent;}if(state==\"start\"){var match=line.match(/^.*[\\{\\(\\[:]\\s*$/);if(match){indent+=tab;}}return indent;};var outdents={\"return\":1,\"break\":1,\"continue\":1,\"RETURN\":1,\"BREAK\":1,\"CONTINUE\":1};this.checkOutdent=function(state,line,input){if(input!==\"\\r\\n\"&&input!==\"\\r\"&&input!==\"\\n\")return false;var tokens=this.getTokenizer().getLineTokens(line.trim(),state).tokens;if(!tokens)return false;do{var last=tokens.pop();}while(last&&(last.type==\"comment\"||last.type==\"text\"&&last.value.match(/^\\s+$/)));if(!last)return false;return last.type==\"keyword\"&&outdents[last.value];};this.autoOutdent=function(state,doc,row){row+=1;var indent=this.$getIndent(doc.getLine(row));var tab=doc.getTabString();if(indent.slice(-tab.length)==tab)doc.remove(new Range(row,indent.length-tab.length,row,indent.length));};this.$id=\"ace/mode/fortran\";}).call(Mode.prototype);exports.Mode=Mode;});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// vendor/brace/mode/fortran.chunk.js","ace.define(\"ace/mode/fortran_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar FortranHighlightRules = function() {\n\n    var keywords = (\n        \"call|case|contains|continue|cycle|do|else|elseif|end|enddo|endif|function|\"+\n        \"if|implicit|in|include|inout|intent|module|none|only|out|print|program|return|\"+\n        \"select|status|stop|subroutine|\" +\n        \"return|then|use|while|write|\"+\n        \"CALL|CASE|CONTAINS|CONTINUE|CYCLE|DO|ELSE|ELSEIF|END|ENDDO|ENDIF|FUNCTION|\"+\n        \"IF|IMPLICIT|IN|INCLUDE|INOUT|INTENT|MODULE|NONE|ONLY|OUT|PRINT|PROGRAM|RETURN|\"+\n        \"SELECT|STATUS|STOP|SUBROUTINE|\" +\n        \"RETURN|THEN|USE|WHILE|WRITE\"\n    );\n\n    var keywordOperators = (\n        \"and|or|not|eq|ne|gt|ge|lt|le|\" +\n        \"AND|OR|NOT|EQ|NE|GT|GE|LT|LE\"\n    );\n\n    var builtinConstants = (\n        \"true|false|TRUE|FALSE\"\n    );\n\n    var builtinFunctions = (\n        \"abs|achar|acos|acosh|adjustl|adjustr|aimag|aint|all|allocate|\"+\n        \"anint|any|asin|asinh|associated|atan|atan2|atanh|\"+\n        \"bessel_j0|bessel_j1|bessel_jn|bessel_y0|bessel_y1|bessel_yn|\"+\n        \"bge|bgt|bit_size|ble|blt|btest|ceiling|char|cmplx|conjg|cos|cosh|\"+\n        \"count|cpu_time|cshift|date_and_time|dble|deallocate|digits|dim|dot_product|dprod|\"+\n        \"dshiftl|dshiftr|dsqrt|eoshift|epsilon|erf|erfc|erfc_scaled|exp|float|floor|\"+\n        \"format|fraction|gamma|input|len|lge|lgt|lle|llt|log|log10|maskl|maskr|matmul|max|maxloc|maxval|\"+\n        \"merge|min|minloc|minval|mod|modulo|nint|not|norm2|null|nullify|pack|parity|popcnt|poppar|\"+\n        \"precision|present|product|radix|random_number|random_seed|range|repeat|reshape|round|\"+\n        \"rrspacing|same_type_as|scale|scan|selected_char_kind|selected_int_kind|selected_real_kind|\"+\n        \"set_exponent|shape|shifta|shiftl|shiftr|sign|sin|sinh|size|sngl|spacing|spread|\"+\n        \"sqrt|sum|system_clock|tan|tanh|tiny|trailz|transfer|transpose|trim|ubound|unpack|verify|\" +\n        \"ABS|ACHAR|ACOS|ACOSH|ADJUSTL|ADJUSTR|AIMAG|AINT|ALL|ALLOCATE|\"+\n        \"ANINT|ANY|ASIN|ASINH|ASSOCIATED|ATAN|ATAN2|ATANH|\"+\n        \"BESSEL_J0|BESSEL_J1|BESSEL_JN|BESSEL_Y0|BESSEL_Y1|BESSEL_YN|\"+\n        \"BGE|BGT|BIT_SIZE|BLE|BLT|BTEST|CEILING|CHAR|CMPLX|CONJG|COS|COSH|\"+\n        \"COUNT|CPU_TIME|CSHIFT|DATE_AND_TIME|DBLE|DEALLOCATE|DIGITS|DIM|DOT_PRODUCT|DPROD|\"+\n        \"DSHIFTL|DSHIFTR|DSQRT|EOSHIFT|EPSILON|ERF|ERFC|ERFC_SCALED|EXP|FLOAT|FLOOR|\"+\n        \"FORMAT|FRACTION|GAMMA|INPUT|LEN|LGE|LGT|LLE|LLT|LOG|LOG10|MASKL|MASKR|MATMUL|MAX|MAXLOC|MAXVAL|\"+\n        \"MERGE|MIN|MINLOC|MINVAL|MOD|MODULO|NINT|NOT|NORM2|NULL|NULLIFY|PACK|PARITY|POPCNT|POPPAR|\"+\n        \"PRECISION|PRESENT|PRODUCT|RADIX|RANDOM_NUMBER|RANDOM_SEED|RANGE|REPEAT|RESHAPE|ROUND|\"+\n        \"RRSPACING|SAME_TYPE_AS|SCALE|SCAN|SELECTED_CHAR_KIND|SELECTED_INT_KIND|SELECTED_REAL_KIND|\"+\n        \"SET_EXPONENT|SHAPE|SHIFTA|SHIFTL|SHIFTR|SIGN|SIN|SINH|SIZE|SNGL|SPACING|SPREAD|\"+\n        \"SQRT|SUM|SYSTEM_CLOCK|TAN|TANH|TINY|TRAILZ|TRANSFER|TRANSPOSE|TRIM|UBOUND|UNPACK|VERIFY\"\n    );\n\n    var storageType = (\n        \"logical|character|integer|real|type|\" +\n        \"LOGICAL|CHARACTER|INTEGER|REAL|TYPE\"\n    );\n\n    var storageModifiers = (\n        \"allocatable|dimension|intent|parameter|pointer|target|private|public|\" +\n        \"ALLOCATABLE|DIMENSION|INTENT|PARAMETER|POINTER|TARGET|PRIVATE|PUBLIC\"\n    );\n\n    var keywordMapper = this.createKeywordMapper({\n        \"invalid.deprecated\": \"debugger\",\n        \"support.function\": builtinFunctions,\n        \"constant.language\": builtinConstants,\n        \"keyword\": keywords,\n        \"keyword.operator\": keywordOperators,\n        \"storage.type\": storageType,\n        \"storage.modifier\" : storageModifiers\n    }, \"identifier\");\n\n    var strPre = \"(?:r|u|ur|R|U|UR|Ur|uR)?\";\n\n    var decimalInteger = \"(?:(?:[1-9]\\\\d*)|(?:0))\";\n    var octInteger = \"(?:0[oO]?[0-7]+)\";\n    var hexInteger = \"(?:0[xX][\\\\dA-Fa-f]+)\";\n    var binInteger = \"(?:0[bB][01]+)\";\n    var integer = \"(?:\" + decimalInteger + \"|\" + octInteger + \"|\" + hexInteger + \"|\" + binInteger + \")\";\n\n    var exponent = \"(?:[eE][+-]?\\\\d+)\";\n    var fraction = \"(?:\\\\.\\\\d+)\";\n    var intPart = \"(?:\\\\d+)\";\n    var pointFloat = \"(?:(?:\" + intPart + \"?\" + fraction + \")|(?:\" + intPart + \"\\\\.))\";\n    var exponentFloat = \"(?:(?:\" + pointFloat + \"|\" +  intPart + \")\" + exponent + \")\";\n    var floatNumber = \"(?:\" + exponentFloat + \"|\" + pointFloat + \")\";\n\n    var stringEscape =  \"\\\\\\\\(x[0-9A-Fa-f]{2}|[0-7]{3}|[\\\\\\\\abfnrtv'\\\"]|U[0-9A-Fa-f]{8}|u[0-9A-Fa-f]{4})\";\n\n    this.$rules = {\n        \"start\" : [ {\n            token : \"comment\",\n            regex : \"!.*$\"\n        }, {\n            token : \"string\",           // multi line \"\"\" string start\n            regex : strPre + '\"{3}',\n            next : \"qqstring3\"\n        }, {\n            token : \"string\",           // \" string\n            regex : strPre + '\"(?=.)',\n            next : \"qqstring\"\n        }, {\n            token : \"string\",           // multi line ''' string start\n            regex : strPre + \"'{3}\",\n            next : \"qstring3\"\n        }, {\n            token : \"string\",           // ' string\n            regex : strPre + \"'(?=.)\",\n            next : \"qstring\"\n        }, {\n            token : \"constant.numeric\", // imaginary\n            regex : \"(?:\" + floatNumber + \"|\\\\d+)[jJ]\\\\b\"\n        }, {\n            token : \"constant.numeric\", // float\n            regex : floatNumber\n        }, {\n            token : \"constant.numeric\", // long integer\n            regex : integer + \"[lL]\\\\b\"\n        }, {\n            token : \"constant.numeric\", // integer\n            regex : integer + \"\\\\b\"\n        }, {\n            token : \"keyword\", // pre-compiler directives\n            regex : \"#\\\\s*(?:include|import|define|undef|INCLUDE|IMPORT|DEFINE|UNDEF)\\\\b\"\n        }, {\n            token : \"keyword\", // special case pre-compiler directive\n            regex : \"#\\\\s*(?:endif|ifdef|else|elseif|ifndef|ENDIF|IFDEF|ELSE|ELSEIF|IFNDEF)\\\\b\"\n        }, {\n            token : keywordMapper,\n            regex : \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n        }, {\n            token : \"keyword.operator\",\n            regex : \"\\\\+|\\\\-|\\\\*|\\\\*\\\\*|\\\\/|\\\\/\\\\/|%|<<|>>|&|\\\\||\\\\^|~|<|>|<=|=>|==|!=|<>|=\"\n        }, {\n            token : \"paren.lparen\",\n            regex : \"[\\\\[\\\\(\\\\{]\"\n        }, {\n            token : \"paren.rparen\",\n            regex : \"[\\\\]\\\\)\\\\}]\"\n        }, {\n            token : \"text\",\n            regex : \"\\\\s+\"\n        } ],\n        \"qqstring3\" : [ {\n            token : \"constant.language.escape\",\n            regex : stringEscape\n        }, {\n            token : \"string\", // multi line \"\"\" string end\n            regex : '\"{3}',\n            next : \"start\"\n        }, {\n            defaultToken : \"string\"\n        } ],\n        \"qstring3\" : [ {\n            token : \"constant.language.escape\",\n            regex : stringEscape\n        }, {\n            token : \"string\", // multi line \"\"\" string end\n            regex : '\"{3}',\n            next : \"start\"\n        }, {\n            defaultToken : \"string\"\n        } ],\n        \"qqstring\" : [{\n            token : \"constant.language.escape\",\n            regex : stringEscape\n        }, {\n            token : \"string\",\n            regex : \"\\\\\\\\$\",\n            next  : \"qqstring\"\n        }, {\n            token : \"string\",\n            regex : '\"|$',\n            next  : \"start\"\n        }, {\n            defaultToken: \"string\"\n        }],\n        \"qstring\" : [{\n            token : \"constant.language.escape\",\n            regex : stringEscape\n        }, {\n            token : \"string\",\n            regex : \"\\\\\\\\$\",\n            next  : \"qstring\"\n        }, {\n            token : \"string\",\n            regex : \"'|$\",\n            next  : \"start\"\n        }, {\n            defaultToken: \"string\"\n        }]\n    };\n};\n\noop.inherits(FortranHighlightRules, TextHighlightRules);\n\nexports.FortranHighlightRules = FortranHighlightRules;\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar Range = acequire(\"../../range\").Range;\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n\n    this.foldingStartMarker = /(\\{|\\[)[^\\}\\]]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{]*(\\}|\\])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n\n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n\n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n\n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n\n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n\n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n\n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n\n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n\n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n\n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n\n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n\n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n\n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n\n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/fortran\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/fortran_highlight_rules\",\"ace/mode/folding/cstyle\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar FortranHighlightRules = acequire(\"./fortran_highlight_rules\").FortranHighlightRules;\nvar CStyleFoldMode = acequire(\"./folding/cstyle\").FoldMode;\nvar Range = acequire(\"../range\").Range;\n\nvar Mode = function() {\n    this.HighlightRules = FortranHighlightRules;\n    this.foldingRules = new CStyleFoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n\n    this.lineCommentStart = \"!\";\n\n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n\n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\n            return indent;\n        }\n\n        if (state == \"start\") {\n            var match = line.match(/^.*[\\{\\(\\[:]\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        }\n\n        return indent;\n    };\n\n    var outdents = {\n        \"return\": 1,\n        \"break\": 1,\n        \"continue\": 1,\n        \"RETURN\": 1,\n        \"BREAK\": 1,\n        \"CONTINUE\": 1\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        if (input !== \"\\r\\n\" && input !== \"\\r\" && input !== \"\\n\")\n            return false;\n\n        var tokens = this.getTokenizer().getLineTokens(line.trim(), state).tokens;\n\n        if (!tokens)\n            return false;\n        do {\n            var last = tokens.pop();\n        } while (last && (last.type == \"comment\" || (last.type == \"text\" && last.value.match(/^\\s+$/))));\n\n        if (!last)\n            return false;\n\n        return (last.type == \"keyword\" && outdents[last.value]);\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n\n        row += 1;\n        var indent = this.$getIndent(doc.getLine(row));\n        var tab = doc.getTabString();\n        if (indent.slice(-tab.length) == tab)\n            doc.remove(new Range(row, indent.length-tab.length, row, indent.length));\n    };\n\n    this.$id = \"ace/mode/fortran\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n\n\n\n// WEBPACK FOOTER //\n// /Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/fortran.js"],"sourceRoot":""}