{"version":3,"sources":["webpack:///vendor/brace/mode/scheme.chunk.js","webpack:////Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/scheme.js"],"names":["webpackJsonppanneau","326","module","exports","ace","define","acequire","oop","TextHighlightRules","SchemeHighlightRules","keywordMapper","this","createKeywordMapper","keyword.control","keyword.operator","constant.language","support.function","$rules","start","token","regex","next","qqstring","merge","inherits","Range","MatchingParensOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","getLine","match","column","length","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","TextMode","Mode","HighlightRules","$outdent","$behaviour","$defaultBehaviour","lineCommentStart","minorIndentFunctions","$toIndent","str","split","map","ch","exec","join","$calculateIndent","tab","isParen","baseIndent","delta","i","substring","iBefore","fn","indexOf","undefined","getNextLineIndent","state","$id"],"mappings":"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","file":"vendor/brace/mode/scheme.chunk.js","sourcesContent":["webpackJsonppanneau([132],{\n\n/***/ 326:\n/***/ (function(module, exports) {\n\nace.define(\"ace/mode/scheme_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextHighlightRules=acequire(\"./text_highlight_rules\").TextHighlightRules;var SchemeHighlightRules=function SchemeHighlightRules(){var keywordControl=\"case|do|let|loop|if|else|when\";var keywordOperator=\"eq?|eqv?|equal?|and|or|not|null?\";var constantLanguage=\"#t|#f\";var supportFunctions=\"cons|car|cdr|cond|lambda|lambda*|syntax-rules|format|set!|quote|eval|append|list|list?|member?|load\";var keywordMapper=this.createKeywordMapper({\"keyword.control\":keywordControl,\"keyword.operator\":keywordOperator,\"constant.language\":constantLanguage,\"support.function\":supportFunctions},\"identifier\",true);this.$rules={\"start\":[{token:\"comment\",regex:\";.*$\"},{\"token\":[\"storage.type.function-type.scheme\",\"text\",\"entity.name.function.scheme\"],\"regex\":\"(?:\\\\b(?:(define|define-syntax|define-macro))\\\\b)(\\\\s+)((?:\\\\w|\\\\-|\\\\!|\\\\?)*)\"},{\"token\":\"punctuation.definition.constant.character.scheme\",\"regex\":\"#:\\\\S+\"},{\"token\":[\"punctuation.definition.variable.scheme\",\"variable.other.global.scheme\",\"punctuation.definition.variable.scheme\"],\"regex\":\"(\\\\*)(\\\\S*)(\\\\*)\"},{\"token\":\"constant.numeric\",// hex\n\"regex\":\"#[xXoObB][0-9a-fA-F]+\"},{\"token\":\"constant.numeric\",// float\n\"regex\":\"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\"},{\"token\":keywordMapper,\"regex\":\"[a-zA-Z_#][a-zA-Z0-9_\\\\-\\\\?\\\\!\\\\*]*\"},{\"token\":\"string\",\"regex\":'\"(?=.)',\"next\":\"qqstring\"}],\"qqstring\":[{\"token\":\"constant.character.escape.scheme\",\"regex\":\"\\\\\\\\.\"},{\"token\":\"string\",\"regex\":'[^\"\\\\\\\\]+',\"merge\":true},{\"token\":\"string\",\"regex\":\"\\\\\\\\$\",\"next\":\"qqstring\",\"merge\":true},{\"token\":\"string\",\"regex\":'\"|$',\"next\":\"start\",\"merge\":true}]};};oop.inherits(SchemeHighlightRules,TextHighlightRules);exports.SchemeHighlightRules=SchemeHighlightRules;});ace.define(\"ace/mode/matching_parens_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"],function(acequire,exports,module){\"use strict\";var Range=acequire(\"../range\").Range;var MatchingParensOutdent=function MatchingParensOutdent(){};(function(){this.checkOutdent=function(line,input){if(!/^\\s+$/.test(line))return false;return /^\\s*\\)/.test(input);};this.autoOutdent=function(doc,row){var line=doc.getLine(row);var match=line.match(/^(\\s*\\))/);if(!match)return 0;var column=match[1].length;var openBracePos=doc.findMatchingBracket({row:row,column:column});if(!openBracePos||openBracePos.row==row)return 0;var indent=this.$getIndent(doc.getLine(openBracePos.row));doc.replace(new Range(row,0,row,column-1),indent);};this.$getIndent=function(line){var match=line.match(/^(\\s+)/);if(match){return match[1];}return\"\";};}).call(MatchingParensOutdent.prototype);exports.MatchingParensOutdent=MatchingParensOutdent;});ace.define(\"ace/mode/scheme\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/scheme_highlight_rules\",\"ace/mode/matching_parens_outdent\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextMode=acequire(\"./text\").Mode;var SchemeHighlightRules=acequire(\"./scheme_highlight_rules\").SchemeHighlightRules;var MatchingParensOutdent=acequire(\"./matching_parens_outdent\").MatchingParensOutdent;var Mode=function Mode(){this.HighlightRules=SchemeHighlightRules;this.$outdent=new MatchingParensOutdent();this.$behaviour=this.$defaultBehaviour;};oop.inherits(Mode,TextMode);(function(){this.lineCommentStart=\";\";this.minorIndentFunctions=[\"define\",\"lambda\",\"define-macro\",\"define-syntax\",\"syntax-rules\",\"define-record-type\",\"define-structure\"];this.$toIndent=function(str){return str.split('').map(function(ch){if(/\\s/.exec(ch)){return ch;}else{return' ';}}).join('');};this.$calculateIndent=function(line,tab){var baseIndent=this.$getIndent(line);var delta=0;var isParen,ch;for(var i=line.length-1;i>=0;i--){ch=line[i];if(ch==='('){delta--;isParen=true;}else if(ch==='('||ch==='['||ch==='{'){delta--;isParen=false;}else if(ch===')'||ch===']'||ch==='}'){delta++;}if(delta<0){break;}}if(delta<0&&isParen){i+=1;var iBefore=i;var fn='';while(true){ch=line[i];if(ch===' '||ch==='\\t'){if(this.minorIndentFunctions.indexOf(fn)!==-1){return this.$toIndent(line.substring(0,iBefore-1)+tab);}else{return this.$toIndent(line.substring(0,i+1));}}else if(ch===undefined){return this.$toIndent(line.substring(0,iBefore-1)+tab);}fn+=line[i];i++;}}else if(delta<0&&!isParen){return this.$toIndent(line.substring(0,i+1));}else if(delta>0){baseIndent=baseIndent.substring(0,baseIndent.length-tab.length);return baseIndent;}else{return baseIndent;}};this.getNextLineIndent=function(state,line,tab){return this.$calculateIndent(line,tab);};this.checkOutdent=function(state,line,input){return this.$outdent.checkOutdent(line,input);};this.autoOutdent=function(state,doc,row){this.$outdent.autoOutdent(doc,row);};this.$id=\"ace/mode/scheme\";}).call(Mode.prototype);exports.Mode=Mode;});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// vendor/brace/mode/scheme.chunk.js","ace.define(\"ace/mode/scheme_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar SchemeHighlightRules = function() {\n    var keywordControl = \"case|do|let|loop|if|else|when\";\n    var keywordOperator = \"eq?|eqv?|equal?|and|or|not|null?\";\n    var constantLanguage = \"#t|#f\";\n    var supportFunctions = \"cons|car|cdr|cond|lambda|lambda*|syntax-rules|format|set!|quote|eval|append|list|list?|member?|load\";\n\n    var keywordMapper = this.createKeywordMapper({\n        \"keyword.control\": keywordControl,\n        \"keyword.operator\": keywordOperator,\n        \"constant.language\": constantLanguage,\n        \"support.function\": supportFunctions\n    }, \"identifier\", true);\n\n    this.$rules = \n        {\n    \"start\": [\n        {\n            token : \"comment\",\n            regex : \";.*$\"\n        },\n        {\n            \"token\": [\"storage.type.function-type.scheme\", \"text\", \"entity.name.function.scheme\"],\n            \"regex\": \"(?:\\\\b(?:(define|define-syntax|define-macro))\\\\b)(\\\\s+)((?:\\\\w|\\\\-|\\\\!|\\\\?)*)\"\n        },\n        {\n            \"token\": \"punctuation.definition.constant.character.scheme\",\n            \"regex\": \"#:\\\\S+\"\n        },\n        {\n            \"token\": [\"punctuation.definition.variable.scheme\", \"variable.other.global.scheme\", \"punctuation.definition.variable.scheme\"],\n            \"regex\": \"(\\\\*)(\\\\S*)(\\\\*)\"\n        },\n        {\n            \"token\" : \"constant.numeric\", // hex\n            \"regex\" : \"#[xXoObB][0-9a-fA-F]+\"\n        }, \n        {\n            \"token\" : \"constant.numeric\", // float\n            \"regex\" : \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\"\n        },\n        {\n                \"token\" : keywordMapper,\n                \"regex\" : \"[a-zA-Z_#][a-zA-Z0-9_\\\\-\\\\?\\\\!\\\\*]*\"\n        },\n        {\n            \"token\" : \"string\",\n            \"regex\" : '\"(?=.)',\n            \"next\"  : \"qqstring\"\n        }\n    ],\n    \"qqstring\": [\n        {\n            \"token\": \"constant.character.escape.scheme\",\n            \"regex\": \"\\\\\\\\.\"\n        },\n        {\n            \"token\" : \"string\",\n            \"regex\" : '[^\"\\\\\\\\]+',\n            \"merge\" : true\n        }, {\n            \"token\" : \"string\",\n            \"regex\" : \"\\\\\\\\$\",\n            \"next\"  : \"qqstring\",\n            \"merge\" : true\n        }, {\n            \"token\" : \"string\",\n            \"regex\" : '\"|$',\n            \"next\"  : \"start\",\n            \"merge\" : true\n        }\n    ]\n}\n\n};\n\noop.inherits(SchemeHighlightRules, TextHighlightRules);\n\nexports.SchemeHighlightRules = SchemeHighlightRules;\n});\n\nace.define(\"ace/mode/matching_parens_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar Range = acequire(\"../range\").Range;\n\nvar MatchingParensOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\)/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\))/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        var match = line.match(/^(\\s+)/);\n        if (match) {\n            return match[1];\n        }\n\n        return \"\";\n    };\n\n}).call(MatchingParensOutdent.prototype);\n\nexports.MatchingParensOutdent = MatchingParensOutdent;\n});\n\nace.define(\"ace/mode/scheme\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/scheme_highlight_rules\",\"ace/mode/matching_parens_outdent\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar SchemeHighlightRules = acequire(\"./scheme_highlight_rules\").SchemeHighlightRules;\nvar MatchingParensOutdent = acequire(\"./matching_parens_outdent\").MatchingParensOutdent;\n\nvar Mode = function() {\n    this.HighlightRules = SchemeHighlightRules;\n\tthis.$outdent = new MatchingParensOutdent();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n       \n    this.lineCommentStart = \";\";\n    this.minorIndentFunctions = [\"define\", \"lambda\", \"define-macro\", \"define-syntax\", \"syntax-rules\", \"define-record-type\", \"define-structure\"];\n\n    this.$toIndent = function(str) {\n        return str.split('').map(function(ch) {\n            if (/\\s/.exec(ch)) {\n                return ch;\n            } else {\n                return ' ';\n            }\n        }).join('');\n    };\n\n    this.$calculateIndent = function(line, tab) {\n        var baseIndent = this.$getIndent(line);\n        var delta = 0;\n        var isParen, ch;\n        for (var i = line.length - 1; i >= 0; i--) {\n            ch = line[i];\n            if (ch === '(') {\n                delta--;\n                isParen = true;\n            } else if (ch === '(' || ch === '[' || ch === '{') {\n                delta--;\n                isParen = false;\n            } else if (ch === ')' || ch === ']' || ch === '}') {\n                delta++;\n            }\n            if (delta < 0) {\n                break;\n            }\n        }\n        if (delta < 0 && isParen) {\n            i += 1;\n            var iBefore = i;\n            var fn = '';\n            while (true) {\n                ch = line[i];\n                if (ch === ' ' || ch === '\\t') {\n                    if(this.minorIndentFunctions.indexOf(fn) !== -1) {\n                        return this.$toIndent(line.substring(0, iBefore - 1) + tab);\n                    } else {\n                        return this.$toIndent(line.substring(0, i + 1));\n                    }\n                } else if (ch === undefined) {\n                    return this.$toIndent(line.substring(0, iBefore - 1) + tab);\n                }\n                fn += line[i];\n                i++;\n            }\n        } else if(delta < 0 && !isParen) {\n            return this.$toIndent(line.substring(0, i+1));\n        } else if(delta > 0) {\n            baseIndent = baseIndent.substring(0, baseIndent.length - tab.length);\n            return baseIndent;\n        } else {\n            return baseIndent;\n        }\n    };\n\n    this.getNextLineIndent = function(state, line, tab) {\n        return this.$calculateIndent(line, tab);\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n    \n    this.$id = \"ace/mode/scheme\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n\n\n\n// WEBPACK FOOTER //\n// /Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/scheme.js"],"sourceRoot":""}