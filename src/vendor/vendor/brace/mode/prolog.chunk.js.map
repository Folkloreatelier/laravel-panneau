{"version":3,"sources":["webpack:///vendor/brace/mode/prolog.chunk.js","webpack:////Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/prolog.js"],"names":["webpackJsonppanneau","312","module","exports","ace","define","acequire","oop","TextHighlightRules","PrologHighlightRules","this","$rules","start","include","#atom","token","regex","#basic_elem","#basic_fact","#builtins","#comment","push","next","defaultToken","#constants","#directive","#expr","#fact","#list","#operators","#parameter","#rule","#statement","#string","#variable","normalizeRules","metaData","fileTypes","foldingStartMarker","foldingStopMarker","keyEquivalent","name","scopeName","inherits","Range","BaseFoldMode","FoldMode","commentRegex","RegExp","source","replace","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","match","i","index","openingBracketBlock","range","getCommentFoldRange","length","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","TextMode","Mode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","blockComment","$id"],"mappings":"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","file":"vendor/brace/mode/prolog.chunk.js","sourcesContent":["webpackJsonppanneau([143],{\n\n/***/ 312:\n/***/ (function(module, exports) {\n\nace.define(\"ace/mode/prolog_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextHighlightRules=acequire(\"./text_highlight_rules\").TextHighlightRules;var PrologHighlightRules=function PrologHighlightRules(){this.$rules={start:[{include:'#comment'},{include:'#basic_fact'},{include:'#rule'},{include:'#directive'},{include:'#fact'}],'#atom':[{token:'constant.other.atom.prolog',regex:'\\\\b[a-z][a-zA-Z0-9_]*\\\\b'},{token:'constant.numeric.prolog',regex:'-?\\\\d+(?:\\\\.\\\\d+)?'},{include:'#string'}],'#basic_elem':[{include:'#comment'},{include:'#statement'},{include:'#constants'},{include:'#operators'},{include:'#builtins'},{include:'#list'},{include:'#atom'},{include:'#variable'}],'#basic_fact':[{token:['entity.name.function.fact.basic.prolog','punctuation.end.fact.basic.prolog'],regex:'([a-z]\\\\w*)(\\\\.)'}],'#builtins':[{token:'support.function.builtin.prolog',regex:'\\\\b(?:abolish|abort|ancestors|arg|ascii|assert[az]|atom(?:ic)?|body|char|close|conc|concat|consult|define|definition|dynamic|dump|fail|file|free|free_proc|functor|getc|goal|halt|head|head|integer|length|listing|match_args|member|next_clause|nl|nonvar|nth|number|cvars|nvars|offset|op|print?|prompt|putc|quoted|ratom|read|redefine|rename|retract(?:all)?|see|seeing|seen|skip|spy|statistics|system|tab|tell|telling|term|time|told|univ|unlink_clause|unspy_predicate|var|write)\\\\b'}],'#comment':[{token:['punctuation.definition.comment.prolog','comment.line.percentage.prolog'],regex:'(%)(.*$)'},{token:'punctuation.definition.comment.prolog',regex:'/\\\\*',push:[{token:'punctuation.definition.comment.prolog',regex:'\\\\*/',next:'pop'},{defaultToken:'comment.block.prolog'}]}],'#constants':[{token:'constant.language.prolog',regex:'\\\\b(?:true|false|yes|no)\\\\b'}],'#directive':[{token:'keyword.operator.directive.prolog',regex:':-',push:[{token:'meta.directive.prolog',regex:'\\\\.',next:'pop'},{include:'#comment'},{include:'#statement'},{defaultToken:'meta.directive.prolog'}]}],'#expr':[{include:'#comments'},{token:'meta.expression.prolog',regex:'\\\\(',push:[{token:'meta.expression.prolog',regex:'\\\\)',next:'pop'},{include:'#expr'},{defaultToken:'meta.expression.prolog'}]},{token:'keyword.control.cutoff.prolog',regex:'!'},{token:'punctuation.control.and.prolog',regex:','},{token:'punctuation.control.or.prolog',regex:';'},{include:'#basic_elem'}],'#fact':[{token:['entity.name.function.fact.prolog','punctuation.begin.fact.parameters.prolog'],regex:'([a-z]\\\\w*)(\\\\()(?!.*:-)',push:[{token:['punctuation.end.fact.parameters.prolog','punctuation.end.fact.prolog'],regex:'(\\\\))(\\\\.?)',next:'pop'},{include:'#parameter'},{defaultToken:'meta.fact.prolog'}]}],'#list':[{token:'punctuation.begin.list.prolog',regex:'\\\\[(?=.*\\\\])',push:[{token:'punctuation.end.list.prolog',regex:'\\\\]',next:'pop'},{include:'#comment'},{token:'punctuation.separator.list.prolog',regex:','},{token:'punctuation.concat.list.prolog',regex:'\\\\|',push:[{token:'meta.list.concat.prolog',regex:'(?=\\\\s*\\\\])',next:'pop'},{include:'#basic_elem'},{defaultToken:'meta.list.concat.prolog'}]},{include:'#basic_elem'},{defaultToken:'meta.list.prolog'}]}],'#operators':[{token:'keyword.operator.prolog',regex:'\\\\\\\\\\\\+|\\\\bnot\\\\b|\\\\bis\\\\b|->|[><]|[><\\\\\\\\:=]?=|(?:=\\\\\\\\|\\\\\\\\=)='}],'#parameter':[{token:'variable.language.anonymous.prolog',regex:'\\\\b_\\\\b'},{token:'variable.parameter.prolog',regex:'\\\\b[A-Z_]\\\\w*\\\\b'},{token:'punctuation.separator.parameters.prolog',regex:','},{include:'#basic_elem'},{token:'text',regex:'[^\\\\s]'}],'#rule':[{token:'meta.rule.prolog',regex:'(?=[a-z]\\\\w*.*:-)',push:[{token:'punctuation.rule.end.prolog',regex:'\\\\.',next:'pop'},{token:'meta.rule.signature.prolog',regex:'(?=[a-z]\\\\w*.*:-)',push:[{token:'meta.rule.signature.prolog',regex:'(?=:-)',next:'pop'},{token:'entity.name.function.rule.prolog',regex:'[a-z]\\\\w*(?=\\\\(|\\\\s*:-)'},{token:'punctuation.rule.parameters.begin.prolog',regex:'\\\\(',push:[{token:'punctuation.rule.parameters.end.prolog',regex:'\\\\)',next:'pop'},{include:'#parameter'},{defaultToken:'meta.rule.parameters.prolog'}]},{defaultToken:'meta.rule.signature.prolog'}]},{token:'keyword.operator.definition.prolog',regex:':-',push:[{token:'meta.rule.definition.prolog',regex:'(?=\\\\.)',next:'pop'},{include:'#comment'},{include:'#expr'},{defaultToken:'meta.rule.definition.prolog'}]},{defaultToken:'meta.rule.prolog'}]}],'#statement':[{token:'meta.statement.prolog',regex:'(?=[a-z]\\\\w*\\\\()',push:[{token:'punctuation.end.statement.parameters.prolog',regex:'\\\\)',next:'pop'},{include:'#builtins'},{include:'#atom'},{token:'punctuation.begin.statement.parameters.prolog',regex:'\\\\(',push:[{token:'meta.statement.parameters.prolog',regex:'(?=\\\\))',next:'pop'},{token:'punctuation.separator.statement.prolog',regex:','},{include:'#basic_elem'},{defaultToken:'meta.statement.parameters.prolog'}]},{defaultToken:'meta.statement.prolog'}]}],'#string':[{token:'punctuation.definition.string.begin.prolog',regex:'\\'',push:[{token:'punctuation.definition.string.end.prolog',regex:'\\'',next:'pop'},{token:'constant.character.escape.prolog',regex:'\\\\\\\\.'},{token:'constant.character.escape.quote.prolog',regex:'\\'\\''},{defaultToken:'string.quoted.single.prolog'}]}],'#variable':[{token:'variable.language.anonymous.prolog',regex:'\\\\b_\\\\b'},{token:'variable.other.prolog',regex:'\\\\b[A-Z_][a-zA-Z0-9_]*\\\\b'}]};this.normalizeRules();};PrologHighlightRules.metaData={fileTypes:['plg','prolog'],foldingStartMarker:'(%\\\\s*region \\\\w*)|([a-z]\\\\w*.*:- ?)',foldingStopMarker:'(%\\\\s*end(\\\\s*region)?)|(?=\\\\.)',keyEquivalent:'^~P',name:'Prolog',scopeName:'source.prolog'};oop.inherits(PrologHighlightRules,TextHighlightRules);exports.PrologHighlightRules=PrologHighlightRules;});ace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../../lib/oop\");var Range=acequire(\"../../range\").Range;var BaseFoldMode=acequire(\"./fold_mode\").FoldMode;var FoldMode=exports.FoldMode=function(commentRegex){if(commentRegex){this.foldingStartMarker=new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/,\"|\"+commentRegex.start));this.foldingStopMarker=new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/,\"|\"+commentRegex.end));}};oop.inherits(FoldMode,BaseFoldMode);(function(){this.foldingStartMarker=/(\\{|\\[)[^\\}\\]]*$|^\\s*(\\/\\*)/;this.foldingStopMarker=/^[^\\[\\{]*(\\}|\\])|^[\\s\\*]*(\\*\\/)/;this.singleLineBlockCommentRe=/^\\s*(\\/\\*).*\\*\\/\\s*$/;this.tripleStarBlockCommentRe=/^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;this.startRegionRe=/^\\s*(\\/\\*|\\/\\/)#?region\\b/;this._getFoldWidgetBase=this.getFoldWidget;this.getFoldWidget=function(session,foldStyle,row){var line=session.getLine(row);if(this.singleLineBlockCommentRe.test(line)){if(!this.startRegionRe.test(line)&&!this.tripleStarBlockCommentRe.test(line))return\"\";}var fw=this._getFoldWidgetBase(session,foldStyle,row);if(!fw&&this.startRegionRe.test(line))return\"start\";// lineCommentRegionStart\nreturn fw;};this.getFoldWidgetRange=function(session,foldStyle,row,forceMultiline){var line=session.getLine(row);if(this.startRegionRe.test(line))return this.getCommentRegionBlock(session,line,row);var match=line.match(this.foldingStartMarker);if(match){var i=match.index;if(match[1])return this.openingBracketBlock(session,match[1],row,i);var range=session.getCommentFoldRange(row,i+match[0].length,1);if(range&&!range.isMultiLine()){if(forceMultiline){range=this.getSectionRange(session,row);}else if(foldStyle!=\"all\")range=null;}return range;}if(foldStyle===\"markbegin\")return;var match=line.match(this.foldingStopMarker);if(match){var i=match.index+match[0].length;if(match[1])return this.closingBracketBlock(session,match[1],row,i);return session.getCommentFoldRange(row,i,-1);}};this.getSectionRange=function(session,row){var line=session.getLine(row);var startIndent=line.search(/\\S/);var startRow=row;var startColumn=line.length;row=row+1;var endRow=row;var maxRow=session.getLength();while(++row<maxRow){line=session.getLine(row);var indent=line.search(/\\S/);if(indent===-1)continue;if(startIndent>indent)break;var subRange=this.getFoldWidgetRange(session,\"all\",row);if(subRange){if(subRange.start.row<=startRow){break;}else if(subRange.isMultiLine()){row=subRange.end.row;}else if(startIndent==indent){break;}}endRow=row;}return new Range(startRow,startColumn,endRow,session.getLine(endRow).length);};this.getCommentRegionBlock=function(session,line,row){var startColumn=line.search(/\\s*$/);var maxRow=session.getLength();var startRow=row;var re=/^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;var depth=1;while(++row<maxRow){line=session.getLine(row);var m=re.exec(line);if(!m)continue;if(m[1])depth--;else depth++;if(!depth)break;}var endRow=row;if(endRow>startRow){return new Range(startRow,startColumn,endRow,line.length);}};}).call(FoldMode.prototype);});ace.define(\"ace/mode/prolog\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/prolog_highlight_rules\",\"ace/mode/folding/cstyle\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextMode=acequire(\"./text\").Mode;var PrologHighlightRules=acequire(\"./prolog_highlight_rules\").PrologHighlightRules;var FoldMode=acequire(\"./folding/cstyle\").FoldMode;var Mode=function Mode(){this.HighlightRules=PrologHighlightRules;this.foldingRules=new FoldMode();this.$behaviour=this.$defaultBehaviour;};oop.inherits(Mode,TextMode);(function(){this.lineCommentStart=\"%\";this.blockComment={start:\"/*\",end:\"*/\"};this.$id=\"ace/mode/prolog\";}).call(Mode.prototype);exports.Mode=Mode;});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// vendor/brace/mode/prolog.chunk.js","ace.define(\"ace/mode/prolog_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar PrologHighlightRules = function() {\n\n    this.$rules = { start: \n       [ { include: '#comment' },\n         { include: '#basic_fact' },\n         { include: '#rule' },\n         { include: '#directive' },\n         { include: '#fact' } ],\n      '#atom': \n       [ { token: 'constant.other.atom.prolog',\n           regex: '\\\\b[a-z][a-zA-Z0-9_]*\\\\b' },\n         { token: 'constant.numeric.prolog',\n           regex: '-?\\\\d+(?:\\\\.\\\\d+)?' },\n         { include: '#string' } ],\n      '#basic_elem': \n       [ { include: '#comment' },\n         { include: '#statement' },\n         { include: '#constants' },\n         { include: '#operators' },\n         { include: '#builtins' },\n         { include: '#list' },\n         { include: '#atom' },\n         { include: '#variable' } ],\n      '#basic_fact': \n       [ { token: \n            [ 'entity.name.function.fact.basic.prolog',\n              'punctuation.end.fact.basic.prolog' ],\n           regex: '([a-z]\\\\w*)(\\\\.)' } ],\n      '#builtins': \n       [ { token: 'support.function.builtin.prolog',\n           regex: '\\\\b(?:abolish|abort|ancestors|arg|ascii|assert[az]|atom(?:ic)?|body|char|close|conc|concat|consult|define|definition|dynamic|dump|fail|file|free|free_proc|functor|getc|goal|halt|head|head|integer|length|listing|match_args|member|next_clause|nl|nonvar|nth|number|cvars|nvars|offset|op|print?|prompt|putc|quoted|ratom|read|redefine|rename|retract(?:all)?|see|seeing|seen|skip|spy|statistics|system|tab|tell|telling|term|time|told|univ|unlink_clause|unspy_predicate|var|write)\\\\b' } ],\n      '#comment': \n       [ { token: \n            [ 'punctuation.definition.comment.prolog',\n              'comment.line.percentage.prolog' ],\n           regex: '(%)(.*$)' },\n         { token: 'punctuation.definition.comment.prolog',\n           regex: '/\\\\*',\n           push: \n            [ { token: 'punctuation.definition.comment.prolog',\n                regex: '\\\\*/',\n                next: 'pop' },\n              { defaultToken: 'comment.block.prolog' } ] } ],\n      '#constants': \n       [ { token: 'constant.language.prolog',\n           regex: '\\\\b(?:true|false|yes|no)\\\\b' } ],\n      '#directive': \n       [ { token: 'keyword.operator.directive.prolog',\n           regex: ':-',\n           push: \n            [ { token: 'meta.directive.prolog', regex: '\\\\.', next: 'pop' },\n              { include: '#comment' },\n              { include: '#statement' },\n              { defaultToken: 'meta.directive.prolog' } ] } ],\n      '#expr': \n       [ { include: '#comments' },\n         { token: 'meta.expression.prolog',\n           regex: '\\\\(',\n           push: \n            [ { token: 'meta.expression.prolog', regex: '\\\\)', next: 'pop' },\n              { include: '#expr' },\n              { defaultToken: 'meta.expression.prolog' } ] },\n         { token: 'keyword.control.cutoff.prolog', regex: '!' },\n         { token: 'punctuation.control.and.prolog', regex: ',' },\n         { token: 'punctuation.control.or.prolog', regex: ';' },\n         { include: '#basic_elem' } ],\n      '#fact': \n       [ { token: \n            [ 'entity.name.function.fact.prolog',\n              'punctuation.begin.fact.parameters.prolog' ],\n           regex: '([a-z]\\\\w*)(\\\\()(?!.*:-)',\n           push: \n            [ { token: \n                 [ 'punctuation.end.fact.parameters.prolog',\n                   'punctuation.end.fact.prolog' ],\n                regex: '(\\\\))(\\\\.?)',\n                next: 'pop' },\n              { include: '#parameter' },\n              { defaultToken: 'meta.fact.prolog' } ] } ],\n      '#list': \n       [ { token: 'punctuation.begin.list.prolog',\n           regex: '\\\\[(?=.*\\\\])',\n           push: \n            [ { token: 'punctuation.end.list.prolog',\n                regex: '\\\\]',\n                next: 'pop' },\n              { include: '#comment' },\n              { token: 'punctuation.separator.list.prolog', regex: ',' },\n              { token: 'punctuation.concat.list.prolog',\n                regex: '\\\\|',\n                push: \n                 [ { token: 'meta.list.concat.prolog',\n                     regex: '(?=\\\\s*\\\\])',\n                     next: 'pop' },\n                   { include: '#basic_elem' },\n                   { defaultToken: 'meta.list.concat.prolog' } ] },\n              { include: '#basic_elem' },\n              { defaultToken: 'meta.list.prolog' } ] } ],\n      '#operators': \n       [ { token: 'keyword.operator.prolog',\n           regex: '\\\\\\\\\\\\+|\\\\bnot\\\\b|\\\\bis\\\\b|->|[><]|[><\\\\\\\\:=]?=|(?:=\\\\\\\\|\\\\\\\\=)=' } ],\n      '#parameter': \n       [ { token: 'variable.language.anonymous.prolog',\n           regex: '\\\\b_\\\\b' },\n         { token: 'variable.parameter.prolog',\n           regex: '\\\\b[A-Z_]\\\\w*\\\\b' },\n         { token: 'punctuation.separator.parameters.prolog', regex: ',' },\n         { include: '#basic_elem' },\n         { token: 'text', regex: '[^\\\\s]' } ],\n      '#rule': \n       [ { token: 'meta.rule.prolog',\n           regex: '(?=[a-z]\\\\w*.*:-)',\n           push: \n            [ { token: 'punctuation.rule.end.prolog',\n                regex: '\\\\.',\n                next: 'pop' },\n              { token: 'meta.rule.signature.prolog',\n                regex: '(?=[a-z]\\\\w*.*:-)',\n                push: \n                 [ { token: 'meta.rule.signature.prolog',\n                     regex: '(?=:-)',\n                     next: 'pop' },\n                   { token: 'entity.name.function.rule.prolog',\n                     regex: '[a-z]\\\\w*(?=\\\\(|\\\\s*:-)' },\n                   { token: 'punctuation.rule.parameters.begin.prolog',\n                     regex: '\\\\(',\n                     push: \n                      [ { token: 'punctuation.rule.parameters.end.prolog',\n                          regex: '\\\\)',\n                          next: 'pop' },\n                        { include: '#parameter' },\n                        { defaultToken: 'meta.rule.parameters.prolog' } ] },\n                   { defaultToken: 'meta.rule.signature.prolog' } ] },\n              { token: 'keyword.operator.definition.prolog',\n                regex: ':-',\n                push: \n                 [ { token: 'meta.rule.definition.prolog',\n                     regex: '(?=\\\\.)',\n                     next: 'pop' },\n                   { include: '#comment' },\n                   { include: '#expr' },\n                   { defaultToken: 'meta.rule.definition.prolog' } ] },\n              { defaultToken: 'meta.rule.prolog' } ] } ],\n      '#statement': \n       [ { token: 'meta.statement.prolog',\n           regex: '(?=[a-z]\\\\w*\\\\()',\n           push: \n            [ { token: 'punctuation.end.statement.parameters.prolog',\n                regex: '\\\\)',\n                next: 'pop' },\n              { include: '#builtins' },\n              { include: '#atom' },\n              { token: 'punctuation.begin.statement.parameters.prolog',\n                regex: '\\\\(',\n                push: \n                 [ { token: 'meta.statement.parameters.prolog',\n                     regex: '(?=\\\\))',\n                     next: 'pop' },\n                   { token: 'punctuation.separator.statement.prolog', regex: ',' },\n                   { include: '#basic_elem' },\n                   { defaultToken: 'meta.statement.parameters.prolog' } ] },\n              { defaultToken: 'meta.statement.prolog' } ] } ],\n      '#string': \n       [ { token: 'punctuation.definition.string.begin.prolog',\n           regex: '\\'',\n           push: \n            [ { token: 'punctuation.definition.string.end.prolog',\n                regex: '\\'',\n                next: 'pop' },\n              { token: 'constant.character.escape.prolog', regex: '\\\\\\\\.' },\n              { token: 'constant.character.escape.quote.prolog',\n                regex: '\\'\\'' },\n              { defaultToken: 'string.quoted.single.prolog' } ] } ],\n      '#variable': \n       [ { token: 'variable.language.anonymous.prolog',\n           regex: '\\\\b_\\\\b' },\n         { token: 'variable.other.prolog',\n           regex: '\\\\b[A-Z_][a-zA-Z0-9_]*\\\\b' } ] }\n    \n    this.normalizeRules();\n};\n\nPrologHighlightRules.metaData = { fileTypes: [ 'plg', 'prolog' ],\n      foldingStartMarker: '(%\\\\s*region \\\\w*)|([a-z]\\\\w*.*:- ?)',\n      foldingStopMarker: '(%\\\\s*end(\\\\s*region)?)|(?=\\\\.)',\n      keyEquivalent: '^~P',\n      name: 'Prolog',\n      scopeName: 'source.prolog' }\n\n\noop.inherits(PrologHighlightRules, TextHighlightRules);\n\nexports.PrologHighlightRules = PrologHighlightRules;\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar Range = acequire(\"../../range\").Range;\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    \n    this.foldingStartMarker = /(\\{|\\[)[^\\}\\]]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{]*(\\}|\\])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n    \n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n    \n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n    \n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n    \n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        \n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        \n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n                \n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            \n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n            \n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    \n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            \n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        \n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/prolog\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/prolog_highlight_rules\",\"ace/mode/folding/cstyle\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar PrologHighlightRules = acequire(\"./prolog_highlight_rules\").PrologHighlightRules;\nvar FoldMode = acequire(\"./folding/cstyle\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = PrologHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.lineCommentStart = \"%\";\n    this.blockComment = {start: \"/*\", end: \"*/\"};\n    this.$id = \"ace/mode/prolog\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n\n\n\n// WEBPACK FOOTER //\n// /Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/prolog.js"],"sourceRoot":""}