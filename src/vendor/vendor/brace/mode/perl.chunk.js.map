{"version":3,"sources":["webpack:///vendor/brace/mode/perl.chunk.js","webpack:////Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/perl.js"],"names":["webpackJsonppanneau","306","module","exports","ace","define","acequire","oop","TextHighlightRules","PerlHighlightRules","keywordMapper","this","createKeywordMapper","keyword","constant.language","support.function","$rules","start","token","regex","next","qqstring","qstring","block_comment","defaultToken","inherits","Range","MatchingBraceOutdent","checkOutdent","line","input","test","autoOutdent","doc","row","getLine","match","column","length","openBracePos","findMatchingBracket","indent","$getIndent","replace","call","prototype","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","foldingStopMarker","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","i","index","openingBracketBlock","range","getCommentFoldRange","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","subRange","re","depth","m","exec","TextMode","Mode","CStyleFoldMode","HighlightRules","$outdent","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","blockComment","lineStartOnly","getNextLineIndent","state","tab","tokenizedLine","getTokenizer","getLineTokens","tokens","type","$id"],"mappings":"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","file":"vendor/brace/mode/perl.chunk.js","sourcesContent":["webpackJsonppanneau([148],{\n\n/***/ 306:\n/***/ (function(module, exports) {\n\nace.define(\"ace/mode/perl_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextHighlightRules=acequire(\"./text_highlight_rules\").TextHighlightRules;var PerlHighlightRules=function PerlHighlightRules(){var keywords=\"base|constant|continue|else|elsif|for|foreach|format|goto|if|last|local|my|next|\"+\"no|package|parent|redo|acequire|scalar|sub|unless|until|while|use|vars\";var buildinConstants=\"ARGV|ENV|INC|SIG\";var builtinFunctions=\"getprotobynumber|getprotobyname|getservbyname|gethostbyaddr|\"+\"gethostbyname|getservbyport|getnetbyaddr|getnetbyname|getsockname|\"+\"getpeername|setpriority|getprotoent|setprotoent|getpriority|\"+\"endprotoent|getservent|setservent|endservent|sethostent|socketpair|\"+\"getsockopt|gethostent|endhostent|setsockopt|setnetent|quotemeta|\"+\"localtime|prototype|getnetent|endnetent|rewinddir|wantarray|getpwuid|\"+\"closedir|getlogin|readlink|endgrent|getgrgid|getgrnam|shmwrite|\"+\"shutdown|readline|endpwent|setgrent|readpipe|formline|truncate|\"+\"dbmclose|syswrite|setpwent|getpwnam|getgrent|getpwent|ucfirst|sysread|\"+\"setpgrp|shmread|sysseek|sysopen|telldir|defined|opendir|connect|\"+\"lcfirst|getppid|binmode|syscall|sprintf|getpgrp|readdir|seekdir|\"+\"waitpid|reverse|unshift|symlink|dbmopen|semget|msgrcv|rename|listen|\"+\"chroot|msgsnd|shmctl|accept|unpack|exists|fileno|shmget|system|\"+\"unlink|printf|gmtime|msgctl|semctl|values|rindex|substr|splice|\"+\"length|msgget|select|socket|return|caller|delete|alarm|ioctl|index|\"+\"undef|lstat|times|srand|chown|fcntl|close|write|umask|rmdir|study|\"+\"sleep|chomp|untie|print|utime|mkdir|atan2|split|crypt|flock|chmod|\"+\"BEGIN|bless|chdir|semop|shift|reset|link|stat|chop|grep|fork|dump|\"+\"join|open|tell|pipe|exit|glob|warn|each|bind|sort|pack|eval|push|\"+\"keys|getc|kill|seek|sqrt|send|wait|rand|tied|read|time|exec|recv|\"+\"eof|chr|int|ord|exp|pos|pop|sin|log|abs|oct|hex|tie|cos|vec|END|ref|\"+\"map|die|uc|lc|do\";var keywordMapper=this.createKeywordMapper({\"keyword\":keywords,\"constant.language\":buildinConstants,\"support.function\":builtinFunctions},\"identifier\");this.$rules={\"start\":[{token:\"comment.doc\",regex:\"^=(?:begin|item)\\\\b\",next:\"block_comment\"},{token:\"string.regexp\",regex:\"[/](?:(?:\\\\[(?:\\\\\\\\]|[^\\\\]])+\\\\])|(?:\\\\\\\\/|[^\\\\]/]))*[/]\\\\w*\\\\s*(?=[).,;]|$)\"},{token:\"string\",// single line\nregex:'[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'},{token:\"string\",// multi line string start\nregex:'[\"].*\\\\\\\\$',next:\"qqstring\"},{token:\"string\",// single line\nregex:\"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"},{token:\"string\",// multi line string start\nregex:\"['].*\\\\\\\\$\",next:\"qstring\"},{token:\"constant.numeric\",// hex\nregex:\"0x[0-9a-fA-F]+\\\\b\"},{token:\"constant.numeric\",// float\nregex:\"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"},{token:keywordMapper,regex:\"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"},{token:\"keyword.operator\",regex:\"%#|\\\\$#|\\\\.\\\\.\\\\.|\\\\|\\\\|=|>>=|<<=|<=>|&&=|=>|!~|\\\\^=|&=|\\\\|=|\\\\.=|x=|%=|\\\\/=|\\\\*=|\\\\-=|\\\\+=|=~|\\\\*\\\\*|\\\\-\\\\-|\\\\.\\\\.|\\\\|\\\\||&&|\\\\+\\\\+|\\\\->|!=|==|>=|<=|>>|<<|,|=|\\\\?\\\\:|\\\\^|\\\\||x|%|\\\\/|\\\\*|<|&|\\\\\\\\|~|!|>|\\\\.|\\\\-|\\\\+|\\\\-C|\\\\-b|\\\\-S|\\\\-u|\\\\-t|\\\\-p|\\\\-l|\\\\-d|\\\\-f|\\\\-g|\\\\-s|\\\\-z|\\\\-k|\\\\-e|\\\\-O|\\\\-T|\\\\-B|\\\\-M|\\\\-A|\\\\-X|\\\\-W|\\\\-c|\\\\-R|\\\\-o|\\\\-x|\\\\-w|\\\\-r|\\\\b(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|xor)\"},{token:\"comment\",regex:\"#.*$\"},{token:\"lparen\",regex:\"[[({]\"},{token:\"rparen\",regex:\"[\\\\])}]\"},{token:\"text\",regex:\"\\\\s+\"}],\"qqstring\":[{token:\"string\",regex:'(?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?\"',next:\"start\"},{token:\"string\",regex:'.+'}],\"qstring\":[{token:\"string\",regex:\"(?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?'\",next:\"start\"},{token:\"string\",regex:'.+'}],\"block_comment\":[{token:\"comment.doc\",regex:\"^=cut\\\\b\",next:\"start\"},{defaultToken:\"comment.doc\"}]};};oop.inherits(PerlHighlightRules,TextHighlightRules);exports.PerlHighlightRules=PerlHighlightRules;});ace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"],function(acequire,exports,module){\"use strict\";var Range=acequire(\"../range\").Range;var MatchingBraceOutdent=function MatchingBraceOutdent(){};(function(){this.checkOutdent=function(line,input){if(!/^\\s+$/.test(line))return false;return /^\\s*\\}/.test(input);};this.autoOutdent=function(doc,row){var line=doc.getLine(row);var match=line.match(/^(\\s*\\})/);if(!match)return 0;var column=match[1].length;var openBracePos=doc.findMatchingBracket({row:row,column:column});if(!openBracePos||openBracePos.row==row)return 0;var indent=this.$getIndent(doc.getLine(openBracePos.row));doc.replace(new Range(row,0,row,column-1),indent);};this.$getIndent=function(line){return line.match(/^\\s*/)[0];};}).call(MatchingBraceOutdent.prototype);exports.MatchingBraceOutdent=MatchingBraceOutdent;});ace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../../lib/oop\");var Range=acequire(\"../../range\").Range;var BaseFoldMode=acequire(\"./fold_mode\").FoldMode;var FoldMode=exports.FoldMode=function(commentRegex){if(commentRegex){this.foldingStartMarker=new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/,\"|\"+commentRegex.start));this.foldingStopMarker=new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/,\"|\"+commentRegex.end));}};oop.inherits(FoldMode,BaseFoldMode);(function(){this.foldingStartMarker=/(\\{|\\[)[^\\}\\]]*$|^\\s*(\\/\\*)/;this.foldingStopMarker=/^[^\\[\\{]*(\\}|\\])|^[\\s\\*]*(\\*\\/)/;this.singleLineBlockCommentRe=/^\\s*(\\/\\*).*\\*\\/\\s*$/;this.tripleStarBlockCommentRe=/^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;this.startRegionRe=/^\\s*(\\/\\*|\\/\\/)#?region\\b/;this._getFoldWidgetBase=this.getFoldWidget;this.getFoldWidget=function(session,foldStyle,row){var line=session.getLine(row);if(this.singleLineBlockCommentRe.test(line)){if(!this.startRegionRe.test(line)&&!this.tripleStarBlockCommentRe.test(line))return\"\";}var fw=this._getFoldWidgetBase(session,foldStyle,row);if(!fw&&this.startRegionRe.test(line))return\"start\";// lineCommentRegionStart\nreturn fw;};this.getFoldWidgetRange=function(session,foldStyle,row,forceMultiline){var line=session.getLine(row);if(this.startRegionRe.test(line))return this.getCommentRegionBlock(session,line,row);var match=line.match(this.foldingStartMarker);if(match){var i=match.index;if(match[1])return this.openingBracketBlock(session,match[1],row,i);var range=session.getCommentFoldRange(row,i+match[0].length,1);if(range&&!range.isMultiLine()){if(forceMultiline){range=this.getSectionRange(session,row);}else if(foldStyle!=\"all\")range=null;}return range;}if(foldStyle===\"markbegin\")return;var match=line.match(this.foldingStopMarker);if(match){var i=match.index+match[0].length;if(match[1])return this.closingBracketBlock(session,match[1],row,i);return session.getCommentFoldRange(row,i,-1);}};this.getSectionRange=function(session,row){var line=session.getLine(row);var startIndent=line.search(/\\S/);var startRow=row;var startColumn=line.length;row=row+1;var endRow=row;var maxRow=session.getLength();while(++row<maxRow){line=session.getLine(row);var indent=line.search(/\\S/);if(indent===-1)continue;if(startIndent>indent)break;var subRange=this.getFoldWidgetRange(session,\"all\",row);if(subRange){if(subRange.start.row<=startRow){break;}else if(subRange.isMultiLine()){row=subRange.end.row;}else if(startIndent==indent){break;}}endRow=row;}return new Range(startRow,startColumn,endRow,session.getLine(endRow).length);};this.getCommentRegionBlock=function(session,line,row){var startColumn=line.search(/\\s*$/);var maxRow=session.getLength();var startRow=row;var re=/^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;var depth=1;while(++row<maxRow){line=session.getLine(row);var m=re.exec(line);if(!m)continue;if(m[1])depth--;else depth++;if(!depth)break;}var endRow=row;if(endRow>startRow){return new Range(startRow,startColumn,endRow,line.length);}};}).call(FoldMode.prototype);});ace.define(\"ace/mode/perl\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/perl_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/mode/folding/cstyle\"],function(acequire,exports,module){\"use strict\";var oop=acequire(\"../lib/oop\");var TextMode=acequire(\"./text\").Mode;var PerlHighlightRules=acequire(\"./perl_highlight_rules\").PerlHighlightRules;var MatchingBraceOutdent=acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;var CStyleFoldMode=acequire(\"./folding/cstyle\").FoldMode;var Mode=function Mode(){this.HighlightRules=PerlHighlightRules;this.$outdent=new MatchingBraceOutdent();this.foldingRules=new CStyleFoldMode({start:\"^=(begin|item)\\\\b\",end:\"^=(cut)\\\\b\"});this.$behaviour=this.$defaultBehaviour;};oop.inherits(Mode,TextMode);(function(){this.lineCommentStart=\"#\";this.blockComment=[{start:\"=begin\",end:\"=cut\",lineStartOnly:true},{start:\"=item\",end:\"=cut\",lineStartOnly:true}];this.getNextLineIndent=function(state,line,tab){var indent=this.$getIndent(line);var tokenizedLine=this.getTokenizer().getLineTokens(line,state);var tokens=tokenizedLine.tokens;if(tokens.length&&tokens[tokens.length-1].type==\"comment\"){return indent;}if(state==\"start\"){var match=line.match(/^.*[\\{\\(\\[:]\\s*$/);if(match){indent+=tab;}}return indent;};this.checkOutdent=function(state,line,input){return this.$outdent.checkOutdent(line,input);};this.autoOutdent=function(state,doc,row){this.$outdent.autoOutdent(doc,row);};this.$id=\"ace/mode/perl\";}).call(Mode.prototype);exports.Mode=Mode;});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// vendor/brace/mode/perl.chunk.js","ace.define(\"ace/mode/perl_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar PerlHighlightRules = function() {\n\n    var keywords = (\n        \"base|constant|continue|else|elsif|for|foreach|format|goto|if|last|local|my|next|\" +\n         \"no|package|parent|redo|acequire|scalar|sub|unless|until|while|use|vars\"\n    );\n\n    var buildinConstants = (\"ARGV|ENV|INC|SIG\");\n\n    var builtinFunctions = (\n        \"getprotobynumber|getprotobyname|getservbyname|gethostbyaddr|\" +\n         \"gethostbyname|getservbyport|getnetbyaddr|getnetbyname|getsockname|\" +\n         \"getpeername|setpriority|getprotoent|setprotoent|getpriority|\" +\n         \"endprotoent|getservent|setservent|endservent|sethostent|socketpair|\" +\n         \"getsockopt|gethostent|endhostent|setsockopt|setnetent|quotemeta|\" +\n         \"localtime|prototype|getnetent|endnetent|rewinddir|wantarray|getpwuid|\" +\n         \"closedir|getlogin|readlink|endgrent|getgrgid|getgrnam|shmwrite|\" +\n         \"shutdown|readline|endpwent|setgrent|readpipe|formline|truncate|\" +\n         \"dbmclose|syswrite|setpwent|getpwnam|getgrent|getpwent|ucfirst|sysread|\" +\n         \"setpgrp|shmread|sysseek|sysopen|telldir|defined|opendir|connect|\" +\n         \"lcfirst|getppid|binmode|syscall|sprintf|getpgrp|readdir|seekdir|\" +\n         \"waitpid|reverse|unshift|symlink|dbmopen|semget|msgrcv|rename|listen|\" +\n         \"chroot|msgsnd|shmctl|accept|unpack|exists|fileno|shmget|system|\" +\n         \"unlink|printf|gmtime|msgctl|semctl|values|rindex|substr|splice|\" +\n         \"length|msgget|select|socket|return|caller|delete|alarm|ioctl|index|\" +\n         \"undef|lstat|times|srand|chown|fcntl|close|write|umask|rmdir|study|\" +\n         \"sleep|chomp|untie|print|utime|mkdir|atan2|split|crypt|flock|chmod|\" +\n         \"BEGIN|bless|chdir|semop|shift|reset|link|stat|chop|grep|fork|dump|\" +\n         \"join|open|tell|pipe|exit|glob|warn|each|bind|sort|pack|eval|push|\" +\n         \"keys|getc|kill|seek|sqrt|send|wait|rand|tied|read|time|exec|recv|\" +\n         \"eof|chr|int|ord|exp|pos|pop|sin|log|abs|oct|hex|tie|cos|vec|END|ref|\" +\n         \"map|die|uc|lc|do\"\n    );\n\n    var keywordMapper = this.createKeywordMapper({\n        \"keyword\": keywords,\n        \"constant.language\": buildinConstants,\n        \"support.function\": builtinFunctions\n    }, \"identifier\");\n\n    this.$rules = {\n        \"start\" : [\n            {\n                token : \"comment.doc\",\n                regex : \"^=(?:begin|item)\\\\b\",\n                next : \"block_comment\"\n            }, {\n                token : \"string.regexp\",\n                regex : \"[/](?:(?:\\\\[(?:\\\\\\\\]|[^\\\\]])+\\\\])|(?:\\\\\\\\/|[^\\\\]/]))*[/]\\\\w*\\\\s*(?=[).,;]|$)\"\n            }, {\n                token : \"string\", // single line\n                regex : '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n            }, {\n                token : \"string\", // multi line string start\n                regex : '[\"].*\\\\\\\\$',\n                next : \"qqstring\"\n            }, {\n                token : \"string\", // single line\n                regex : \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n            }, {\n                token : \"string\", // multi line string start\n                regex : \"['].*\\\\\\\\$\",\n                next : \"qstring\"\n            }, {\n                token : \"constant.numeric\", // hex\n                regex : \"0x[0-9a-fA-F]+\\\\b\"\n            }, {\n                token : \"constant.numeric\", // float\n                regex : \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n            }, {\n                token : keywordMapper,\n                regex : \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n            }, {\n                token : \"keyword.operator\",\n                regex : \"%#|\\\\$#|\\\\.\\\\.\\\\.|\\\\|\\\\|=|>>=|<<=|<=>|&&=|=>|!~|\\\\^=|&=|\\\\|=|\\\\.=|x=|%=|\\\\/=|\\\\*=|\\\\-=|\\\\+=|=~|\\\\*\\\\*|\\\\-\\\\-|\\\\.\\\\.|\\\\|\\\\||&&|\\\\+\\\\+|\\\\->|!=|==|>=|<=|>>|<<|,|=|\\\\?\\\\:|\\\\^|\\\\||x|%|\\\\/|\\\\*|<|&|\\\\\\\\|~|!|>|\\\\.|\\\\-|\\\\+|\\\\-C|\\\\-b|\\\\-S|\\\\-u|\\\\-t|\\\\-p|\\\\-l|\\\\-d|\\\\-f|\\\\-g|\\\\-s|\\\\-z|\\\\-k|\\\\-e|\\\\-O|\\\\-T|\\\\-B|\\\\-M|\\\\-A|\\\\-X|\\\\-W|\\\\-c|\\\\-R|\\\\-o|\\\\-x|\\\\-w|\\\\-r|\\\\b(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|xor)\"\n            }, {\n                token : \"comment\",\n                regex : \"#.*$\"\n            }, {\n                token : \"lparen\",\n                regex : \"[[({]\"\n            }, {\n                token : \"rparen\",\n                regex : \"[\\\\])}]\"\n            }, {\n                token : \"text\",\n                regex : \"\\\\s+\"\n            }\n        ],\n        \"qqstring\" : [\n            {\n                token : \"string\",\n                regex : '(?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?\"',\n                next : \"start\"\n            }, {\n                token : \"string\",\n                regex : '.+'\n            }\n        ],\n        \"qstring\" : [\n            {\n                token : \"string\",\n                regex : \"(?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?'\",\n                next : \"start\"\n            }, {\n                token : \"string\",\n                regex : '.+'\n            }\n        ],\n        \"block_comment\": [\n            {\n                token: \"comment.doc\", \n                regex: \"^=cut\\\\b\",\n                next: \"start\"\n            },\n            {\n                defaultToken: \"comment.doc\"\n            }\n        ]\n    };\n};\n\noop.inherits(PerlHighlightRules, TextHighlightRules);\n\nexports.PerlHighlightRules = PerlHighlightRules;\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar Range = acequire(\"../range\").Range;\n\nvar MatchingBraceOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        return line.match(/^\\s*/)[0];\n    };\n\n}).call(MatchingBraceOutdent.prototype);\n\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar Range = acequire(\"../../range\").Range;\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    \n    this.foldingStartMarker = /(\\{|\\[)[^\\}\\]]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{]*(\\}|\\])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n    \n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n    \n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n    \n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n    \n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        \n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        \n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n                \n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            \n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n            \n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    \n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            \n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        \n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/perl\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/perl_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/mode/folding/cstyle\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar PerlHighlightRules = acequire(\"./perl_highlight_rules\").PerlHighlightRules;\nvar MatchingBraceOutdent = acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar CStyleFoldMode = acequire(\"./folding/cstyle\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = PerlHighlightRules;\n    \n    this.$outdent = new MatchingBraceOutdent();\n    this.foldingRules = new CStyleFoldMode({start: \"^=(begin|item)\\\\b\", end: \"^=(cut)\\\\b\"});\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n\n    this.lineCommentStart = \"#\";\n    this.blockComment = [\n        {start: \"=begin\", end: \"=cut\", lineStartOnly: true},\n        {start: \"=item\", end: \"=cut\", lineStartOnly: true}\n    ];\n\n\n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n\n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\n            return indent;\n        }\n\n        if (state == \"start\") {\n            var match = line.match(/^.*[\\{\\(\\[:]\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        }\n\n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.$id = \"ace/mode/perl\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n\n\n\n// WEBPACK FOOTER //\n// /Users/dmp/Code/panneau/js/fields/code/node_modules/brace/mode/perl.js"],"sourceRoot":""}